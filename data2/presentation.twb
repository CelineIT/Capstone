<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0217.1203                               -->
<workbook original-version='18.1' source-build='2020.4.2 (20204.21.0217.1203)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='all3_clean' inline='true' name='federated.1qtvmbt1dg882111k341i1d4rxnl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='all3_clean' name='textscan.04ycq190en9njo19d61oz0yzzz0w'>
            <connection class='textscan' directory='C:/Users/Celine/Documents/NSS-data-analytics/Capstone/data2' filename='all3_clean.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.04ycq190en9njo19d61oz0yzzz0w' name='all3_clean.csv' table='[all3_clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy' name='year' ordinal='2' />
            <column datatype='integer' name='population' ordinal='3' />
            <column datatype='integer' name='Value_(1000MT)' ordinal='4' />
            <column datatype='integer' name='Value_grams_annually' ordinal='5' />
            <column datatype='integer' name='Value_grams_daily' ordinal='6' />
            <column datatype='real' name='Obesity_Rate' ordinal='7' />
            <column datatype='real' name='per_capita_gr_daily' ordinal='8' />
            <column datatype='string' name='Region_Code' ordinal='9' />
            <column datatype='string' name='Region' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.04ycq190en9njo19d61oz0yzzz0w' name='all3_clean.csv' table='[all3_clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy' name='year' ordinal='2' />
            <column datatype='integer' name='population' ordinal='3' />
            <column datatype='integer' name='Value_(1000MT)' ordinal='4' />
            <column datatype='integer' name='Value_grams_annually' ordinal='5' />
            <column datatype='integer' name='Value_grams_daily' ordinal='6' />
            <column datatype='real' name='Obesity_Rate' ordinal='7' />
            <column datatype='real' name='per_capita_gr_daily' ordinal='8' />
            <column datatype='string' name='Region_Code' ordinal='9' />
            <column datatype='string' name='Region' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all3_clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[all3_clean.csv]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[all3_clean.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[all3_clean.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[all3_clean.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value_(1000MT)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Value_(1000MT)]</local-name>
            <parent-name>[all3_clean.csv]</parent-name>
            <remote-alias>Value_(1000MT)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value_grams_annually</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Value_grams_annually]</local-name>
            <parent-name>[all3_clean.csv]</parent-name>
            <remote-alias>Value_grams_annually</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value_grams_daily</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Value_grams_daily]</local-name>
            <parent-name>[all3_clean.csv]</parent-name>
            <remote-alias>Value_grams_daily</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Obesity_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Obesity_Rate]</local-name>
            <parent-name>[all3_clean.csv]</parent-name>
            <remote-alias>Obesity_Rate</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>per_capita_gr_daily</remote-name>
            <remote-type>5</remote-type>
            <local-name>[per_capita_gr_daily]</local-name>
            <parent-name>[all3_clean.csv]</parent-name>
            <remote-alias>per_capita_gr_daily</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region_Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region_Code]</local-name>
            <parent-name>[all3_clean.csv]</parent-name>
            <remote-alias>Region_Code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[all3_clean.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ranking obesity' datatype='integer' name='[Calculation_9012828789470224384]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([Obesity_Rate]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Average function' datatype='real' name='[Calculation_9012828789596852227]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED year ([year]): SUM([Obesity_Rate])}&#13;&#10;/&#13;&#10;({ FIXED year ([year]): COUNTD([Country Name])}+1)' />
      </column>
      <column caption='obe ave FIXED' datatype='real' name='[Calculation_9012828789601280004]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED year ([year]): sum([Obesity_Rate])}&#13;&#10;/&#13;&#10;({ FIXED year ([year]): COUNTD([Country Name])}-10.55)' />
      </column>
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Obesity Rate' datatype='real' name='[Obesity_Rate]' role='measure' type='quantitative' />
      <column caption='Region Code' datatype='string' name='[Region_Code]' role='dimension' type='nominal' />
      <column caption='Value (1000MT)' datatype='integer' name='[Value_(1000MT)]' role='measure' type='quantitative' />
      <column caption='Value grams annually' datatype='integer' name='[Value_grams_annually]' role='measure' type='quantitative' />
      <column caption='Value grams daily' datatype='integer' name='[Value_grams_daily]' role='measure' type='quantitative' />
      <column datatype='string' name='[Year (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[year]' new-bin='true'>
          <bin default-name='false' value='&quot;1975-1979&quot;'>
            <value>#1975-01-01#</value>
            <value>#1976-01-01#</value>
            <value>#1977-01-01#</value>
            <value>#1978-01-01#</value>
            <value>#1979-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;1980&apos;s&quot;'>
            <value>#1980-01-01#</value>
            <value>#1981-01-01#</value>
            <value>#1982-01-01#</value>
            <value>#1983-01-01#</value>
            <value>#1984-01-01#</value>
            <value>#1985-01-01#</value>
            <value>#1986-01-01#</value>
            <value>#1987-01-01#</value>
            <value>#1988-01-01#</value>
            <value>#1989-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;1990&apos;s&quot;'>
            <value>#1990-01-01#</value>
            <value>#1991-01-01#</value>
            <value>#1992-01-01#</value>
            <value>#1993-01-01#</value>
            <value>#1994-01-01#</value>
            <value>#1995-01-01#</value>
            <value>#1996-01-01#</value>
            <value>#1997-01-01#</value>
            <value>#1998-01-01#</value>
            <value>#1999-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;2000&apos;s&quot;'>
            <value>#2000-01-01#</value>
            <value>#2001-01-01#</value>
            <value>#2002-01-01#</value>
            <value>#2003-01-01#</value>
            <value>#2004-01-01#</value>
            <value>#2005-01-01#</value>
            <value>#2006-01-01#</value>
            <value>#2007-01-01#</value>
            <value>#2008-01-01#</value>
            <value>#2009-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;2010-2016&quot;'>
            <value>#2010-01-01#</value>
            <value>#2011-01-01#</value>
            <value>#2012-01-01#</value>
            <value>#2013-01-01#</value>
            <value>#2014-01-01#</value>
            <value>#2015-01-01#</value>
            <value>#2016-01-01#</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='all3_clean.csv' datatype='table' name='[__tableau_internal_object_id__].[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]' role='measure' type='quantitative' />
      <column caption='Per Capita Gr Daily' datatype='real' name='[per_capita_gr_daily]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Obesity_Rate]' derivation='Attribute' name='[attr:Obesity_Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[per_capita_gr_daily]' derivation='Attribute' name='[attr:per_capita_gr_daily:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Attribute' name='[attr:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9012828789601280004]' derivation='Avg' name='[avg:Calculation_9012828789601280004:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Obesity_Rate]' derivation='Avg' name='[avg:Obesity_Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[per_capita_gr_daily]' derivation='Avg' name='[avg:per_capita_gr_daily:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Obesity_Rate]' derivation='Sum' name='[sum:Obesity_Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Value_grams_daily]' derivation='Sum' name='[sum:Value_grams_daily:qk]' pivot='key' type='quantitative' />
      <column-instance column='[per_capita_gr_daily]' derivation='Sum' name='[sum:per_capita_gr_daily:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country Name)' hidden='true' name='[Action (Country Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Name]' />
        </groupfilter>
      </group>
      <group caption='Action (Country Name,YEAR(Year))' hidden='true' name='[Action (Country Name,YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Name]' />
          <groupfilter function='level-members' level='[tyr:year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Country Name,Year (group))' hidden='true' name='[Action (Country Name,Year (group))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Name]' />
          <groupfilter function='level-members' level='[Year (group)]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country Name:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1qtvmbt1dg882111k341i1d4rxnl]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Calculation_9012828789601280004:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1qtvmbt1dg882111k341i1d4rxnl].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1qtvmbt1dg882111k341i1d4rxnl].[sum:Value_grams_daily:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0itwhuc11si8bu13xnz1h0t443y5].[sum:Obesity_Rate:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qtvmbt1dg882111k341i1d4rxnl].[attr:Obesity_Rate:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Obesity_Rate:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qtvmbt1dg882111k341i1d4rxnl].[sum:Obesity_Rate:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1qtvmbt1dg882111k341i1d4rxnl].[attr:per_capita_gr_daily:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1qtvmbt1dg882111k341i1d4rxnl].[sum:per_capita_gr_daily:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1qtvmbt1dg882111k341i1d4rxnl].[attr:population:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]&#10;[none:Country Name:nk]' type='palette'>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Calculation_9012828789601280004:qk]&quot;</bucket>
                <bucket>&quot;Bahrain&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Calculation_9012828789601280004:qk]&quot;</bucket>
                <bucket>&quot;Jordan&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Calculation_9012828789601280004:qk]&quot;</bucket>
                <bucket>&quot;Kuwait&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Calculation_9012828789601280004:qk]&quot;</bucket>
                <bucket>&quot;Lebanon&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Calculation_9012828789601280004:qk]&quot;</bucket>
                <bucket>&quot;Libya&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Calculation_9012828789601280004:qk]&quot;</bucket>
                <bucket>&quot;Qatar&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Calculation_9012828789601280004:qk]&quot;</bucket>
                <bucket>&quot;Samoa&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Calculation_9012828789601280004:qk]&quot;</bucket>
                <bucket>&quot;Saudi Arabia&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Calculation_9012828789601280004:qk]&quot;</bucket>
                <bucket>&quot;Tonga&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Calculation_9012828789601280004:qk]&quot;</bucket>
                <bucket>&quot;United States&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.0itwhuc11si8bu13xnz1h0t443y5'>
        <column caption='Obesity Rate' datatype='real' name='[Obesity_Rate]' role='measure' type='quantitative' />
        <column-instance column='[Obesity_Rate]' derivation='Sum' name='[sum:Obesity_Rate:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='all3_clean.csv' id='all3_clean.csv_D235762A448941F6B472DBDE26E83E47'>
            <properties context=''>
              <relation connection='textscan.04ycq190en9njo19d61oz0yzzz0w' name='all3_clean.csv' table='[all3_clean#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country Name' ordinal='0' />
                  <column datatype='string' name='Country Code' ordinal='1' />
                  <column datatype='date' date-parse-format='yyyy' name='year' ordinal='2' />
                  <column datatype='integer' name='population' ordinal='3' />
                  <column datatype='integer' name='Value_(1000MT)' ordinal='4' />
                  <column datatype='integer' name='Value_grams_annually' ordinal='5' />
                  <column datatype='integer' name='Value_grams_daily' ordinal='6' />
                  <column datatype='real' name='Obesity_Rate' ordinal='7' />
                  <column datatype='real' name='per_capita_gr_daily' ordinal='8' />
                  <column datatype='string' name='Region_Code' ordinal='9' />
                  <column datatype='string' name='Region' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='psd_sugar' inline='true' name='federated.1pzr4u11spbzvr1434xt20p71jyl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='psd_sugar' name='textscan.18soj541bx3d6c1fzlqbr1lykpm1'>
            <connection class='textscan' directory='C:/Users/Celine/Documents/NSS-data-analytics/Capstone/data2' filename='psd_sugar.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.18soj541bx3d6c1fzlqbr1lykpm1' name='population_clean_1960.csv' table='[population_clean_1960#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy' name='year' ordinal='2' />
            <column datatype='integer' name='population' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.18soj541bx3d6c1fzlqbr1lykpm1' name='psd_sugar.csv' table='[psd_sugar#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country_Code' ordinal='0' />
              <column datatype='string' name='Country_Name' ordinal='1' />
              <column datatype='date' date-parse-format='yyyy' name='Market_Year' ordinal='2' />
              <column datatype='integer' name='Value_(1000MT)' ordinal='3' />
              <column datatype='integer' name='Value_grams_annually' ordinal='4' />
              <column datatype='integer' name='Value_grams_daily' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.18soj541bx3d6c1fzlqbr1lykpm1' name='population_clean_1960.csv' table='[population_clean_1960#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country Name' ordinal='0' />
              <column datatype='string' name='Country Code' ordinal='1' />
              <column datatype='date' date-parse-format='yyyy' name='year' ordinal='2' />
              <column datatype='integer' name='population' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[psd_sugar.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[population_clean_1960.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_Code]</local-name>
            <parent-name>[psd_sugar.csv]</parent-name>
            <remote-alias>Country_Code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[psd_sugar.csv_54DC78570E61452A8065CE30E7B8A721]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_Name]</local-name>
            <parent-name>[psd_sugar.csv]</parent-name>
            <remote-alias>Country_Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[psd_sugar.csv_54DC78570E61452A8065CE30E7B8A721]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market_Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Market_Year]</local-name>
            <parent-name>[psd_sugar.csv]</parent-name>
            <remote-alias>Market_Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[psd_sugar.csv_54DC78570E61452A8065CE30E7B8A721]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value_(1000MT)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Value_(1000MT)]</local-name>
            <parent-name>[psd_sugar.csv]</parent-name>
            <remote-alias>Value_(1000MT)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[psd_sugar.csv_54DC78570E61452A8065CE30E7B8A721]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value_grams_annually</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Value_grams_annually]</local-name>
            <parent-name>[psd_sugar.csv]</parent-name>
            <remote-alias>Value_grams_annually</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[psd_sugar.csv_54DC78570E61452A8065CE30E7B8A721]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value_grams_daily</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Value_grams_daily]</local-name>
            <parent-name>[psd_sugar.csv]</parent-name>
            <remote-alias>Value_grams_daily</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[psd_sugar.csv_54DC78570E61452A8065CE30E7B8A721]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[population_clean_1960.csv]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_clean_1960.csv_4C7CA561F9464FB595294C4356806E53]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[population_clean_1960.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_clean_1960.csv_4C7CA561F9464FB595294C4356806E53]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[population_clean_1960.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_clean_1960.csv_4C7CA561F9464FB595294C4356806E53]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[population_clean_1960.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_clean_1960.csv_4C7CA561F9464FB595294C4356806E53]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='per capita' datatype='real' name='[Calculation_7250513959910506498]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Value_grams_daily]/[population]' />
      </column>
      <column caption='Country Code1' datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name (group) 1]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country_Name]' new-bin='true'>
          <bin default-name='true' value='&quot;Russia &amp; Union of Soviet Socialist Repu&quot;'>
            <value>&quot;Russia&quot;</value>
            <value>&quot;Union of Soviet Socialist Repu&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country Name (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country_Name]' new-bin='true'>
          <bin default-name='true' value='&quot;Russia &amp; Union of Soviet Socialist Repu&quot;'>
            <value>&quot;Russia&quot;</value>
            <value>&quot;Union of Soviet Socialist Repu&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Country Name1' datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Code' datatype='string' name='[Country_Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[Country_Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Market Year' datatype='date' name='[Market_Year]' role='dimension' type='quantitative' />
      <column caption='Value (1000MT)' datatype='integer' name='[Value_(1000MT)]' role='measure' type='quantitative' />
      <column caption='Value grams annually' datatype='integer' name='[Value_grams_annually]' role='measure' type='quantitative' />
      <column caption='Value grams daily' datatype='integer' name='[Value_grams_daily]' role='measure' type='quantitative' />
      <column datatype='string' name='[Year (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[year]' new-bin='true'>
          <bin default-name='false' value='&quot;1960&apos;s&quot;'>
            <value>#1960-01-01#</value>
            <value>#1961-01-01#</value>
            <value>#1962-01-01#</value>
            <value>#1963-01-01#</value>
            <value>#1964-01-01#</value>
            <value>#1965-01-01#</value>
            <value>#1966-01-01#</value>
            <value>#1967-01-01#</value>
            <value>#1968-01-01#</value>
            <value>#1969-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;1970&apos;s&quot;'>
            <value>#1970-01-01#</value>
            <value>#1971-01-01#</value>
            <value>#1972-01-01#</value>
            <value>#1973-01-01#</value>
            <value>#1974-01-01#</value>
            <value>#1975-01-01#</value>
            <value>#1976-01-01#</value>
            <value>#1977-01-01#</value>
            <value>#1978-01-01#</value>
            <value>#1979-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;1980&apos;s&quot;'>
            <value>#1980-01-01#</value>
            <value>#1981-01-01#</value>
            <value>#1982-01-01#</value>
            <value>#1983-01-01#</value>
            <value>#1984-01-01#</value>
            <value>#1985-01-01#</value>
            <value>#1986-01-01#</value>
            <value>#1987-01-01#</value>
            <value>#1988-01-01#</value>
            <value>#1989-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;1990&apos;s&quot;'>
            <value>#1990-01-01#</value>
            <value>#1991-01-01#</value>
            <value>#1992-01-01#</value>
            <value>#1993-01-01#</value>
            <value>#1994-01-01#</value>
            <value>#1995-01-01#</value>
            <value>#1996-01-01#</value>
            <value>#1997-01-01#</value>
            <value>#1998-01-01#</value>
            <value>#1999-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;2000&apos;s&quot;'>
            <value>#2000-01-01#</value>
            <value>#2001-01-01#</value>
            <value>#2002-01-01#</value>
            <value>#2003-01-01#</value>
            <value>#2004-01-01#</value>
            <value>#2005-01-01#</value>
            <value>#2006-01-01#</value>
            <value>#2007-01-01#</value>
            <value>#2008-01-01#</value>
            <value>#2009-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;2010-2020&quot;'>
            <value>#2010-01-01#</value>
            <value>#2011-01-01#</value>
            <value>#2012-01-01#</value>
            <value>#2013-01-01#</value>
            <value>#2014-01-01#</value>
            <value>#2015-01-01#</value>
            <value>#2016-01-01#</value>
            <value>#2017-01-01#</value>
            <value>#2018-01-01#</value>
            <value>#2019-01-01#</value>
            <value>#2020-01-01#</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='population_clean_1960.csv' datatype='table' name='[__tableau_internal_object_id__].[population_clean_1960.csv_4C7CA561F9464FB595294C4356806E53]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='psd_sugar.csv' datatype='table' name='[__tableau_internal_object_id__].[psd_sugar.csv_54DC78570E61452A8065CE30E7B8A721]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Value_grams_daily]' derivation='Attribute' name='[attr:Value_grams_daily:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country_Name]' derivation='None' name='[none:Country_Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Value_grams_daily]' derivation='Sum' name='[sum:Value_grams_daily:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Market_Year]' derivation='Year-Trunc' name='[tyr:Market_Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Market_Year]' derivation='Year' name='[yr:Market_Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country Name (group),Country Name,YEAR(Market Year))' hidden='true' name='[Action (Country Name (group),Country Name,YEAR(Market Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Name (group)]' />
          <groupfilter function='level-members' level='[Country_Name]' />
          <groupfilter function='level-members' level='[yr:Market_Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Country Name (group),YEAR(Market Year))' hidden='true' name='[Action (Country Name (group),YEAR(Market Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Name (group)]' />
          <groupfilter function='level-members' level='[yr:Market_Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Country Name,YEAR(Market Year))' hidden='true' name='[Action (Country Name,YEAR(Market Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country_Name]' />
          <groupfilter function='level-members' level='[yr:Market_Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Country Name1,Country Name,YEAR(Market Year))' hidden='true' name='[Action (Country Name1,Country Name,YEAR(Market Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Name]' />
          <groupfilter function='level-members' level='[Country_Name]' />
          <groupfilter function='level-members' level='[tyr:Market_Year:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.162aqg400578up11h4k980hif3px].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pzr4u11spbzvr1434xt20p71jyl].[attr:Value_grams_daily:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pzr4u11spbzvr1434xt20p71jyl].[sum:Value_grams_daily:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Early-demographic dividend&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IDA only&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Post-demographic dividend&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Korea, Dem. People’s Rep.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Not classified&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pre-demographic dividend&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Market_Year:ok]' palette='tableau10_10_0' type='palette'>
            <map to='#499894'>
              <bucket>1968</bucket>
            </map>
            <map to='#499894'>
              <bucket>1988</bucket>
            </map>
            <map to='#499894'>
              <bucket>2008</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1960</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2020</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1964</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1984</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2000</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2004</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>1990</bucket>
            </map>
            <map to='#79706e'>
              <bucket>1972</bucket>
            </map>
            <map to='#79706e'>
              <bucket>1992</bucket>
            </map>
            <map to='#79706e'>
              <bucket>2012</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>1969</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>1989</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2009</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>1965</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>1985</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2005</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>1978</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>1998</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>2018</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1961</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1981</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2001</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>1976</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>1996</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2016</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1966</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1986</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2006</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>1973</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>1993</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2013</bucket>
            </map>
            <map to='#d37295'>
              <bucket>1974</bucket>
            </map>
            <map to='#d37295'>
              <bucket>1994</bucket>
            </map>
            <map to='#d37295'>
              <bucket>2014</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>1977</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>1997</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>2017</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>1979</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>1999</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>2019</bucket>
            </map>
            <map to='#e15759'>
              <bucket>1980</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2010</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2021</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1967</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1987</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2007</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1962</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1970</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1982</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2002</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>1975</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>1995</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>2015</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>1971</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>1991</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2011</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>1963</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>1983</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2003</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Country Name (group)]' palette='tableau10_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;US Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fr.Ter.Africa-Issas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Netherlands Antilles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;French West Indies&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Former Czechoslovakia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yemen (Aden)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Former Yugoslavia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gilbert and Ellice Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen (Sanaa)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vanuatu/New Hebrides&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Union of Soviet Socialist Repu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burkina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Country Name (group) 1]' palette='tableau10_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;US Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Russia &amp; Union of Soviet Socialist Repu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fr.Ter.Africa-Issas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Netherlands Antilles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;French West Indies&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Former Czechoslovakia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yemen (Aden)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Former Yugoslavia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Union of Soviet Socialist Repu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gilbert and Ellice Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen (Sanaa)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vanuatu/New Hebrides&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burkina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country_Name:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;US Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fr.Ter.Africa-Issas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Netherlands Antilles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;French West Indies&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Former Czechoslovakia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yemen (Aden)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Former Yugoslavia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Union of Soviet Socialist Repu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gilbert and Ellice Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen (Sanaa)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vanuatu/New Hebrides&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burkina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Country Name' />
        <field-sort-custom-order field='Country Code' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='population' />
      </field-sort-info>
      <datasource-dependencies datasource='federated.162aqg400578up11h4k980hif3px'>
        <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
        <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='population_clean_1960.csv' id='population_clean_1960.csv_4C7CA561F9464FB595294C4356806E53'>
            <properties context=''>
              <relation connection='textscan.18soj541bx3d6c1fzlqbr1lykpm1' name='population_clean_1960.csv' table='[population_clean_1960#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country Name' ordinal='0' />
                  <column datatype='string' name='Country Code' ordinal='1' />
                  <column datatype='date' date-parse-format='yyyy' name='year' ordinal='2' />
                  <column datatype='integer' name='population' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='psd_sugar.csv' id='psd_sugar.csv_54DC78570E61452A8065CE30E7B8A721'>
            <properties context=''>
              <relation connection='textscan.18soj541bx3d6c1fzlqbr1lykpm1' name='psd_sugar.csv' table='[psd_sugar#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country_Code' ordinal='0' />
                  <column datatype='string' name='Country_Name' ordinal='1' />
                  <column datatype='date' date-parse-format='yyyy' name='Market_Year' ordinal='2' />
                  <column datatype='integer' name='Value_(1000MT)' ordinal='3' />
                  <column datatype='integer' name='Value_grams_annually' ordinal='4' />
                  <column datatype='integer' name='Value_grams_daily' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Country_Name]' />
                <expression op='[Country Name]' />
              </expression>
              <expression op='='>
                <expression op='[Market_Year]' />
                <expression op='[year]' />
              </expression>
              <expression op='='>
                <expression op='[Country_Code]' />
                <expression op='[Country Code]' />
              </expression>
            </expression>
            <first-end-point object-id='psd_sugar.csv_54DC78570E61452A8065CE30E7B8A721' />
            <second-end-point object-id='population_clean_1960.csv_4C7CA561F9464FB595294C4356806E53' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='population_clean_1960' inline='true' name='federated.162aqg400578up11h4k980hif3px' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='population_clean_1960' name='textscan.1os7vtj1um1o581bw33pq1i3qltt'>
            <connection class='textscan' directory='C:/Users/Celine/Documents/NSS-data-analytics/Capstone/data2' filename='population_clean_1960.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1os7vtj1um1o581bw33pq1i3qltt' name='population_clean_1960.csv' table='[population_clean_1960#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy' name='year' ordinal='2' />
            <column datatype='integer' name='population' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1os7vtj1um1o581bw33pq1i3qltt' name='population_clean_1960.csv' table='[population_clean_1960#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy' name='year' ordinal='2' />
            <column datatype='integer' name='population' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[population_clean_1960.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[population_clean_1960.csv]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_clean_1960.csv_97300A9D51674028B3B1EF8DF209C6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[population_clean_1960.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_clean_1960.csv_97300A9D51674028B3B1EF8DF209C6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[population_clean_1960.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_clean_1960.csv_97300A9D51674028B3B1EF8DF209C6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[population_clean_1960.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_clean_1960.csv_97300A9D51674028B3B1EF8DF209C6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ranked pop' datatype='integer' name='[Calculation_9012828789567815682]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([population]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='population_clean_1960.csv' datatype='table' name='[__tableau_internal_object_id__].[population_clean_1960.csv_97300A9D51674028B3B1EF8DF209C6A3]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country Name:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Early-demographic dividend&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IDA only&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Post-demographic dividend&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Korea, Dem. People’s Rep.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Not classified&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pre-demographic dividend&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <filter class='categorical' column='[Country Name]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Country Name]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[Country Name]' member='&quot;Arab World&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;Central African Republic&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;Central Europe and the Baltics&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;Early-demographic dividend&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;East Asia &amp; Pacific&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;Euro area&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;Europe &amp; Central Asia&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;European Union&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;Fragile and conflict affected situations&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;Heavily indebted poor countries (HIPC)&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;IDA only&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;Latin America &amp; Caribbean&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;Least developed countries: UN classification&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;Middle East &amp; North Africa&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;North America&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;OECD members&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;Other small states&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;Pacific island small states&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;Post-demographic dividend&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;Pre-demographic dividend&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;Small states&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;South Africa&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;South Asia&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;South Asia (IDA &amp; IBRD)&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;Sub-Saharan Africa&quot;' />
            <groupfilter function='member' level='[Country Name]' member='&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;' />
          </groupfilter>
        </groupfilter>
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='population_clean_1960.csv' id='population_clean_1960.csv_97300A9D51674028B3B1EF8DF209C6A3'>
            <properties context=''>
              <relation connection='textscan.1os7vtj1um1o581bw33pq1i3qltt' name='population_clean_1960.csv' table='[population_clean_1960#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country Name' ordinal='0' />
                  <column datatype='string' name='Country Code' ordinal='1' />
                  <column datatype='date' date-parse-format='yyyy' name='year' ordinal='2' />
                  <column datatype='integer' name='population' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='obesity_world_original_clean' inline='true' name='federated.0itwhuc11si8bu13xnz1h0t443y5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='obesity_world_original_clean' name='textscan.0hdh88x0jxwrl61647rf50ic3xdo'>
            <connection class='textscan' directory='C:/Users/Celine/Documents/NSS-data-analytics/Capstone/data2' filename='obesity_world_original_clean.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0hdh88x0jxwrl61647rf50ic3xdo' name='obesity_world_original_clean.csv' table='[obesity_world_original_clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='0' />
            <column datatype='string' name='Region_Code' ordinal='1' />
            <column datatype='string' name='Region' ordinal='2' />
            <column datatype='string' name='Country_Code' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='real' name='Obesity_Rate' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0hdh88x0jxwrl61647rf50ic3xdo' name='obesity_world_original_clean.csv' table='[obesity_world_original_clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='0' />
            <column datatype='string' name='Region_Code' ordinal='1' />
            <column datatype='string' name='Region' ordinal='2' />
            <column datatype='string' name='Country_Code' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='real' name='Obesity_Rate' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[obesity_world_original_clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[obesity_world_original_clean.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[obesity_world_original_clean.csv_7D017FAA44B740F5B7420D603EAF375C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region_Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region_Code]</local-name>
            <parent-name>[obesity_world_original_clean.csv]</parent-name>
            <remote-alias>Region_Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[obesity_world_original_clean.csv_7D017FAA44B740F5B7420D603EAF375C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[obesity_world_original_clean.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[obesity_world_original_clean.csv_7D017FAA44B740F5B7420D603EAF375C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_Code]</local-name>
            <parent-name>[obesity_world_original_clean.csv]</parent-name>
            <remote-alias>Country_Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[obesity_world_original_clean.csv_7D017FAA44B740F5B7420D603EAF375C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[obesity_world_original_clean.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[obesity_world_original_clean.csv_7D017FAA44B740F5B7420D603EAF375C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Obesity_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Obesity_Rate]</local-name>
            <parent-name>[obesity_world_original_clean.csv]</parent-name>
            <remote-alias>Obesity_Rate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[obesity_world_original_clean.csv_7D017FAA44B740F5B7420D603EAF375C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' new-bin='true'>
          <bin default-name='false' value='&quot;European Union&quot;'>
            <value>&quot;Austria&quot;</value>
            <value>&quot;Belgium&quot;</value>
            <value>&quot;Bulgaria&quot;</value>
            <value>&quot;Croatia&quot;</value>
            <value>&quot;Cyprus&quot;</value>
            <value>&quot;Czech Republic&quot;</value>
            <value>&quot;Denmark&quot;</value>
            <value>&quot;Estonia&quot;</value>
            <value>&quot;Finland&quot;</value>
            <value>&quot;France&quot;</value>
            <value>&quot;Germany&quot;</value>
            <value>&quot;Greece&quot;</value>
            <value>&quot;Hungary&quot;</value>
            <value>&quot;Ireland&quot;</value>
            <value>&quot;Italy&quot;</value>
            <value>&quot;Latvia&quot;</value>
            <value>&quot;Lithuania&quot;</value>
            <value>&quot;Luxembourg&quot;</value>
            <value>&quot;Malta&quot;</value>
            <value>&quot;Netherlands&quot;</value>
            <value>&quot;Poland&quot;</value>
            <value>&quot;Portugal&quot;</value>
            <value>&quot;Romania&quot;</value>
            <value>&quot;Slovakia&quot;</value>
            <value>&quot;Slovenia&quot;</value>
            <value>&quot;Spain&quot;</value>
            <value>&quot;Sweden&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Code' datatype='string' name='[Country_Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Obesity Rate' datatype='real' name='[Obesity_Rate]' role='measure' type='quantitative' />
      <column caption='Region Code' datatype='string' name='[Region_Code]' role='dimension' type='nominal' />
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='obesity_world_original_clean.csv' datatype='table' name='[__tableau_internal_object_id__].[obesity_world_original_clean.csv_7D017FAA44B740F5B7420D603EAF375C]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Country (group)]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='obesity_world_original_clean.csv' id='obesity_world_original_clean.csv_7D017FAA44B740F5B7420D603EAF375C'>
            <properties context=''>
              <relation connection='textscan.0hdh88x0jxwrl61647rf50ic3xdo' name='obesity_world_original_clean.csv' table='[obesity_world_original_clean#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='0' />
                  <column datatype='string' name='Region_Code' ordinal='1' />
                  <column datatype='string' name='Region' ordinal='2' />
                  <column datatype='string' name='Country_Code' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                  <column datatype='real' name='Obesity_Rate' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sugar year' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='YEAR(Market Year)' />
        <param name='target' value='Sugar year' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sugar year' type='sheet' worksheet='Sugar2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sugar year' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='PerCap' type='sheet' worksheet='PerCap1' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='PerCap' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Obesity Rate' type='sheet' worksheet='Obe bar' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Obesity Rate' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='PerCap' type='sheet' worksheet='PerCap2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='PerCap' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Obesity Rate' type='sheet' worksheet='obe map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Obesity Rate' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Obesity Rate' type='sheet' worksheet='Obe line' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Obesity Rate' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Obe bar'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all3_clean' name='federated.1qtvmbt1dg882111k341i1d4rxnl' />
          </datasources>
          <datasource-dependencies datasource='federated.1qtvmbt1dg882111k341i1d4rxnl'>
            <column caption='Ranking obesity' datatype='integer' name='[Calculation_9012828789470224384]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM([Obesity_Rate]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='obe ave FIXED' datatype='real' name='[Calculation_9012828789601280004]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED year ([year]): sum([Obesity_Rate])}&#13;&#10;/&#13;&#10;({ FIXED year ([year]): COUNTD([Country Name])}-10.55)' />
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Obesity Rate' datatype='real' name='[Obesity_Rate]' role='measure' type='quantitative' />
            <column-instance column='[Obesity_Rate]' derivation='Attribute' name='[attr:Obesity_Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9012828789601280004]' derivation='Avg' name='[avg:Calculation_9012828789601280004:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_9012828789470224384]' derivation='User' name='[usr:Calculation_9012828789470224384:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.1qtvmbt1dg882111k341i1d4rxnl].[Country Name]' ordering-type='Field' />
            </column-instance>
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[Action (Country Name,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country Name]' />
              <groupfilter function='level-members' level='[tyr:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Obesity_Rate])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]</column>
            <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[Action (Country Name,YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Calculation_9012828789601280004:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1qtvmbt1dg882111k341i1d4rxnl].[usr:Calculation_9012828789470224384:ok:1]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' />
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qtvmbt1dg882111k341i1d4rxnl].[attr:Obesity_Rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' />
              <text column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' />
              <text column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[attr:Obesity_Rate:qk]' />
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Calculation_9012828789601280004:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <text column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Calculation_9012828789601280004:qk]' />
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]' />
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='10'>&lt;</run>
                <run fontsize='10'>[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Calculation_9012828789601280004:qk]</run>
                <run fontsize='10'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1qtvmbt1dg882111k341i1d4rxnl].[attr:Obesity_Rate:qk] + [federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Calculation_9012828789601280004:qk])</rows>
        <cols>[federated.1qtvmbt1dg882111k341i1d4rxnl].[usr:Calculation_9012828789470224384:ok:1]</cols>
        <pages>
          <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:ok]</column>
        </pages>
        <page-trail-options mark-type='all' size='5' />
      </table>
      <simple-id uuid='{1426203F-E885-432D-8DF3-93CE1B6E2A14}' />
    </worksheet>
    <worksheet name='Obe line'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all3_clean' name='federated.1qtvmbt1dg882111k341i1d4rxnl' />
          </datasources>
          <datasource-dependencies datasource='federated.1qtvmbt1dg882111k341i1d4rxnl'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Obesity Rate' datatype='real' name='[Obesity_Rate]' role='measure' type='quantitative' />
            <column-instance column='[Obesity_Rate]' derivation='Attribute' name='[attr:Obesity_Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Obesity_Rate]' derivation='Sum' name='[sum:Obesity_Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[Country Name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[Action (Country Name,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country Name]' />
              <groupfilter function='level-members' level='[tyr:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Obesity_Rate])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' direction='DESC' using='[federated.1qtvmbt1dg882111k341i1d4rxnl].[sum:Obesity_Rate:qk]' />
          <slices>
            <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]</column>
            <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[Action (Country Name)]</column>
            <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[Action (Country Name,YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]' scope='cols' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' />
              <text column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qtvmbt1dg882111k341i1d4rxnl].[attr:Obesity_Rate:qk]</rows>
        <cols>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]</cols>
        <pages>
          <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' marks='false' />
      </table>
      <simple-id uuid='{CC039D60-9E6F-4787-AD23-8FB2D2D0D68F}' />
    </worksheet>
    <worksheet name='Obe vs Per Capita bar'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all3_clean' name='federated.1qtvmbt1dg882111k341i1d4rxnl' />
          </datasources>
          <datasource-dependencies datasource='federated.1qtvmbt1dg882111k341i1d4rxnl'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='all3_clean.csv' datatype='integer' name='[__tableau_internal_object_id__].[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]' role='measure' type='quantitative' />
            <column caption='Obesity Rate' datatype='real' name='[Obesity_Rate]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='all3_clean.csv' datatype='table' name='[__tableau_internal_object_id__].[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:all3_clean.csv_D235762A448941F6B472DBDE26E83E47:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Obesity_Rate]' derivation='Avg' name='[avg:Obesity_Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[per_capita_gr_daily]' derivation='Avg' name='[avg:per_capita_gr_daily:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column caption='Per Capita Gr Daily' datatype='real' name='[per_capita_gr_daily]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Obesity_Rate])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' direction='ASC' using='[federated.1qtvmbt1dg882111k341i1d4rxnl].[__tableau_internal_object_id__].[cnt:all3_clean.csv_D235762A448941F6B472DBDE26E83E47:qk]' />
          <slices>
            <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]</column>
            <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Obesity_Rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Obesity_Rate:qk] + [federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk])</rows>
        <cols>[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]</cols>
        <pages>
          <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{2E9F94B6-5D41-4247-BFFA-0B87EB32157C}' />
    </worksheet>
    <worksheet name='Obe vs Per Capita bar line (2)'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all3_clean' name='federated.1qtvmbt1dg882111k341i1d4rxnl' />
          </datasources>
          <datasource-dependencies datasource='federated.1qtvmbt1dg882111k341i1d4rxnl'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='all3_clean.csv' datatype='integer' name='[__tableau_internal_object_id__].[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]' role='measure' type='quantitative' />
            <column caption='Obesity Rate' datatype='real' name='[Obesity_Rate]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='all3_clean.csv' datatype='table' name='[__tableau_internal_object_id__].[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:all3_clean.csv_D235762A448941F6B472DBDE26E83E47:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Obesity_Rate]' derivation='Avg' name='[avg:Obesity_Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[per_capita_gr_daily]' derivation='Avg' name='[avg:per_capita_gr_daily:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column caption='Per Capita Gr Daily' datatype='real' name='[per_capita_gr_daily]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[Action (Country Name,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country Name]' />
              <groupfilter function='level-members' level='[tyr:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([per_capita_gr_daily])' function='order' user:ui-marker='order'>
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' direction='ASC' using='[federated.1qtvmbt1dg882111k341i1d4rxnl].[__tableau_internal_object_id__].[cnt:all3_clean.csv_D235762A448941F6B472DBDE26E83E47:qk]' />
          <slices>
            <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]</column>
            <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[Action (Country Name,YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Obesity_Rate:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Obesity_Rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk] * ([federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Obesity_Rate:qk] + [federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk]))</rows>
        <cols>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]</cols>
        <pages>
          <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' marks='false' />
      </table>
      <simple-id uuid='{D593EB45-E276-4776-855D-7644C7957348}' />
    </worksheet>
    <worksheet name='Obe#'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all3_clean' name='federated.1qtvmbt1dg882111k341i1d4rxnl' />
            <datasource caption='obesity_world_original_clean' name='federated.0itwhuc11si8bu13xnz1h0t443y5' />
          </datasources>
          <datasource-dependencies datasource='federated.0itwhuc11si8bu13xnz1h0t443y5'>
            <column caption='Obesity Rate' datatype='real' name='[Obesity_Rate]' role='measure' type='quantitative' />
            <column-instance column='[Obesity_Rate]' derivation='Avg' name='[avg:Obesity_Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1qtvmbt1dg882111k341i1d4rxnl'>
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0itwhuc11si8bu13xnz1h0t443y5].[avg:Obesity_Rate:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#e15759' fontname='Tableau Bold' fontsize='24'>Average Obesity Rate </run>
                <run fontcolor='#e15759' fontname='Tableau Bold' fontsize='24'><![CDATA[<[federated.0itwhuc11si8bu13xnz1h0t443y5].[avg:Obesity_Rate:qk]>]]></run>
                <run fontcolor='#e15759' fontname='Tableau Bold' fontsize='24'>%</run>
                <run>Æ&#10;</run>
                <run fontcolor='#e15759' fontname='Tableau Bold' fontsize='24'>Worldwide</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{3C88C585-6962-4882-AA59-DD5EF16D4AE3}' />
    </worksheet>
    <worksheet name='Ove/Cap line'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all3_clean' name='federated.1qtvmbt1dg882111k341i1d4rxnl' />
          </datasources>
          <datasource-dependencies datasource='federated.1qtvmbt1dg882111k341i1d4rxnl'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='all3_clean.csv' datatype='integer' name='[__tableau_internal_object_id__].[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]' role='measure' type='quantitative' />
            <column caption='Obesity Rate' datatype='real' name='[Obesity_Rate]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='all3_clean.csv' datatype='table' name='[__tableau_internal_object_id__].[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:all3_clean.csv_D235762A448941F6B472DBDE26E83E47:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Obesity_Rate]' derivation='Avg' name='[avg:Obesity_Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[per_capita_gr_daily]' derivation='Avg' name='[avg:per_capita_gr_daily:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column caption='Per Capita Gr Daily' datatype='real' name='[per_capita_gr_daily]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[Action (Country Name,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country Name]' />
              <groupfilter function='level-members' level='[tyr:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Obesity_Rate])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' direction='ASC' using='[federated.1qtvmbt1dg882111k341i1d4rxnl].[__tableau_internal_object_id__].[cnt:all3_clean.csv_D235762A448941F6B472DBDE26E83E47:qk]' />
          <slices>
            <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]</column>
            <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk]</column>
            <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[Action (Country Name,YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Obesity_Rate:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]' scope='cols' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Obesity_Rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk] * ([federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Obesity_Rate:qk] + [federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk]))</rows>
        <cols>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]</cols>
        <pages>
          <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' marks='false' />
      </table>
      <simple-id uuid='{7DECCF06-BD62-4F29-9070-3EFB731011CF}' />
    </worksheet>
    <worksheet name='PerCap#'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all3_clean' name='federated.1qtvmbt1dg882111k341i1d4rxnl' />
          </datasources>
          <datasource-dependencies datasource='federated.1qtvmbt1dg882111k341i1d4rxnl'>
            <column-instance column='[per_capita_gr_daily]' derivation='Avg' name='[avg:per_capita_gr_daily:qk]' pivot='key' type='quantitative' />
            <column caption='Per Capita Gr Daily' datatype='real' name='[per_capita_gr_daily]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#f28e2b' fontname='Tableau Bold' fontsize='20'><![CDATA[<[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk]>g of sugar PER CAPITA]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#f28e2b' fontname='Tableau Bold' fontsize='20'>consumed daily Worldwide</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{70283853-D1A2-49EC-BB15-55403AED5E68}' />
    </worksheet>
    <worksheet name='PerCap1'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all3_clean' name='federated.1qtvmbt1dg882111k341i1d4rxnl' />
          </datasources>
          <datasource-dependencies datasource='federated.1qtvmbt1dg882111k341i1d4rxnl'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Year (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[year]' new-bin='true'>
                <bin default-name='false' value='&quot;1975-1979&quot;'>
                  <value>#1975-01-01#</value>
                  <value>#1976-01-01#</value>
                  <value>#1977-01-01#</value>
                  <value>#1978-01-01#</value>
                  <value>#1979-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1980&apos;s&quot;'>
                  <value>#1980-01-01#</value>
                  <value>#1981-01-01#</value>
                  <value>#1982-01-01#</value>
                  <value>#1983-01-01#</value>
                  <value>#1984-01-01#</value>
                  <value>#1985-01-01#</value>
                  <value>#1986-01-01#</value>
                  <value>#1987-01-01#</value>
                  <value>#1988-01-01#</value>
                  <value>#1989-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1990&apos;s&quot;'>
                  <value>#1990-01-01#</value>
                  <value>#1991-01-01#</value>
                  <value>#1992-01-01#</value>
                  <value>#1993-01-01#</value>
                  <value>#1994-01-01#</value>
                  <value>#1995-01-01#</value>
                  <value>#1996-01-01#</value>
                  <value>#1997-01-01#</value>
                  <value>#1998-01-01#</value>
                  <value>#1999-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;2000&apos;s&quot;'>
                  <value>#2000-01-01#</value>
                  <value>#2001-01-01#</value>
                  <value>#2002-01-01#</value>
                  <value>#2003-01-01#</value>
                  <value>#2004-01-01#</value>
                  <value>#2005-01-01#</value>
                  <value>#2006-01-01#</value>
                  <value>#2007-01-01#</value>
                  <value>#2008-01-01#</value>
                  <value>#2009-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;2010-2016&quot;'>
                  <value>#2010-01-01#</value>
                  <value>#2011-01-01#</value>
                  <value>#2012-01-01#</value>
                  <value>#2013-01-01#</value>
                  <value>#2014-01-01#</value>
                  <value>#2015-01-01#</value>
                  <value>#2016-01-01#</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[per_capita_gr_daily]' derivation='Avg' name='[avg:per_capita_gr_daily:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column caption='Per Capita Gr Daily' datatype='real' name='[per_capita_gr_daily]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Eswatini&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Arab Emirates&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' direction='DESC' using='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk]' />
          <filter class='quantitative' column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]' included-values='in-range' />
          <slices>
            <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]</column>
            <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk]</rows>
        <cols>([federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk] / [federated.1qtvmbt1dg882111k341i1d4rxnl].[Year (group)])</cols>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{9224A8B2-F6D4-4293-B1E6-FB07941B2CC1}' />
    </worksheet>
    <worksheet name='PerCap2'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all3_clean' name='federated.1qtvmbt1dg882111k341i1d4rxnl' />
          </datasources>
          <datasource-dependencies datasource='federated.1qtvmbt1dg882111k341i1d4rxnl'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='all3_clean.csv' datatype='integer' name='[__tableau_internal_object_id__].[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[year]' new-bin='true'>
                <bin default-name='false' value='&quot;1975-1979&quot;'>
                  <value>#1975-01-01#</value>
                  <value>#1976-01-01#</value>
                  <value>#1977-01-01#</value>
                  <value>#1978-01-01#</value>
                  <value>#1979-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1980&apos;s&quot;'>
                  <value>#1980-01-01#</value>
                  <value>#1981-01-01#</value>
                  <value>#1982-01-01#</value>
                  <value>#1983-01-01#</value>
                  <value>#1984-01-01#</value>
                  <value>#1985-01-01#</value>
                  <value>#1986-01-01#</value>
                  <value>#1987-01-01#</value>
                  <value>#1988-01-01#</value>
                  <value>#1989-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1990&apos;s&quot;'>
                  <value>#1990-01-01#</value>
                  <value>#1991-01-01#</value>
                  <value>#1992-01-01#</value>
                  <value>#1993-01-01#</value>
                  <value>#1994-01-01#</value>
                  <value>#1995-01-01#</value>
                  <value>#1996-01-01#</value>
                  <value>#1997-01-01#</value>
                  <value>#1998-01-01#</value>
                  <value>#1999-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;2000&apos;s&quot;'>
                  <value>#2000-01-01#</value>
                  <value>#2001-01-01#</value>
                  <value>#2002-01-01#</value>
                  <value>#2003-01-01#</value>
                  <value>#2004-01-01#</value>
                  <value>#2005-01-01#</value>
                  <value>#2006-01-01#</value>
                  <value>#2007-01-01#</value>
                  <value>#2008-01-01#</value>
                  <value>#2009-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;2010-2016&quot;'>
                  <value>#2010-01-01#</value>
                  <value>#2011-01-01#</value>
                  <value>#2012-01-01#</value>
                  <value>#2013-01-01#</value>
                  <value>#2014-01-01#</value>
                  <value>#2015-01-01#</value>
                  <value>#2016-01-01#</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='all3_clean.csv' datatype='table' name='[__tableau_internal_object_id__].[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[all3_clean.csv_D235762A448941F6B472DBDE26E83E47]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:all3_clean.csv_D235762A448941F6B472DBDE26E83E47:qk]' pivot='key' type='quantitative' />
            <column-instance column='[per_capita_gr_daily]' derivation='Attribute' name='[attr:per_capita_gr_daily:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column caption='Per Capita Gr Daily' datatype='real' name='[per_capita_gr_daily]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[Action (Country Name,Year (group))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country Name]' />
              <groupfilter function='level-members' level='[Year (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([per_capita_gr_daily])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' direction='DESC' using='[federated.1qtvmbt1dg882111k341i1d4rxnl].[__tableau_internal_object_id__].[cnt:all3_clean.csv_D235762A448941F6B472DBDE26E83E47:qk]' />
          <filter class='quantitative' column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]' included-values='in-range' />
          <slices>
            <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]</column>
            <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]</column>
            <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[Action (Country Name,Year (group))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' />
              <text column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' />
              <lod column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[attr:per_capita_gr_daily:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qtvmbt1dg882111k341i1d4rxnl].[attr:per_capita_gr_daily:qk]</rows>
        <cols>[federated.1qtvmbt1dg882111k341i1d4rxnl].[yr:year:ok]</cols>
      </table>
      <simple-id uuid='{9586A8BC-7152-4C15-AB71-E3CFE11ADD47}' />
    </worksheet>
    <worksheet name='Sheet 19'>
      <table>
        <view>
          <datasources>
            <datasource caption='obesity_world_original_clean' name='federated.0itwhuc11si8bu13xnz1h0t443y5' />
          </datasources>
          <datasource-dependencies datasource='federated.0itwhuc11si8bu13xnz1h0t443y5'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Obesity Rate' datatype='real' name='[Obesity_Rate]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Obesity_Rate]' derivation='Min' name='[min:Obesity_Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0itwhuc11si8bu13xnz1h0t443y5].[none:Country:nk]'>
            <groupfilter count='1' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([Obesity_Rate])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0itwhuc11si8bu13xnz1h0t443y5].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0itwhuc11si8bu13xnz1h0t443y5].[min:Obesity_Rate:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0itwhuc11si8bu13xnz1h0t443y5].[none:Country:nk]</cols>
        <pages>
          <column>[federated.0itwhuc11si8bu13xnz1h0t443y5].[tyr:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{B2ABB91E-19B7-484E-8CB9-18769843EA00}' />
    </worksheet>
    <worksheet name='Sugar1'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='psd_sugar' name='federated.1pzr4u11spbzvr1434xt20p71jyl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pzr4u11spbzvr1434xt20p71jyl'>
            <column datatype='string' name='[Country Name (group) 1]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country_Name]' new-bin='true'>
                <bin default-name='true' value='&quot;Russia &amp; Union of Soviet Socialist Repu&quot;'>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Union of Soviet Socialist Repu&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country Name (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country_Name]' new-bin='true'>
                <bin default-name='true' value='&quot;Russia &amp; Union of Soviet Socialist Repu&quot;'>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Union of Soviet Socialist Repu&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Country Name' datatype='string' name='[Country_Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Market Year' datatype='date' name='[Market_Year]' role='dimension' type='quantitative' />
            <column caption='Value grams daily' datatype='integer' name='[Value_grams_daily]' role='measure' type='quantitative' />
            <column-instance column='[Country_Name]' derivation='None' name='[none:Country_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value_grams_daily]' derivation='Sum' name='[sum:Value_grams_daily:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market_Year]' derivation='Year-Trunc' name='[tyr:Market_Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Market_Year]' derivation='Year-Trunc' name='[tyr:Market_Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market_Year]' derivation='Year' name='[yr:Market_Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pzr4u11spbzvr1434xt20p71jyl].[Action (Country Name (group),Country Name,YEAR(Market Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country Name (group)]' />
              <groupfilter function='level-members' level='[Country_Name]' />
              <groupfilter function='level-members' level='[yr:Market_Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pzr4u11spbzvr1434xt20p71jyl].[Action (Country Name (group),YEAR(Market Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country Name (group)]' />
              <groupfilter function='level-members' level='[yr:Market_Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pzr4u11spbzvr1434xt20p71jyl].[Action (Country Name,YEAR(Market Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country_Name]' />
              <groupfilter function='level-members' level='[yr:Market_Year:ok]' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1pzr4u11spbzvr1434xt20p71jyl].[Country Name (group) 1]' direction='DESC' using='[federated.1pzr4u11spbzvr1434xt20p71jyl].[sum:Value_grams_daily:qk]' />
          <filter class='categorical' column='[federated.1pzr4u11spbzvr1434xt20p71jyl].[none:Country_Name:nk]'>
            <groupfilter count='11' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Value_grams_daily])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country_Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pzr4u11spbzvr1434xt20p71jyl].[none:Country_Name:nk]</column>
            <column>[federated.1pzr4u11spbzvr1434xt20p71jyl].[Action (Country Name,YEAR(Market Year))]</column>
            <column>[federated.1pzr4u11spbzvr1434xt20p71jyl].[Action (Country Name (group),YEAR(Market Year))]</column>
            <column>[federated.1pzr4u11spbzvr1434xt20p71jyl].[Action (Country Name (group),Country Name,YEAR(Market Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1pzr4u11spbzvr1434xt20p71jyl].[Country Name (group) 1]' />
              <text column='[federated.1pzr4u11spbzvr1434xt20p71jyl].[none:Country_Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1pzr4u11spbzvr1434xt20p71jyl].[none:Country_Name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year of Market Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1pzr4u11spbzvr1434xt20p71jyl].[tyr:Market_Year:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Value grams daily:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1pzr4u11spbzvr1434xt20p71jyl].[sum:Value_grams_daily:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pzr4u11spbzvr1434xt20p71jyl].[sum:Value_grams_daily:qk]</rows>
        <cols>[federated.1pzr4u11spbzvr1434xt20p71jyl].[tyr:Market_Year:qk]</cols>
        <pages>
          <column>[federated.1pzr4u11spbzvr1434xt20p71jyl].[tyr:Market_Year:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' marks='false' start='0' />
      </table>
      <simple-id uuid='{C324AD50-8C7E-47A6-B1A1-0BFF968F6D1C}' />
    </worksheet>
    <worksheet name='Sugar2'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='psd_sugar' name='federated.1pzr4u11spbzvr1434xt20p71jyl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pzr4u11spbzvr1434xt20p71jyl'>
            <column datatype='string' name='[Country Name (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country_Name]' new-bin='true'>
                <bin default-name='true' value='&quot;Russia &amp; Union of Soviet Socialist Repu&quot;'>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Union of Soviet Socialist Repu&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Country Name' datatype='string' name='[Country_Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Market Year' datatype='date' name='[Market_Year]' role='dimension' type='quantitative' />
            <column caption='Value grams daily' datatype='integer' name='[Value_grams_daily]' role='measure' type='quantitative' />
            <column-instance column='[Country_Name]' derivation='None' name='[none:Country_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value_grams_daily]' derivation='Sum' name='[sum:Value_grams_daily:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market_Year]' derivation='Year' name='[yr:Market_Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1pzr4u11spbzvr1434xt20p71jyl].[Country Name (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;European Union&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Russia &amp; Union of Soviet Socialist Repu&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1pzr4u11spbzvr1434xt20p71jyl].[none:Country_Name:nk]'>
            <groupfilter count='11' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Value_grams_daily])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country_Name:nk]' to='&quot;Former Yugoslavia&quot;' />
                  <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;France&quot;' />
                  <groupfilter from='&quot;French West Indies&quot;' function='range' level='[none:Country_Name:nk]' to='&quot;Qatar&quot;' />
                  <groupfilter from='&quot;Romania&quot;' function='range' level='[none:Country_Name:nk]' to='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pzr4u11spbzvr1434xt20p71jyl].[yr:Market_Year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Market_Year:ok]' member='1960' />
              <groupfilter function='member' level='[yr:Market_Year:ok]' member='1970' />
              <groupfilter function='member' level='[yr:Market_Year:ok]' member='1980' />
              <groupfilter function='member' level='[yr:Market_Year:ok]' member='1990' />
              <groupfilter function='member' level='[yr:Market_Year:ok]' member='2000' />
              <groupfilter function='member' level='[yr:Market_Year:ok]' member='2021' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pzr4u11spbzvr1434xt20p71jyl].[none:Country_Name:nk]</column>
            <column>[federated.1pzr4u11spbzvr1434xt20p71jyl].[yr:Market_Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <_.fcp.MarkAnimation.true...style-rule element='animation'>
            <format attr='animation-duration' value='0.30000001192092896' />
          </_.fcp.MarkAnimation.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1pzr4u11spbzvr1434xt20p71jyl].[none:Country_Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1pzr4u11spbzvr1434xt20p71jyl].[sum:Value_grams_daily:qk]</rows>
        <cols>([federated.1pzr4u11spbzvr1434xt20p71jyl].[Country Name (group)] / [federated.1pzr4u11spbzvr1434xt20p71jyl].[yr:Market_Year:ok])</cols>
        <page-trail-options enabled='true' lines='true' mark-type='all' marks='false' size='5' trail-effect='none' />
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{EFD1AD3C-6B11-4D5B-ABCC-53E4076F2DA6}' />
    </worksheet>
    <worksheet name='Sugar3'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='psd_sugar' name='federated.1pzr4u11spbzvr1434xt20p71jyl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pzr4u11spbzvr1434xt20p71jyl'>
            <column datatype='string' name='[Country Name (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country_Name]' new-bin='true'>
                <bin default-name='true' value='&quot;Russia &amp; Union of Soviet Socialist Repu&quot;'>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Union of Soviet Socialist Repu&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Country Name' datatype='string' name='[Country_Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Market Year' datatype='date' name='[Market_Year]' role='dimension' type='quantitative' />
            <column caption='Value grams daily' datatype='integer' name='[Value_grams_daily]' role='measure' type='quantitative' />
            <column-instance column='[Country_Name]' derivation='None' name='[none:Country_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value_grams_daily]' derivation='Sum' name='[sum:Value_grams_daily:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market_Year]' derivation='Year-Trunc' name='[tyr:Market_Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Market_Year]' derivation='Year' name='[yr:Market_Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pzr4u11spbzvr1434xt20p71jyl].[Action (Country Name (group),Country Name,YEAR(Market Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country Name (group)]' />
              <groupfilter function='level-members' level='[Country_Name]' />
              <groupfilter function='level-members' level='[yr:Market_Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pzr4u11spbzvr1434xt20p71jyl].[Action (Country Name (group),YEAR(Market Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country Name (group)]' />
              <groupfilter function='level-members' level='[yr:Market_Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pzr4u11spbzvr1434xt20p71jyl].[Action (Country Name,YEAR(Market Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country_Name]' />
              <groupfilter function='level-members' level='[yr:Market_Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1pzr4u11spbzvr1434xt20p71jyl].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1pzr4u11spbzvr1434xt20p71jyl].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1pzr4u11spbzvr1434xt20p71jyl].[Latitude (generated)]</column>
            <column>[federated.1pzr4u11spbzvr1434xt20p71jyl].[Longitude (generated)]</column>
            <column>[federated.1pzr4u11spbzvr1434xt20p71jyl].[Action (Country Name,YEAR(Market Year))]</column>
            <column>[federated.1pzr4u11spbzvr1434xt20p71jyl].[Action (Country Name (group),YEAR(Market Year))]</column>
            <column>[federated.1pzr4u11spbzvr1434xt20p71jyl].[Action (Country Name (group),Country Name,YEAR(Market Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pzr4u11spbzvr1434xt20p71jyl].[Longitude (generated)]' field-type='quantitative' max='27953744.525453452' min='-25819488.845791347' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1pzr4u11spbzvr1434xt20p71jyl].[Latitude (generated)]' field-type='quantitative' max='21353853.548100546' min='-11382819.450468129' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1pzr4u11spbzvr1434xt20p71jyl].[sum:Value_grams_daily:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1pzr4u11spbzvr1434xt20p71jyl].[none:Country_Name:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1pzr4u11spbzvr1434xt20p71jyl].[none:Country_Name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1pzr4u11spbzvr1434xt20p71jyl].[none:Country_Name:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pzr4u11spbzvr1434xt20p71jyl].[sum:Value_grams_daily:qk]' />
              <lod column='[federated.1pzr4u11spbzvr1434xt20p71jyl].[none:Country_Name:nk]' />
              <geometry column='[federated.1pzr4u11spbzvr1434xt20p71jyl].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1pzr4u11spbzvr1434xt20p71jyl].[Latitude (generated)]</rows>
        <cols>[federated.1pzr4u11spbzvr1434xt20p71jyl].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1pzr4u11spbzvr1434xt20p71jyl].[tyr:Market_Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{9A46CB92-4A47-4306-BBE0-3B6BA81FB0C0}' />
    </worksheet>
    <worksheet name='Worldwide'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Worldwide</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all3_clean' name='federated.1qtvmbt1dg882111k341i1d4rxnl' />
          </datasources>
          <datasource-dependencies datasource='federated.1qtvmbt1dg882111k341i1d4rxnl'>
            <column caption='Obesity Rate' datatype='real' name='[Obesity_Rate]' role='measure' type='quantitative' />
            <column-instance column='[Obesity_Rate]' derivation='Avg' name='[avg:Obesity_Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[per_capita_gr_daily]' derivation='Avg' name='[avg:per_capita_gr_daily:qk]' pivot='key' type='quantitative' />
            <column caption='Per Capita Gr Daily' datatype='real' name='[per_capita_gr_daily]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]' scope='cols' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Obesity_Rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:Obesity_Rate:qk] + [federated.1qtvmbt1dg882111k341i1d4rxnl].[avg:per_capita_gr_daily:qk])</rows>
        <cols>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]</cols>
        <pages>
          <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' marks='false' />
      </table>
      <simple-id uuid='{4CA61F75-3162-4826-8D0A-4CB5DDB40AD7}' />
    </worksheet>
    <worksheet name='obe map'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all3_clean' name='federated.1qtvmbt1dg882111k341i1d4rxnl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1qtvmbt1dg882111k341i1d4rxnl'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Obesity Rate' datatype='real' name='[Obesity_Rate]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Obesity_Rate]' derivation='Sum' name='[sum:Obesity_Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[Action (Country Name,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country Name]' />
              <groupfilter function='level-members' level='[tyr:year:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[Action (Country Name,YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1qtvmbt1dg882111k341i1d4rxnl].[Longitude (generated)]' field-type='quantitative' max='60110440.819308452' min='20035424.133729961' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1qtvmbt1dg882111k341i1d4rxnl].[Latitude (generated)]' field-type='quantitative' max='17331925.677619468' min='-7858950.3915564176' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1qtvmbt1dg882111k341i1d4rxnl].[sum:Obesity_Rate:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[sum:Obesity_Rate:qk]' />
              <lod column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' />
              <geometry column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1qtvmbt1dg882111k341i1d4rxnl].[Latitude (generated)]</rows>
        <cols>[federated.1qtvmbt1dg882111k341i1d4rxnl].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{1CFF0DC6-27ED-45FB-9058-D5F53D995469}' />
    </worksheet>
    <worksheet name='pop map'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='population_clean_1960' name='federated.162aqg400578up11h4k980hif3px' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.162aqg400578up11h4k980hif3px'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.162aqg400578up11h4k980hif3px].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.162aqg400578up11h4k980hif3px].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.162aqg400578up11h4k980hif3px].[tyr:year:ok]'>
            <groupfilter from='#1960-01-01 00:00:00#' function='range' level='[tyr:year:ok]' to='#2019-01-01 00:00:00#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.162aqg400578up11h4k980hif3px].[Latitude (generated)]</column>
            <column>[federated.162aqg400578up11h4k980hif3px].[Longitude (generated)]</column>
            <column>[federated.162aqg400578up11h4k980hif3px].[tyr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.162aqg400578up11h4k980hif3px].[Longitude (generated)]' field-type='quantitative' max='19887795.49359604' min='-20187221.191982456' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.162aqg400578up11h4k980hif3px].[Latitude (generated)]' field-type='quantitative' max='16059374.36283467' min='-8337944.4219701933' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.162aqg400578up11h4k980hif3px].[sum:population:qk]' num-steps='40' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.162aqg400578up11h4k980hif3px].[none:Country Name:nk]' value='false' />
            <format attr='break-on-special' field='[federated.162aqg400578up11h4k980hif3px].[none:Country Name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.162aqg400578up11h4k980hif3px].[none:Country Name:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.162aqg400578up11h4k980hif3px].[sum:population:qk]' />
              <lod column='[federated.162aqg400578up11h4k980hif3px].[none:Country Name:nk]' />
              <geometry column='[federated.162aqg400578up11h4k980hif3px].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.162aqg400578up11h4k980hif3px].[Latitude (generated)]</rows>
        <cols>[federated.162aqg400578up11h4k980hif3px].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.162aqg400578up11h4k980hif3px].[tyr:year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{51FA5288-AE10-4C26-B312-CB43D39AE873}' />
    </worksheet>
    <worksheet name='pop#'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='population_clean_1960' name='federated.162aqg400578up11h4k980hif3px' />
          </datasources>
          <datasource-dependencies datasource='federated.162aqg400578up11h4k980hif3px'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.162aqg400578up11h4k980hif3px].[none:Country Name:nk]'>
            <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;World&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.162aqg400578up11h4k980hif3px].[tyr:year:ok]'>
            <groupfilter from='#1960-01-01 00:00:00#' function='range' level='[tyr:year:ok]' to='#2019-01-01 00:00:00#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.162aqg400578up11h4k980hif3px].[tyr:year:ok]</column>
            <column>[federated.162aqg400578up11h4k980hif3px].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <_.fcp.MarkAnimation.true...style-rule element='animation'>
            <format attr='animation-on' value='ao-off' />
          </_.fcp.MarkAnimation.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.162aqg400578up11h4k980hif3px].[sum:population:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontname='Tableau Bold' fontsize='24'><![CDATA[<[federated.162aqg400578up11h4k980hif3px].[sum:population:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#4e79a7' fontname='Tableau Bold' fontsize='24'>Population Worldwide</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.162aqg400578up11h4k980hif3px].[tyr:year:ok]</column>
        </pages>
        <page-trail-options mark-type='all' />
      </table>
      <simple-id uuid='{43B867F6-717D-44F5-8AED-6C211F28D20C}' />
    </worksheet>
    <worksheet name='pop1'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='population_clean_1960' name='federated.162aqg400578up11h4k980hif3px' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.162aqg400578up11h4k980hif3px'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.162aqg400578up11h4k980hif3px].[none:Country Name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([population])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country Name:nk]' to='&quot;West Bank and Gaza&quot;' />
                  <groupfilter from='&quot;Yemen, Rep.&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.162aqg400578up11h4k980hif3px].[none:Country Name:nk]' direction='DESC' using='[federated.162aqg400578up11h4k980hif3px].[sum:population:qk]' />
          <filter class='quantitative' column='[federated.162aqg400578up11h4k980hif3px].[sum:population:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.162aqg400578up11h4k980hif3px].[tyr:year:ok]'>
            <groupfilter from='#1960-01-01 00:00:00#' function='range' level='[tyr:year:ok]' to='#2019-01-01 00:00:00#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.162aqg400578up11h4k980hif3px].[none:Country Name:nk]</column>
            <column>[federated.162aqg400578up11h4k980hif3px].[sum:population:qk]</column>
            <column>[federated.162aqg400578up11h4k980hif3px].[tyr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.162aqg400578up11h4k980hif3px].[none:Country Name:nk]' />
              <text column='[federated.162aqg400578up11h4k980hif3px].[sum:population:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='wrap' value='off' />
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.162aqg400578up11h4k980hif3px].[sum:population:qk]</rows>
        <cols>[federated.162aqg400578up11h4k980hif3px].[none:Country Name:nk]</cols>
        <pages>
          <column>[federated.162aqg400578up11h4k980hif3px].[tyr:year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{363BF5B0-9244-4485-866C-C5A76BD0BCB3}' />
    </worksheet>
    <worksheet name='sug#'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='psd_sugar' name='federated.1pzr4u11spbzvr1434xt20p71jyl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pzr4u11spbzvr1434xt20p71jyl'>
            <column caption='Market Year' datatype='date' name='[Market_Year]' role='dimension' type='quantitative' />
            <column caption='Value grams daily' datatype='integer' name='[Value_grams_daily]' role='measure' type='quantitative' />
            <column-instance column='[Value_grams_daily]' derivation='Sum' name='[sum:Value_grams_daily:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market_Year]' derivation='Year-Trunc' name='[tyr:Market_Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1pzr4u11spbzvr1434xt20p71jyl].[sum:Value_grams_daily:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#f28e2b' fontname='Tableau Bold' fontsize='16'><![CDATA[<[federated.1pzr4u11spbzvr1434xt20p71jyl].[sum:Value_grams_daily:qk]>g of sugar ]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#f28e2b' fontname='Tableau Bold' fontsize='16'>consumed Worldwide daily</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1pzr4u11spbzvr1434xt20p71jyl].[tyr:Market_Year:ok]</column>
        </pages>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{82665009-0134-498B-860E-9B6F155BAD1C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Obe vs Per cap'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Obesity rate vs Sugar consumption per Capita</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='7' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97916' id='65' param='horz' w='98828' x='586' y='1042'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97916' id='33' param='horz' w='87115' x='586' y='1042'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97916' id='10' param='vert' w='87115' x='586' y='1042'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5469' id='11' w='87115' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92447' id='8' w='87115' x='586' y='6511' />
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='97916' id='64' is-fixed='true' param='vert' w='11713' x='87701' y='1042'>
              <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' count='1' h='14323' id='66' name='Ove/Cap line' name1='Worldwide' synchronized='1' w='11713' x='87701' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='45443' id='6' name='Ove/Cap line' w='100000' x='-73' y='14714' />
        <zone h='39844' id='67' name='Worldwide' w='99780' x='146' y='60286' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>Obesity rate vs Sugar consumption per Capita</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='121' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97916' id='120' param='vert' w='98828' x='586' y='1042'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5469' id='11' w='87115' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45443' id='6' is-fixed='true' name='Ove/Cap line' w='100000' x='-73' y='14714'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39844' id='67' is-fixed='true' name='Worldwide' w='99780' x='146' y='60286'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' count='1' h='14323' id='66' name='Ove/Cap line' name1='Worldwide' synchronized='1' w='11713' x='87701' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A4B56280-A3F7-4302-B1D4-6E2C9230E01A}' />
    </dashboard>
    <dashboard name='Obesity Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Obesity rate - Top 10 countries
BMI &gt; 30
</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='6' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97916' id='9' param='vert' w='98828' x='586' y='1042'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='9896' id='10' w='98828' x='586' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='88020' id='7' w='98828' x='586' y='10938' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='51823' id='36' name='Obe bar' w='48609' x='51391' y='48047' />
        <zone h='55990' id='93' name='obe map' w='50439' x='220' y='43880' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9896' id='94' name='obe map' pane-specification-id='0' param='[federated.1qtvmbt1dg882111k341i1d4rxnl].[sum:Obesity_Rate:qk]' w='10249' x='3734' y='88932' />
        <zone h='40250' id='88' name='Obe line' w='99700' x='100' y='7625' />
        <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' count='3' h='13281' id='95' name='obe map' name1='Obe bar' name2='Obe line' name3='Obe#' synchronized='1' w='11713' x='69034' y='911' />
        <zone h='18099' id='202' name='Obe#' w='35505' x='4319' y='5208'>
          <zone-style>
            <format attr='border-color' value='#e15759' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='margin' value='9' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>Obesity rate - Top 10 countries
BMI &gt; 30
</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='212' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97916' id='211' param='vert' w='98828' x='586' y='1042'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='9896' id='10' w='98828' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='115' h='18099' id='202' is-fixed='true' name='Obe#' w='35505' x='4319' y='5208'>
                  <zone-style>
                    <format attr='border-color' value='#e15759' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40250' id='88' is-fixed='true' name='Obe line' w='99700' x='100' y='7625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55990' id='93' is-fixed='true' name='obe map' w='50439' x='220' y='43880'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9896' id='94' name='obe map' pane-specification-id='0' param='[federated.1qtvmbt1dg882111k341i1d4rxnl].[sum:Obesity_Rate:qk]' w='10249' x='3734' y='88932'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51823' id='36' is-fixed='true' name='Obe bar' w='48609' x='51391' y='48047'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' count='3' h='13281' id='95' name='obe map' name1='Obe bar' name2='Obe line' name3='Obe#' synchronized='1' w='11713' x='69034' y='911'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8664DFAF-6B5A-4CD5-ABC0-F981C3CD8965}' />
    </dashboard>
    <dashboard name='PerCap'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Top 10 countries consuming the most sugar PER CAPITA from 1960 - 2021</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='8' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97916' id='12' param='vert' w='98828' x='586' y='1042'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5469' id='14' w='98828' x='586' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92447' id='9' param='vert' w='98828' x='586' y='6511'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92447' id='10' w='98828' x='586' y='6511'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92447' id='13' w='98828' x='586' y='6511' />
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='49125' id='39' name='PerCap1' w='99900' x='0' y='50875' />
        <zone h='43625' id='52' name='PerCap2' w='99300' x='300' y='6000' />
        <zone h='15365' id='217' name='PerCap#' w='30600' x='18960' y='9245'>
          <zone-style>
            <format attr='border-color' value='#f28e2b' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='margin' value='9' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' h='13281' id='218' name='PerCap#' synchronized='1' w='11713' x='5344' y='2604' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>Top 10 countries consuming the most sugar PER CAPITA from 1960 - 2021</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='230' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97916' id='229' param='vert' w='98828' x='586' y='1042'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5469' id='14' w='98828' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43625' id='52' is-fixed='true' name='PerCap2' w='99300' x='300' y='6000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='94' h='15365' id='217' is-fixed='true' name='PerCap#' w='30600' x='18960' y='9245'>
                  <zone-style>
                    <format attr='border-color' value='#f28e2b' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49125' id='39' is-fixed='true' name='PerCap1' w='99900' x='0' y='50875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' h='13281' id='218' name='PerCap#' synchronized='1' w='11713' x='5344' y='2604'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{39DEAE90-1EC7-403D-BF93-6E2AF3BA031B}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98222' id='1' param='vert' removable='false' w='99000' x='500' y='889'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='3667' id='3' w='99000' x='500' y='889' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='11222' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='99000' x='500' y='4556' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='83333' id='5' paired-zone-id='4' removable='false' w='99000' x='500' y='15778'>
              <flipboard active-id='5' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Sugar consumption' captured-sheet='Sugar year' id='1'>
                    <capturedDeltas>
                      <worksheet name='Sugar1'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Sugar Per Capita' captured-sheet='PerCap' id='3' />
                  <story-point caption='Obesity Rate' captured-sheet='Obesity Rate' id='4'>
                    <capturedDeltas>
                      <worksheet name='Obe bar'>
                        <filter class='categorical' column='[federated.1qtvmbt1dg882111k341i1d4rxnl].[Action (Country Name,YEAR(Year))]'>
                          <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
                            <groupfilter function='level-members' level='[Country Name]' />
                            <groupfilter function='level-members' level='[tyr:year:ok]' />
                          </groupfilter>
                        </filter>
                        <current-page>
                          <multibucket>
                            <bucket>#2016-01-01 00:00:00#</bucket>
                          </multibucket>
                        </current-page>
                      </worksheet>
                      <worksheet name='Obe line'>
                        <current-page>
                          <multibucket>
                            <bucket>#2016-01-01 00:00:00#</bucket>
                          </multibucket>
                        </current-page>
                      </worksheet>
                      <worksheet name='obe map'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1qtvmbt1dg882111k341i1d4rxnl].[Latitude (generated)]' field-type='quantitative' max='14156629.633922689' min='-9958278.2179397829' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1qtvmbt1dg882111k341i1d4rxnl].[Longitude (generated)]' field-type='quantitative' max='57988465.654413976' min='17913448.968835488' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <current-page>
                          <multibucket>
                            <bucket>#2016-01-01 00:00:00#</bucket>
                          </multibucket>
                        </current-page>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Obesity Rate vs Sugar Per Capita' captured-sheet='Obe vs Per cap' id='5' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{B9C73B1C-89E8-4A9E-AB0D-0DFFA7234BC7}' />
    </dashboard>
    <dashboard name='Sugar year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Top 10 countries consuming the most sugar from 1960 - 2021</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='18' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97916' id='43' param='horz' w='98828' x='586' y='1042'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97916' id='21' param='vert' w='98828' x='586' y='1042'>
              <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5469' id='22' w='98828' x='586' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92447' id='19' w='98828' x='586' y='6511' />
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='57943' id='48' name='Sugar3' w='45974' x='73' y='41536' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9896' id='49' name='Sugar3' pane-specification-id='2' param='[federated.1pzr4u11spbzvr1434xt20p71jyl].[sum:Value_grams_daily:qk]' w='10249' x='19107' y='89323' />
        <zone h='53776' id='6' name='Sugar2' w='59078' x='40410' y='45703'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='9' />
          </zone-style>
        </zone>
        <zone h='41927' id='23' name='Sugar1' w='98170' x='805' y='5339' />
        <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' count='3' h='11849' id='50' name='Sugar3' name1='Sugar1' name2='Sugar2' name3='sug#' show-title='false' synchronized='1' w='11713' x='6955' y='4948' />
        <zone h='13281' id='221' name='sug#' w='23426' x='21816' y='8724'>
          <zone-style>
            <format attr='border-color' value='#f28e2b' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='margin' value='9' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>Top 10 countries consuming the most sugar from 1960 - 2021</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='239' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97916' id='238' param='vert' w='98828' x='586' y='1042'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5469' id='22' w='98828' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41927' id='23' is-fixed='true' name='Sugar1' w='98170' x='805' y='5339'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='78' h='13281' id='221' is-fixed='true' name='sug#' w='23426' x='21816' y='8724'>
                  <zone-style>
                    <format attr='border-color' value='#f28e2b' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57943' id='48' is-fixed='true' name='Sugar3' w='45974' x='73' y='41536'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9896' id='49' name='Sugar3' pane-specification-id='2' param='[federated.1pzr4u11spbzvr1434xt20p71jyl].[sum:Value_grams_daily:qk]' w='10249' x='19107' y='89323'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53776' id='6' is-fixed='true' name='Sugar2' w='59078' x='40410' y='45703'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' count='3' h='11849' id='50' name='Sugar3' name1='Sugar1' name2='Sugar2' name3='sug#' show-title='false' synchronized='1' w='11713' x='6955' y='4948'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B413F8A0-EB58-426F-B8FC-AF8938C5CE50}' />
    </dashboard>
    <dashboard name='pop'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Population growth</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97916' id='29' param='horz' w='98828' x='586' y='1042'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97916' id='19' param='horz' w='98828' x='586' y='1042'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97916' id='10' param='horz' w='98828' x='586' y='1042'>
                <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97916' id='5' param='vert' w='98828' x='586' y='1042'>
                  <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5469' id='7' w='98828' x='586' y='1042'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='91536' id='32' name='pop1' w='99414' x='220' y='8594' />
        <zone h='18099' id='35' name='pop#' w='28184' x='24963' y='9245'>
          <zone-style>
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='margin' value='9' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' count='2' h='13281' id='34' name='pop1' name1='pop#' name2='pop map' synchronized='1' w='11713' x='88214' y='1693' />
        <zone h='67057' id='36' name='pop map' w='46559' x='53734' y='12500' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9896' id='37' name='pop map' pane-specification-id='1' param='[federated.162aqg400578up11h4k980hif3px].[sum:population:qk]' w='13690' x='81845' y='71615' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>Population growth</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='74' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97916' id='73' param='vert' w='98828' x='586' y='1042'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5469' id='7' w='98828' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='91536' id='32' is-fixed='true' name='pop1' w='99414' x='220' y='8594'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='115' h='18099' id='35' is-fixed='true' name='pop#' w='28184' x='24963' y='9245'>
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='67057' id='36' is-fixed='true' name='pop map' w='46559' x='53734' y='12500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9896' id='37' name='pop map' pane-specification-id='1' param='[federated.162aqg400578up11h4k980hif3px].[sum:population:qk]' w='13690' x='81845' y='71615'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' count='2' h='13281' id='34' name='pop1' name1='pop#' name2='pop map' synchronized='1' w='11713' x='88214' y='1693'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7C9CD91D-BD40-4CCD-99A9-A58847BB2EBB}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sugar1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pzr4u11spbzvr1434xt20p71jyl].[Country Name (group) 1]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2021-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1pzr4u11spbzvr1434xt20p71jyl].[Country Name (group) 1]</field>
            <field>[federated.1pzr4u11spbzvr1434xt20p71jyl].[none:Country_Name:nk]</field>
            <field>[federated.1pzr4u11spbzvr1434xt20p71jyl].[tyr:Market_Year:qk]</field>
            <field>[federated.1pzr4u11spbzvr1434xt20p71jyl].[tyr:year:qk]</field>
            <field>[federated.1pzr4u11spbzvr1434xt20p71jyl].[yr:Market_Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{758FB42A-3895-4B4D-B8E9-4156EF816E0B}' />
    </window>
    <window class='worksheet' name='Sugar2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pzr4u11spbzvr1434xt20p71jyl].[none:Country_Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pzr4u11spbzvr1434xt20p71jyl].[Country Name (group)]</field>
            <field>[federated.1pzr4u11spbzvr1434xt20p71jyl].[none:Country_Name:nk]</field>
            <field>[federated.1pzr4u11spbzvr1434xt20p71jyl].[tyr:Market_Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90DC6A72-0E5D-4ABC-BB1B-BE88A941810A}' />
    </window>
    <window class='worksheet' name='Sugar3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='2' param='[federated.1pzr4u11spbzvr1434xt20p71jyl].[sum:Value_grams_daily:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#1965-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1pzr4u11spbzvr1434xt20p71jyl].[none:Country Name:nk]</field>
            <field>[federated.1pzr4u11spbzvr1434xt20p71jyl].[none:Country_Name:nk]</field>
            <field>[federated.1pzr4u11spbzvr1434xt20p71jyl].[none:population:qk]</field>
            <field>[federated.1pzr4u11spbzvr1434xt20p71jyl].[sum:population:qk]</field>
            <field>[federated.1pzr4u11spbzvr1434xt20p71jyl].[tyr:Market_Year:qk]</field>
            <field>[federated.1pzr4u11spbzvr1434xt20p71jyl].[tyr:year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{2FDE5C08-837D-416E-88B2-ECEF67CF41F1}' />
    </window>
    <window class='worksheet' name='sug#'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2021-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1pzr4u11spbzvr1434xt20p71jyl].[tyr:Market_Year:qk]</field>
            <field>[federated.1pzr4u11spbzvr1434xt20p71jyl].[tyr:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5F25ECB7-73D1-4EF3-8976-93419A9FA237}' />
    </window>
    <window class='dashboard' name='Sugar year'>
      <viewpoints>
        <viewpoint name='Sugar1'>
          <current-page>
            <multibucket>
              <bucket>#1990-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight field='[federated.1pzr4u11spbzvr1434xt20p71jyl].[Country Name (group) 1]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sugar2'>
          <current-page>
            <multibucket>
              <bucket>#1990-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight field='[federated.1pzr4u11spbzvr1434xt20p71jyl].[none:Country_Name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sugar3'>
          <current-page>
            <multibucket>
              <bucket>#1990-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='sug#'>
          <current-page>
            <multibucket>
              <bucket>#1990-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
      </viewpoints>
      <active id='50' />
      <simple-id uuid='{F04BA1D8-F4A7-4F42-9027-B3A81C2D58B3}' />
    </window>
    <window class='worksheet' name='pop map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.162aqg400578up11h4k980hif3px].[sum:population:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#1979-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.162aqg400578up11h4k980hif3px].[tyr:year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{AFEF47E8-29FE-4452-896F-03633F47F428}' />
    </window>
    <window class='worksheet' name='pop1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.162aqg400578up11h4k980hif3px].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2019-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.162aqg400578up11h4k980hif3px].[none:Country Name:nk]</field>
            <field>[federated.162aqg400578up11h4k980hif3px].[tyr:year:ok]</field>
            <field>[federated.162aqg400578up11h4k980hif3px].[tyr:year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B54361C9-AD3F-45EF-AF78-C0FC0287560C}' />
    </window>
    <window class='worksheet' name='pop#'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2019-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.162aqg400578up11h4k980hif3px].[none:Country Name:nk]</field>
            <field>[federated.162aqg400578up11h4k980hif3px].[tyr:year:qk]</field>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]</field>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:ok]</field>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]</field>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E4AB6745-3878-4203-A636-46A3E328F18F}' />
    </window>
    <window class='dashboard' name='pop'>
      <viewpoints>
        <viewpoint name='pop map'>
          <current-page>
            <multibucket>
              <bucket>#1988-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='pop#'>
          <current-page>
            <multibucket>
              <bucket>#1988-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
        <viewpoint name='pop1'>
          <current-page>
            <multibucket>
              <bucket>#1988-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='34' />
      <simple-id uuid='{FE847704-29F1-4E12-843F-8186683E5D86}' />
    </window>
    <window class='worksheet' name='PerCap1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[Year (group)]</field>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]</field>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9173B419-A2DD-42EB-8E74-D6EC09DBB6F5}' />
    </window>
    <window class='worksheet' name='PerCap2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[Year (group)]</field>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]</field>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2026D7B1-5953-4FB0-9C35-C4A618C65BC3}' />
    </window>
    <window class='worksheet' name='PerCap#'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED06A60A-A943-4E4F-B77B-84A00CA15C2C}' />
    </window>
    <window class='dashboard' name='PerCap'>
      <viewpoints>
        <viewpoint name='PerCap#'>
          <current-page>
            <multibucket>
              <bucket>#2016-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
        <viewpoint name='PerCap1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='PerCap2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='218' />
      <simple-id uuid='{5DBF6017-2BA2-4487-8066-A1D3021771BE}' />
    </window>
    <window class='worksheet' name='Obe bar'>
      <cards>
        <edge name='left'>
          <strip size='230'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]&#10;[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]' type='color' />
            <card type='currpage' />
            <card pane-specification-id='6' param='[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]&#10;[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2016-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]</field>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]</field>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]</field>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{01634D78-4F0B-494D-A4A4-BF58BEAAFCBC}' />
    </window>
    <window class='worksheet' name='Obe line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2016-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]</field>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]</field>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4808044E-FF38-4CE9-9DD0-795564FF5D93}' />
    </window>
    <window class='worksheet' name='obe map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qtvmbt1dg882111k341i1d4rxnl].[sum:Obesity_Rate:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2016-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{74658CCA-BAE4-41BC-BDD7-62D23DAF5A33}' />
    </window>
    <window class='worksheet' name='Obe#'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2016-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DCBD129C-E5F8-4530-82CE-4C1AB26129B9}' />
    </window>
    <window class='dashboard' maximized='true' name='Obesity Rate'>
      <viewpoints>
        <viewpoint name='Obe bar'>
          <current-page>
            <multibucket>
              <bucket>#2016-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Obe line'>
          <current-page>
            <multibucket>
              <bucket>#2016-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Obe#'>
          <current-page>
            <multibucket>
              <bucket>#2016-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
        <viewpoint name='obe map'>
          <current-page>
            <multibucket>
              <bucket>#2016-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='95' />
      <simple-id uuid='{1C8AF366-2B1F-4317-8B4E-C07C93EEBBF3}' />
    </window>
    <window class='dashboard' name='Obe vs Per cap'>
      <viewpoints>
        <viewpoint name='Ove/Cap line'>
          <current-page>
            <multibucket>
              <bucket>#2016-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Worldwide'>
          <current-page>
            <multibucket>
              <bucket>#2016-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='66' />
      <simple-id uuid='{56FD73CF-2AC3-4652-B3EC-565258D63FDE}' />
    </window>
    <window class='worksheet' name='Obe vs Per Capita bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2016-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]</field>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]</field>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AD72B98F-88C2-4E4C-AD68-003E93383D30}' />
    </window>
    <window class='worksheet' name='Ove/Cap line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2016-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]</field>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]</field>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B29CD8D9-0BC0-47F8-9202-53D16034B3AE}' />
    </window>
    <window class='worksheet' name='Obe vs Per Capita bar line (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2016-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]</field>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]</field>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1F384CE-A8C3-4F9A-93EE-75C83E77661A}' />
    </window>
    <window class='worksheet' name='Worldwide'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2016-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[:Measure Names]</field>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[none:Country Name:nk]</field>
            <field>[federated.1qtvmbt1dg882111k341i1d4rxnl].[tyr:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2DCECAE6-ED37-4993-B4CB-45E719DA5C7C}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{F6AF1F6B-CE4D-4F27-92A2-132913127268}' />
    </window>
    <window class='worksheet' name='Sheet 19'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2016-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0itwhuc11si8bu13xnz1h0t443y5].[none:Country:nk]</field>
            <field>[federated.0itwhuc11si8bu13xnz1h0t443y5].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3F919A1F-30D5-4BD5-9E98-B805A92194CB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Obe bar' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Obe line' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Obe vs Per Capita bar' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Obe vs Per Capita bar line (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAQRklEQVR4nO3dbWwUd37A8e/M7M7OPtnY4ckkxsYmEAIY8tQQktyF5vn5cr3orqeerk3b
      tGqu1zY96apEqlRV6ptKfdE3p5MuObVq1WuvuTw/XAhJmhKThOSIjcFJiHkyYGwHsL2787A7
      M/++MORKciGAdz27nt9HQggJhh9ov7v/mZ0HTSmlECKm9KgHECJKEoCINQlAxJoEIGJNAhCx
      JgGIWEsAKKUoFotV22gYhnieRzqdrto2hagFrRbfA4RhiG3b5HK5am9aiKqSJZCINQlAxJoE
      IGJNAhCxJgGIWJMARKxJACLW6i4ApRR+aQjkMgUxC+ouAABv/EXKk9ujHkPEQN0FoGka6Qu/
      g3vkv1CBG/U4Yo6ruwAA9GQzqQW34Iz8d9SjiDmuLgMAMOffSFD6gMA5FPUoYg6r2wA0zSB9
      0R9gDz+OXLcvaqVuAwAwMl0YVhuVE1ujHkXMUYlabTgMQ3zfn/F2zMXfpLTn79Cy69CMTBUm
      E+LXGuJ6AO/YGwSlj8gs/aOqbE+IU+p6CXSK2XodgXsY394b9ShijmmIADRNJ9P+AM7wT1Eq
      jHocMYc0RAAARvoijOzFlD/ZEvUoYg5piH2AU1TgMPXB36AZWTTNAE0HDNCM6V/rJqn5N5LM
      94CmVfXvFnNTQwUA0yfLoQIgABVML4lUAISElQm80ecIy2NYS75FMn8pICGIL9ZwAZyNwB3B
      OfIzlD9JesnvksitjGQOUf/mZACnBM4hnCP/gQq96RCy3ZHOI+rPnA7gFN/ejzP8GGbrdaQW
      3Br1OKKONMxRoJlIZDrJXfy3VCZ34I69FPU4oo7EIgAATU+S7fpr/EIf7tgLUY8j6kRsAoCT
      ESx7GL8wgDv2fNTjiDoQqwDg/0ewG3f0uajHERGLXQAAmp4gu+yv8Esf4o4+C8j1BnEVywDg
      ZASdf4Ff2oN79Bm5C0VMxeIw6Jko5eMMP45f+hiz9SuYF3wVPZGPeiwxS2IfwCnKL+Ed/1/K
      x19HT7aQmn8ziab1aFpsPyRjQQL4LKUI3GG88c34hQGS867EarsfTTejnkzUgARwBir0cUd+
      DppOesk3ox5H1IB8vp+Bpiew2u7HL+wkcIajHkfUgATwJTQ9Qbr9Aezhn6BUEPU4osokgLOQ
      yHRhZJZT/uSVqEcRVSYBnKV02/14n2whLB+LehRRRTXbCS4Wi2Qyc+s+Pn5hJ5Vjm0l3Phz1
      KKJKanZjLF3XSSRqtvlIGPPWE0xuJSy8i9myIepxRBXIEugcTN+6/bu4R58g9ItRjyOqQAI4
      R3qyCWvRPTiH/z3qUUQVSADnIdlyLapyjEphd9SjiBmSAM6Dpumk2/8Q59C/osJy1OOIGZAA
      zpORWoTZeh2uPMWmoUkAM5BaeDt+6aPpp1qKhiQBzICmGWSWPog9/JgshRqUBDBDhrUEs+Ua
      3JEnoh5FnAcJoAqml0IfyPMLGpAEUAWalpheCh38iSyFGowEUCWGdSHmvA24R38R9SjiHEgA
      VZRadAd+YVCWQg1EAqii6aXQH2MffAwVVqIeR5wFCaDKjPRFmPOuwj36ZNSjiLMgAdRAauFd
      +IUBKpM7oh5FfAkJoAY0PUG2+wc4Iz+nPLE96nHEGUgANaInmsgvfxRv9FnKx9+MehzxBSSA
      GtISWXLLH8E7tgXvk1ejHkf8BhJAjWmGRa77h1Qm3sYde1FuwltnJIBZoOkpsl0/wC/uxh19
      mhrch0CcJwlglkw/mOMvCdxh3JH/lAjqhAQwizTNINPxECpwKA79A2H5k6hHij25OW5E/MJu
      7OGfYs7fRGrBbXIb9ojIjbGipHzKY7+gPLmT9NIHMaz2qCeKHfkEqAOBc5DSwR+TzK0++SyC
      ZNQjxYZ87tYBI72U/Iq/R0s0U/jwEQL3SNQjxYYEUCc0TcdadCeZju9R2vtPhOXxqEeKBQmg
      ziQyHWQ6/pTi0D8SViaiHmfOk32AOlUp7MI5/G/klj+KnpD/x2pRSqEqxwmc/fj2fgmgnpUn
      3sMbfYrc8kfQjHTU49ScUgEqsCH0UIGLCj1U6J78dQktMY9EthvNOLujiypw8O39BM4+Ans/
      gTsMYQXdbMVId2KkOyWAelc+vhXv2Gvkun/YEE+qDP0Slcl3p1+wehpNT4Fuoump6fn1JCqw
      Cb0xQu8ogTdKWB4D5QMaWiJ/8vdacPJnzUiBZqAqUwTOAVRgo5stGJlujEw3iUw3EOLbewlO
      /gjLx8GwSKQ7MTLLTr7g20/7Pww9TwJoBN74ZipTO8h2PYym1dczF5Ty8Ysf4k/toFIYQNMS
      JHKr0M2FKFWZfvcOy6jQg7CMCstoRgY9tQgjtQg9tQjdXHhOh36nlzEn8O0hAnuIwN4LaBiZ
      LoxMF4lMF7rZCmi/8c+Hrktxy6vY296SABqFe/QZAucAmc4/Q9OMSGdRgUf5+BuUJ7ahKlMk
      citJNF1OMr9m+t26ToW2Q+Hll3Hee4/cphvIXn+9BNAwlMI5+iR+cRfZzu+jJ5vP7o+FZZwj
      P4OwjJG9mER2OXqq7bxOvQjcw3hjL+AXP8BsvR6z9SvoZgtf9E5bL4JikeJLv8Tp7yd/001k
      rt2IZky/iUgADaYy1Ydz6F9Itz9AMr/mjL/XLw1hH/wxZuv1GJllBPZe/NLHhN4IaAmMdOen
      QehmK3qy9XP7GUoFVCa2442/CJqJtfAOEk3rGuLcpWBqisILL+INDpK79VYyG65G00+fWwJo
      QGHlBKV9/0witwqr7Xc+tyQ69YR7vzhIpvMhjNSiz21DhWUCez++PUToHSWsHJ/ecVQn72yn
      JdETeQJvjGTzZVgLbkdPLZiNf96MBRMTTD33POWhIfK33076yis+98I/RQJoUEoFuCNP4BcH
      yS77PnqyBYDAOUDpwI8wWzaSWnjXeb9Tq7BCWDmBnmxpmHOT/GPHmXr2WSoHh2m6606sy9aj
      aWdenkkADa5SGMAZfpz0hd/Bt/dSmXyPbOdDGNaFUY82a/zxcaaefgZ/dJT83XdjrV3zpS/8
      UySAOSCsTGIf+BFGdjnW4vsiP0o0WypHjzL11DMEJ07QdO/dWKtWwVm+8E+RAERjUYrKkSNM
      PvU0Ycmm+Wv3kFqx4rw3V1/fqgjxBZRSVIaHmXryaZTv0/S1e0l1d814uxKAqGsqDHH7+im+
      8gpa0qTpvnsxOzqqtn0JQNSloFik9Pr/YL/9Ntall9Ly+98lsaD6h2FlH0DUlfK+fRR+uRl/
      bIzcDV8lc80GtGTtDsPKJ4CInlK4AwNMPfscRksLuVtvwVy27KwPZc6EBCAio5TC3fE+U88/
      T7K9ndY/eZDEBRfM6gwSgJh1Kgxxtr9L4cWXMJd3M//Pv4cxb14ks8h9gcSsUZUK7tvvUHrt
      NcxLLiF3223o+Wj3E2UnWNScPz5O8ZUtuLsHyVz9W+Q23YCezUY9FiABiBpRSuHuHKC4+RUI
      A3I33YS1rucLz8qMymn7APbEBEZzM+VikXw+j2PbaIaBlfr1VT6FQoF8Pj/rg4rGEJZKlN54
      g9K2t0itWMG83/s2yYULz/kcndnyuQBSzc0cO7yPj92AdMti/IkRcrkcAx/sY/WaFZyYtLm8
      Z3VU84o6VT5wkOLLm6kcOUL2K9ez8NFH0FP1e3nkKactgSquw8GRES7I5zEzFscKAc1mhYLj
      47keTTmLohfS2b7kjBuVJVA8KN/H3r6d0quvo89rJn/LzZjLl8/K8ftqkX0Acc7848cpbXkV
      p7+f9BVXkNt0A0bz2V2jXG9OWwJ5pUn2Do/S3tFBLj398eV5HqkG+CgTtaWUwhscpLj5FULH
      JXfjJpq+ft+nF5c3qtMCKJcrhGHIxx/uYklbG9u399HWvoj5+Rz9u/fQ0dlO8wVtLG2bH9W8
      YpaFjkNp61bsrb2Yyzpp/sY3SC5pq9ud2nN12hLILkxw4MBBUvkWEkGZYycmaFq4iETFo1j2
      aclnmShVuHTFsjNuVJZAja9y6DCFzZupHDhA5rpryV53HbplRT1W1ck+gPiUCgKc996juOU1
      9GyG3M03k7pkZUPt1J4rCUAQTExQfPU1nB07SK9fT/a3N5FoaYl6rFkhJ8PFlCqXcfr6sLf2
      EroOuU2baLrnbrREvF4S8frXxpwKAtxdu7F7e/FHjmKtX0fzt79V19/U1poEMMcppSjv2UPp
      zV7Ke/dhXbqK/B23k2xvn9Nr+7Ml+wBzkFKKysFh7N5e3N2DmF1dZK/diHlxY31LOxskgDmk
      MjqK3bsN9/0+Em2LyWzciLX60ob/sqqWZAnU4IITJyi99TbO9ncxmprIbLyGpjvvQDPr/2ky
      9UA+ARpQWCxhb9+O/dbbYOhkN2wgfeWV6Jm5/xyxapMAGkToeTi/+hV271so1yF91VVkNlyN
      0dQU9WgNTQKoY8r3cfv7KfVuIzh2jPTll5O5ZgOJ+XIuVrXIPkCdUWGIN/gBpd5eKsOHsHrW
      0vz1+0i0tckRnBqQAOqAUory3r3Yb/bi7fmY1MoV5G+6kWRnp7zoa0yWQFFRisrhw5R6t+EO
      DGAu7SBz7UZSK1fU3YXjc5ncF2g2KUUwfAi3rw/n/T60C1rJbrwGa+1akGP1kZBPgBoLJidx
      dw7g9PXhj45iLu3AWt+DtXZtQ1w0PtdJAFWmlMI/fITStm14uwfRM2mstWux1vWQWLxY1vR1
      RgKoEn98HHvbWzg7dpCYP5/Mxmuw1qyp6a29xcxJADMQTExgv/MOzjvvomUyZDduwLrsMlna
      NBAJ4Bwo38fbswe3rx/vw4/QM+npb2SvurJu7nUpzo0EcAZKKYLxcZy+ftz+nYSFKcyLLya9
      rofUypWyvJkDJIDPCF0Xb3AQp6+f8t59JObPx1q3FqunJzbXycZJ7ANQQUBleBh35wDuwC5U
      4GOtWoW1bh1m1zL5UmqOi1UASimCsXG8oSHKQ0OUDxyAICR50YVYa1ZjrVkja/mYmdMBKKXw
      R0Zw+/pxdw4QlkoYCxeQ6u7G7O7C7OiQC0dibs4FENo27sAu3P5+ygcPkly8GGvd9Devcu68
      +KyGPxtUhSHl/fun3+V37UbTNazVq8nddCPJjg755lWcUUMGEExM4PTvxO3rxx8fw+zsxFrX
      Q/62W9HTclmgOHt1vwRSQUDl0CHKQ3vxhobwDx1Gz+ewenqwetaSXLQotjd1EjNXdwFMPzx5
      B+6u3SeP0gQkL7oIs7sbs7ub5IVL5NCkqJq6CwDA2bEDPZfH7FgqR2lETdVlAELMFllLiFiT
      AESsSQAi1iQAEWsSgIg1CUDEmgQgYq1m5wKFYYjv+7XavBBVUbMAdF0nEbMnDorGI0sgEWsS
      gIg1CUDEmgQgYk0CELEmAYhYkwBErEkAItYkABFrEoCINQlAxJoEIGJNAhCxJgGIWJMARKxJ
      ACLWJAARaxKAiDUJQMSaBCBiTQIQsSYBiFiT+wKJWJP7AolYkyWQiDUJQMSaBCBiTQIQsSYB
      iFiTAESsSQAi1iQAEWsSgIg1CUDEmgQgYk0CELEmAYhYkwBErEkAItYkABFrEoCINQlAxJoE
      IGJNAhCxJgGIWPs/zb/ghmxrHS8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Obe vs Per cap' width='192'>
      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
    </thumbnail>
    <thumbnail height='92' name='Obe#' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Obesity Rate' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9eZwcV3Xo/62193V6Fs1otFubbVm2LMkGjGWMIcaExRBCAOfxgB9JeHlk
      IZ+QvJDP42V9ZIGEBAhZIDwSGwJmM9h4wZbxLlu7te/SjGbv6bW69vv7o6daM6ORNNpHVn8/
      n/5U9UxX1a2qc+4995xz75WEEIImTa5S5MtdgCZNLidNBWhyVdNUgCZXNU0FaHJV01SAqxnh
      8tzTT7HhpRd5eetOwOKhhx6b1qFbt24Fs8jB3uGzvuzBgwfP/CPPYvPGjdx///28snEjNedM
      vhrB0b3b+KevfwsAt1bkscd/xs9+9iSme+pjlc9+9rOfnX7Rm7yWOLL9Jfz2pay6bgn7t24g
      3T2Hjc8+j23XEHqCsGTxysYtFAyLXCrCSxte5vhgno6OdkqlIsbQIR57cRct2RQ9R3toa2tl
      966dZHM5vGqevUf6ef7Fl0lGZHbv3U++VAO7zCOPPk4snSMqO7yyZTuG5ZPLpiYWTlaZ1dnJ
      4cOHWbduHarksXHDSxzpHaSzaxYbX3qO/v5+yqYgl0mCgJ6BPJXiMNdeey0vPvUE1952Fwsy
      Ps+9OsiC7lZso8iGVzZTMV0iss3GrTuaLcDVzMBwmfZcEoBcLETecMh1dLH21tex+aVneXr9
      M6xcvYaRI3vpObaPvpLgxhuuR5Zg7969zJkzlwWLlzFvdieH9+7AsAx27D6ILEm41RF+8Mh6
      1t2xjrb2WYQ0hQ0vvUhr51wWLFjA0oVzefLnL7Bm7VoO7t6O5wucWpmNGzfWFWUSW595kval
      N3HjkhzrX9hJ32CeVatWs3fH5voPJIlrr12ONPb7vCVoiSiEMi3YhTwATz75NKvW3MLSRfNY
      /+wGbrllbVMBrmYWLOxk376jABwdrdIZDyFJMggPJBmrVmbzpk1E0220zF7GXWuX8uMHv0vB
      9uonkCV8r75/++tX8rUv/wuLb7q1cf5Vt7yeZFTn4YcfZtHyFXS1ZRGA7/sA1CqjbNq4kWxb
      J0igRRKsWrWKbDJyyjKLsWMlSUJAvbxT3VsuyoGBMsOHDpKdO6/+R0lGkib+rmkCXcVE023Y
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ove/Cap line' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='PerCap' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9eXRkx3nY+6u79L4C3dhnw+wbORs3URIlSpZkUpIlWZJtPS9HtpOXOLGf
      9fzyjpO8k8fn+Dh27BwndnLsxHLkyJIsS9ZiUaI2aqNIitsMZ8NgGwx2NIAG0Pvt23er90dj
      wME0hhzOYAYznP7h9OlG171fVdetr9avvhJSSkmTJncoykYnoEmTjaSpAE3uaJoK0OSOpqkA
      Te5omgpwCeMjA3zjq1/ke0/9hOm5xde8vlLI8qn/8ZdM5yqA5MVnfsSzTz/F8OTcdaVjcvQC
      lnfZd0P9LBm165J7rRSzE4xOL13FlSYXLkwD8MTXH8ddx+mVCxcurJ+wZZYmzqGtl7DMzAxC
      CNo7OxFXuGZmcoxoSzulYh4hFDo72tcr+nVhy/Y95OenSey4i+50mJGBs2TzJbbvuQsjO8pc
      wcKTgnuOHUYVsLCQY/uWbqqWi1nIsOSEePdbj/L4159g56b3gvQ4c/IEVVfh7oP7OXvqJI7Q
      OXLkMJPjo/T29jI4OEhXKsypwQyqtNi57yBP/eBJth44xr4dm5lfzDM8OMKhgzvRFIXZyQuM
      Tc2xecc+QrJM/+gUiZZ29u7cCkj6Tp2gXIO7Dx3g3KmT1DyVY8eOcPbE83hCRwvF2N/bxYsn
      TuMLxdi9JUVJRkkHLMYXbaoL49Q8Bdt28Okq4WQ7PQkdXdcYPHuScs3FQeWeI4c4f+4kBcMm
      kmxj744tzIwP8eSTZ3j4XQ/hWgYvnziBJzTuOXwX504fp2C4HLv3HnyqYHTwHIuVKrZlE/T7
      8NQAh+/ay+njL2BYcPjee5kaPkuuVKVn81a+/+ST5I4eZde+u4gGNYb6TlOo1Niycx/l3PxK
      Xu7atYszL79IzZWkurbhd4pMz+cIxVNsafExU7AYHpng0Xc9hGWU1q8FaIkFWKrUeO5H3+Xl
      M2f55uNf5oUTZ5nKzDN+YYiXjp8kMz8PQsEq5dB8Ko9/9WucOXOar3zjSYbOnSZXMtYrOdeN
      WZplZNbgvnvv5cWfPM30+Ci9ew/THbE4c75ew2/ZvotIQK9fbxQIhRIgFKBe9U0PvowV7uCe
      o4cZOPE0qd4D7NsU5ycnB1dqtKGhIcqL02jxbu7a1c3gWIZt23o5dOQIPrfC17/5PR5820Nk
      J0YpmlVeeLmf+x64jxPPP03f6ZNEU93s2bEFgOyF0xSVFPfdc4SRk88R37SHw7vb+fHzfYxP
      z3Lk6DHmpsaYH+sn5wa5++A+zPwcs0sGrpFnZGqe0YkZDh05Qj6f4/CRYwz1ncTIZZjKljh/
      YYyDh45gFrIUZkcYzyvcc89BzvcPAtC1ZQu9vTvZsbUHofo5dPgwS7MTLE6cYcFNcuxANz98
      +iQAY+dH2HXwEJVigQN3H2ZmfISJU09Dahf3HtnDD3/4LKdOnWbbzn10tKXZ2tvL0aNHiQZ1
      kHDq9Bm279lPOhFelZczA89hRbZyeE8n/UMzpDu68Gkqzz33EyqLU3zzR8d5+G1vXnnO69YC
      +EIJNnX4iOkeij9ISN9LKNpKT2cbhSWoSR+dba1EQ36Uzk34wwF27d5JNBZD0UN0drcTjYbW
      KznriERKCQIQAsdx0UON2RZJdFI4cwrP2QyKvvK9EKvrmIvLLp7nAXL5HVRNQwgHUf8WKSUC
      OHTvAyQjAcaW71+cnebE8ZfZ1LuTA7t7mZ+Z4Etfe4Kf/ZlH6/EpjfFJQFU1hABFUWjfeYQH
      2xb5ype/xAN3b8fDxfM8pKyHCyHQtPr1l6KqKkIIFEXBc21U3Q9S8spKksDzXACU5WsBpOty
      YfgcEdnJnp2bli9VUBRRv+7yHJf1PPmZD36Y4cE+Tp1xEJ6HI0ET9erlAx/6MIPnTnHa9Nfz
      UNbz0rEs9GQAZBUJPPHEN3n3ez/AdGYWENz/4FsI+tRXftNjjz32WMPTvAaEEPh9PmKJJNFI
      lFQqTTwWBiAQDNPaksDv9wPg8/tRhEoqnSYai9GWalkJuxWIxJJEInEwcwyNjHLw8L0sTA6R
      yVXw9Ch37d6CACYuDDG7VMQol0i0bSLhs+kfHuXIvW8i6NOItXawMDHE+PQcBw4dY2zgNPMl
      m3sPH0RxqlyYmCIQjrOpuxNfMEYs5EPV/WzpSnP2bD+JdDvBYIhkLAJANNHK5vYkhXKVQCiC
      V80zObdEd88W2lqThJPtFDLnGZ3MsPfQEaaGzjK9UOWBe+9GEYJUKgWAX3HpPz9GS7qDnbv3
      MHG+j1ypSkdXNy3xMK2pFAJIJpMAtLam8AUjxMJ+WlpTCAHp7h0YCxeYzsyxWLDYt2c74KdS
      yFCsSVoTsZVru3r3oTtFbNcj2dpGNBwAINnSiioEiWQSAfTuO8zcyGnGphZ44M0PcL7/FGXD
      YvvufezY1Mrxk30kUu34NYX+Mycxai479+4jontcGJ9EC0Q5ePR+pgaOMzs7gyFj7N+WZmw5
      n3u6OvCFosRCvpVnLdZrJXgpO8ti2SKie+CLUi0X2ba1h/PDI2zu3YVfv73H22ePP8um/W8i
      HtjolNwiOCYvnDiFa1Xp2H432zqTG50iAKxKnhNnB7GMMnuPvZl09NUr1nVTANeqMjG7gCYE
      UnpomkZEWAwtVtndu53oJVrXpMmtwrpVyxPj47iuxKlVcFFZmMtgoBMUkpplrVc0TZqsK+vW
      AjRpcjuybrNAY2Nj1GqvLNQkEgna22+tef4mTS5nXRTA8zxUVWX37t0r3w0ODuLUDGpSJxYO
      kkq1NtznmHnKToSQaqH4Q2jCpVQ2iUbD65GsJk1ek3VRgCv1okLBIMVchUxunmx2BqPioKkg
      FVADCfb0hBk4d5KoFoawQ6Vs4zkQi2i4qLg1i3A8TsDnY9OmnvVIapMmq1i3LtBaOK6Lz++j
      p3Mn0nOYy2RId22iWq4gBSh6mP3791LNVxB+iRmVOFUDf0DDRScRi1GYHUeLddzIZDa5g1mX
      QbDrupw+fZpIJLLynWEY3H333dcrukmTG8q6KYCiKKu6QkKIlaXwJk1uVdatC3S7F3ivnMX4
      zM+itG7f6KQ0AZCS0Ef/5oZHc0PHALcb6ub7CD7yxxudjCaA8cWP35R4bm8DnSZNrpOmAjS5
      o2kqQJM7mqseA9hmhblchdaID8NVURwDPZIkEmhaeTa5fblqBZjNZJjNGdjJKNJzEaqGLBqE
      tm7B87yVnUS3Kq7rXnHFGkAu72S6FZB2CTd7AbXjYMMOrzcqnuet7I6DunWB4zg3PN6rVgDX
      dXFsC8c2MR0FxSnhj7auzP/fyoUf6tv5Xg1PUblSdtd+9O9w5yfx8iOou34FVc3gZEbwCqOo
      2z5C8B3/oi5j7nmqT/5H8AT+t/8+WMPUnv00oOD/qT9Ca996VWk1v/EbiOT9qG37YZ0VoPbD
      38UeH0IoEv3obyHcYWrPfwUl3oGy+V1oLSrmD/4KEY6htD1I4J2fQAiBtJYwv/W7eIaJuunt
      BB78OLUf/S7W2R8T+tjXUZNByn/5EErLbqTtEXj/f8X67j9Bu+/3cV78Y9zMWURkM/qhX8d3
      4O1UPv0IUttM+GOfXNlmqVzyW63lbZk3mquOYeuO3WzdcSOTcuvif+j3kK5B9fM/h77/UbRU
      B7pnUv37n0c/8P6V66yX/yf6/f8O1T+P+dJnUMUY/of/BGGfpfbSZ1He8gvUnvpTUKOoPW/G
      d/ARkC72yb/GHnkBbecHUaIeztQAipsEz0O6JtbTf4SbnUQ/9E+gdAJSb0NYQ3h2C1oygPmT
      TyKCbegHfgYv8yzO2EmUnrfhP/Io5o/+EiWkou76FbR0JwC+e38HrUVS/dE/4Nu7D23vxwg8
      +EsAOMNfQO19P8F3/O9UPvkepPUbCH8A59RfQ+I+Qu/7NQQSpI07OYjv8Ptwxp5FTb4D1BaC
      H/qfWE//G5yxE8u54iP4gU9ifu2XUO/+N+hb9uItvIBI3I9insErlVFj0Zv9SFe4M9rXdcAd
      /TrEjqGm6nZJ3vh3kIG9qG2bVq6RxhJKOIWItEF1CW33o9S++39Qe/5zSLOAffwvUDb/DL5d
      R3AXJupy8mewBl4i+L7/hHPmvyNSb0Vt6SH40/8B4fNBbR575HnUbQ+hxNvx8iNIo4gsT+OV
      Fqg9/Sfox34HrSWGrCwiwp2onQdxTv4t0izinn8C9B6UWGIlnc75x6k9+0nUTffV/+//HMYX
      P07t+JfqaZp7CfMHvwfJQwi9PsbzCpOo6T31jfJC4C2dRvq3om97E87oj+sb470ytef/K87Y
      WdSOPa+Sl0+h9tyL2nMIZ/Qn6/mYXjdNBbgKpFfDOv73+I7+Ut2DgbSxjn8W37FfQQjw8qN4
      xSxKyzbc2bN4s6cRLb0om95B6Be/iLb1bpS2vQjNj5cbxp0bvlJMjV/pLQR+6v9F2LPUXvhM
      /TvPRtbKAAjNhzd/FndpEqw5rJe+jH7olxDL7lpEbAe+Y7+I4g+uiFRaduN7y2P47/95ALS9
      HyP0kU/hP/qz9XsincjCONqOdy67eQG1+xjO0BNIx8KrZHHHnkJWxjCf/hTe3ItIywbhQ+t5
      gOBHP4+W7rpifjqjP8Y5/yWc8bM4o0+xkVuymgpwFcj8ECL1JtTOXgC84gjED6N11/c/uBPf
      x5kZwHfPbyMz38YeOUfgTb+GXDhF9av/DLcE/nt/Af3eT6CGdWStulKwlMRBfHuOUX38d9Du
      +uco0ThK+wFQlscsbhWn7ws40+fR978Xbds7cfo/i1cyUKIpfA//e3AWwXVBb0Xr2UHtmb9E
      Se8HNYDStromVhK9qD33oKa21s1Xwp14M9/H+OLHMZ//O0QwjdpzL4FH/xyZ+T5utt5SaXs+
      hrZpE9Wv/nPs4efwjBKB9/5FXXHuehgvN4fadRS15xhKKFaPK7UP4Q8sf96D8IeQ9iKE7yL0
      0U8R+rm/RlFsNlID1s0Y7rUGmbc6XjlL7an/eENNIZyhL2Kd+gayWsD/8H9A67lyN+FqsY//
      OfbIS0jLJPDe/4aaSK1DSjce44sfJ/SRT93weJq2QDcRbddH0HZ9ZF1l6kd/E/3ouoq8o2h2
      gZrc0TQV4DbByw9in3+m4Xv71Gfw7NVuZ2Qlg7s0ibdwGnv0pbXllaZw8xmQDu70caTj4pVn
      8Aqv7tnaPvO3eKb9yv99f4dnVNe8VtZyuPPDK0N7WctinX58Qwe9l9OgAE0vKbcmMj+Iff7Z
      hu/tU59FrqEAXm4Kb/EMztjaCiCzL1B75lPI8gWqX/1nOJlRnNN/hTM18KrpsM98Bll7RQGc
      vr/Dq5prX2zlcecvmfGyFrDOPP6q8m82DWOAuckRvv/McR586O1s6WrbiDTd0jiDX6D24hcQ
      rYfwH30P5nf/ECT47v9XyOx3sacmwJhCO/o7KPYA1rmnEeEO/G/5OOZ3/jvhn/3/qHzhNwm+
      9zGML/4WSks7sgZKUMOTaUI//dtUv/5/Iy0T/fBvoLYEML/9BwhfEJL31BPhWZjf/E3cso0s
      VQAwv/UvcbOTaPt/HTVcwpkuoHfXZ2NqT/42oufnUOQwzpJC4MFfREnvRz77OG52ALX3Ybxs
      P978IPqu38A+80msU98GNUjgkf+M9d1fhfBuROLQci5Iak9+Aie7iCzMo5uTVD7zCULv/13K
      n/41Qr/6HWpf+RX8D38Ce/AH6Nv2U/nKbyH8ccBfV7pv/FukY+N7079G7924QcyqFqCSm+d7
      3/8R4ViacLjpBLMRG+v45wi8768I/fT/g9P3efRj/4rgI7+LdeLvAND3/W/4j30YLzeBdExA
      Qe08jBBegzQR30nwPf8eXI/Ae34fymM4F76LdAOoXfuxz/4jzrl/QL//3+J/4BdX7vOKA7gl
      hdBH/xolGgZpocR3oHbuw5l4viEe/eBHcIa/jTP6E7Q976rHHdkGThZ36mW03e/HWzyDV7JR
      E3GsE18i+OFP49t1BHvwBwAobQ+urBvI6gT2dJbQz/0v1JY2CGxC6EWc8eNo29+Ce/6bENmL
      0OrFyxn5Fuq2DxN8z78GBO7Q40g9hdq+Hbvv62utftw0VilAKBHnwIFDxMN+YvHYRqXpFkZD
      iaVwhr+LM/4iSqwHd+LHOOefQsQb3bYoLfvx3ffLOP2fx6uUkbUFnLFnkM6VDe9EpAMUDa33
      Pfjv/RgimMSdeRF3pu+Va/QYmHO4o08hzRqUx7BHXkKJr+09Q2m7D2GewzUCqC3pZSE+1FQa
      e+QcavfdyPlnILQFVB9KJI4z/D2c6VMoy79L2/GOFXsvoUfBXcIZ/TGeUayH99yF9fLX0A99
      BPvUZ1ZWmQFEMImXPYsz8RIgEdF2hBJA2/1BfIfef8UDVW4Gq9yjC6GRX5qgf2CWA3fv5dKZ
      /aX5GaazeYzCIrOLeXLZDOWaRzwWQUq5ypDpdkRaBu74M+g73/UqVwnULW/GWziDlDr6gQ+D
      mQEZxX/fLyNUDSW2BSWcQIQ7UAJ+3Nl+tN0fRNtyH4rqgBJHTe9E7dgHWgg1vRPUAGr7XlB9
      aDvfixJQcecHUeJb0Xb+FDJ/HhHbiprejdqyGeFLoMRb8Io51I59qFvehuITiFAXautO1NQ2
      RKgNNdGFCLWjJrqRubMone9A63jFoEsEkyixrajdhxCqgrrpLagt3Whb34yXOY7a/Xb0XQ+C
      ECjpAwitXiKUjvvROrfhLU2jdt6N2nE3SqIL9CT6zofAKqPtegTFHwA9hrbrPQhrAdQEano3
      2t4PIEQFL3sBpWUnSrRx7cI+94/o+z+w3o+58YlevhCWmZmk7+Q53vrIu7nU0n9kqB/D9Igk
      Y6iei1B1pOfS09OD67q3vDXoayGNBZyn/9Mbck+wM/B57MlRAm/7vxC6/to3bACXm0PXvvzr
      +D/0yRse76pBcDk7yfHT/SCVhumhzo4OJuZyRH0qhqMjHGOVOfRtvxL8KubQtzvanp9Hu/5F
      5xvKLWEOXcwV0QM+atkCJhC5JCwUS7IndmscgtCkyXpg1OzVCtC1az+xrvIqD293Eu7E8zfN
      HUeT1+AGr0dJKfniD/oaxwB9x59lwfTxpgePcbW9xTeCMVyTO4uJuQJ/862Tq7v62QuDOFqY
      mcz0G7Y/3KSJJyV/882TfPynD63uAkVb4syNZkjGYzR9PTR5IyGlpGRYjGZyHB/MsLUzwaa2
      +GoFCCQ6ePCYzsj43IauzjVp8nqQUuK6Ho4ncT0Px/EoGDXGZwuMZXKMzRaomBaxsJ9tHQn2
      bk1zdFd9f3TDPFPfwCme//EQu+7a19ws0OSWxLQc/vCzT2Mtr6gLBKoq0BQFVVXQVIVI0MfW
      jjhHdnfxoYf2Er6C/6pVZVxKF88NcOTYvmYL0OSWJJuv8N++8iK/+K672NHdct3yLlvvqjF8
      rp/RzCLNOZ0mtxq5UpU//vyz/Oojh9el8MNlLYAQId7y1gcYmys2FaDJLUXJqPFHn3uGf/q+
      o2xuj6+b3AYLtlK5hLE4y/mp2XWLpEmT68Ewbf7ws8/wy+++e91q/os0jHN1n2Sx6PHOnstN
      ayX5fAG/StM5bpObRs1y+KPPPcOH37aPfVvT6y5/lQJ4Tg1ftIN4uLH2rxQWGbqQIZ2MrOkc
      t7mVssl647gef/z3z/GuY9s4uC11Q5zlrlKA7Mg57MR22lNJLt+ykc8XMcsFrJCG5TU6x22a
      QjRZT1zX47986Xnectdm3nRw8w0zt19lCySlZODsy/hiHWzfcmXXdo2JbdoCNVlf/sfXjtOd
      jvHI/Ttu6F6Ty2aBBMFgmFRbCgkbulWtyZ3Lt18YQcINL/ywll8gx+DJ7z3VNIZrsiH0jc7z
      3Lkpfu3Rwzdll2GDAswvZRjtu4C91tVNrolFo8KfP/sUxmX+e5qsZi5X5n99+xT/50fvR1Nv
      zh7zVbGUs1Nk8x6P/sKHCN2U6N/4eFLyxOA5dqbSfGd4sDlbdgWqNZv//MXn+ZcfvJdoyH/T
      4l2lAMVcATWoceqFl2jWVevDqcw0raEw7965h6ptM5pb2ugk3XJ4UvJnX3qBD71lz7qu8l4N
      TffoN5BSrcZnT77Ex4/eh1/TKJhVPn/6ZT5+9F58atPW9iKf++4Z/D6ND711z033LnJ7O/O5
      hZFS8q2hfh7evhP/sneDeCDI4c4efnhhZINTd+vw9JkJ5vKVDSn80FSAG8bQQhYhBDtbVy/f
      H+vuYaZYIFMsblDKbh1Gppf41vPn+Y0PHNswv1LrrgBSelgn/hY3cwopG/1h3gmYjs0PLgzz
      nl2NtZqiKDyyey9PDJ3D9e7M/AEYzeT5i398iU989H78+sZ1B9d9DCClxJs9jT3wDdy5PtSu
      Q+g7343ScfC29x53tXx9oI+eeIJDnd1XvOYHF4bxqRoPbtl2E1N2c5CuS21gEOO551BiMfzb
      e/H19qLE4wghePbsJN/4yRC//ZH7SSfCG5rWGzoIlp6LO/MyztC3cOf7UbsOo+96D0r7/jes
      Mkzkczw1OsLHDh1FeZXfaLsunzr+Ah8+cDctoStPOkvHwclmUcJhlEjklj05XloW5pmzGC++
      iD0zg3/3bgIHDwAC68IFrAsXcAsFTF+QH+cF7//5nyK6ZxdK+DZRgOJSltGZRVqjPgxHoDhV
      fJFWNne3X9UskPRc3OnjOEPfxp0fQGnZhrblTaib70cJra+N90Zhuy5/c/wFfvbA3SR1H9K2
      kNbFl410bKTt1N8dh6nFBSYWFri/sxvPMHDzOdxcHjeXQ1ZNECBUFREMAgKvUl5xGCU0DSUW
      Q43HUZNJfBdr2cDVubX3TBPr/Ai1wUGkZYGqIlQVVAWhqJf8ryJ0DaHpCF2D5Xeh1V/OfJbq
      S8dx83kCBw8QvPce9J6ehgquWrP58y+/wIFUkLe31pXCPHcOrb2d2Pvei97ZCRtQKV61AphG
      iWyuUj+jdh2c43pLF5BTz+NOPo+slRDtB1E3P4DadRjU9d1jIEsZ3Lk+vOwASnIr6raHEP7r
      P53cMwxq/f3Uzp7DGR9nqWYS0nWCug+hqQifr/7Sdbz8CEqsDSXegfAHEZoGmsZYqYgjBLt6
      NqEkEqjJBGoyiamqjOeXGM3lmC4VeMuWXnanXhlQS8fBKxZxCwW8xSWc0VGsC6NI20bt6Ubf
      sQP/rp1obfVDTtx8ntrgENbQEO7EJELT8O3Yjta7DRGOgOeC6yFdd/Vn1wXHQTpO47ttI+Jx
      /EcOo6WvbKs/n6vwZ19+kQ+8eTfHdneuCrPOj1B54gkkEHnvo/h6e6/7uVwNFatMvpq/egWY
      z0ySLzskY36qjoLiGPiirbS1xFe1AJ6UfGPgHH5NoyMapT0SJRUKo75K0y1dC3fmFO7Es7gz
      J0FRUdv2onTchdpxECXSflW1g5RyubCfw5vvw50fAKuMiHaitu9Had2BlxvFGX1q2Qf/Q2i9
      D6NErm6jhbQsasPDmGf7qA0NITQd/949BA4eIJ9O8Y2hAX7lyD2rfqtXnqf2wz8CJKg+pLEA
      7rKllerDCiT4nH6E92/uYCnay2ihwEypiF/T2JpoYVuyhVQ4wudPn+Dh3p1sb331Y1ClbWP3
      D1B76WVq/QM4dg00FdV28afb8e/dg2/nDkQgALoOugZ+3/LLDz59XWvisxfm+dvvnOJffPDe
      V13ksqemKT7+OG6hQPSRnyawfQeiZoHngevV35cVs/7Zq7eGr9gyr3yWy/kgXBcclyW3xIgz
      xwVrljFjmlpukWhNECdwIwbBHoWX/55Zw2RehJknzKISQSoa8UCQ9kiUjmiUtnCUllBozX6y
      tE28bD9u5gzu7BlkeRYRbEHpOFgvyKkdiFAKWZ6r1+xzfbjz/RiVHEU9TuuWY4S7D6G27UX4
      1/Zz6hlLuBd+iH3hB2AZaFvfjLr5foQvslwABEiJk12gNjhErX8At2zi33s3gQMH8O3aiaUI
      hheynJufI1sp8+EDh+iIRlfywen7R+y+r+B/82+jdh9p/J1ODWksMpIv8NxihS2qSffU92gv
      jaCGUyjpPajp3SgtO6n6EnzmzEnes3svm+MJZHEGd/4c3tw53Lk+FCWBMFQUQ0WE2xCdvShd
      2xGt7fWC7nlg22A7je+WBaYFtRpYNq+UKgGaCpr2yruqIjWVmqJRVVQMRaUqVKooVD2oOh6G
      7VCtOSwWq2TGMnzivYeI+pfT4LqvFGDHhWoVKlUwqlCzcCplSpNjWGNjRHbtIXTPsXprqSj1
      uBWB7TgYVQPvYndwuQzpFQOv7xwL505iGWX8LihSIJF4CnhC4NP9KJqOCARQgsEbMws09cLn
      0TLD+PJzqEszyEoWJRbGiIRZkD4MT6Oq+9BUnVQ4QjIcIRYIIoSKEMpKAZSui7TdenNfmMed
      6cMzCqiBGp7jxy37cCohXDOCG97MgukiPQ9XUVA1nXAwSCQYRNE0FFVD0bT6IQ+X9m9VFVwT
      d+YFhDkKwrvEDlzW++HLRUKoLmrYh9qSxI3GGTTBkCG6Fy1i03mUcBy9qxOtoxNZGcR2sngH
      Poppe5hVg6Cm49d0fEJB9STCccGy8CwLWTXxKgZepVJ/z2fxynmk1JGeQFBEDVURUYtSBAxL
      IsshKIdQ3AiK4qLICppuo+o2mu6g6jZ6UCfQ3o0M7USKrZhanGpIxwr7qIY0jICGYQkMw8Iw
      LCqGXf9cqb+XiiXirh/d8lBrDsKywasRDufojmRoV5eQiGWVWT5BZvlPE7A7EERTo+AGkQSR
      IoJHCOno9eFM0I+Iaoi4hhICodkIzcJbnKL0o3O4zja0h95KyadRqRpUzSpC0wnH46j+AJ5R
      we7rR5scZ44lPAGb9DTpu46hxOMQCqFEo2jxGIRCEA5B7hwsDaBq+g1QANdl/k//tK7Rnrdq
      0CdtG08auG4Z166heqBJ+Up5E/WkeIogl4ix0JqkEgqgeh7xYolEpYLPcZkM9zCZ6sTTJelc
      hnilhFTBqZXxbAMpJJ4ikELgKSpSD+KpPmzpEPQ0AoZN0HSJmIJgzUN1PYSU2BArMkAAACAA
      SURBVLrOTHuaya4OKok4biCA5/cjVAXFcXFNk46qyZZ8Ab8CIuihiSoaBjoGPp9AzQ2iJzvx
      d+9DqCpeuYSTXcDJzuNVKkirtjrzhKSmgqNKpGD5JV95p/5dSQky64uzGOhkousI7aVJOqoe
      ISVEQPGhSgOFIqqoosVi6MlWtEQLSiyJqgSIL83A2DOIibM4Zoyss43+uTC7rDxxx0RRxOoZ
      JimRnodcXqtQ9Bq+VBU9VgAs3EocT91KzQhg2zVsu4rrWCieRJGgIVClwAo6VEIm1YiNEbFw
      wy4hHcJ2lZADmi+Gqqew1QiOGkbzJdD9Sfy+GNHacexxG9H+EMZzz+MuLKDEongVA1yXsk8y
      0SLpUpPEZ4ro6TRae9vyEVRr72gR1XMEtpg49q76QP5GtABmtYo/EHjVY5Ncz2XJWGShPM9i
      aZ5caZ6lYpZ8KYvj2niVCm7NISti5LwWhNuFqoVQdUG1ZGGas0jmiageSU0Q1zWSkRCdyTj+
      aBgRCiJ0X70x8VyEY2KVZ3ErWUxjkWrZwPTC1NBQrBp6ZRHVcjBVgakpOLoPR/Ph+X3IYBAR
      ChPUA/gUDU0oaKioQkET6spnWZzBy02gdB0Goa4UIqTE8mwWnAK2YxFVgmwhyVZa2EyCID6k
      qiD9vnpXQ1Hqi4jL/V250t+tvwrhEF81KzxaKNMaCC5XNDZerVafcapZSKvGfD7PmXiYhZYE
      IaNGoFYjSwArZPImcZoOM0N8voZn6Uih1NOgqEhVRaoKqq6iqi6al0ENVJG+KDXacV0fnlju
      WgiB1PT6fWL5fkXBUxQQChKBLR1MaWHKWv3l1TA9k4pwyao+ckoAGe2mI91LV6KHzlg3ncEk
      qqJhfPff4e+5h+9pQYyfPMebp4IMB0uIe+4mrSXY2rdARA0Sedc7Cdx115WniaXEHvo29sDj
      BB/5E4QerCvEjVCAkWeeoZLNEotEScYSREJhVKg3+XZ9FqE+k+BStRwWTJes6TBftckUq8xX
      HAqKjhKPkoj5Scd8pMIarRGNREhH8QWReoiqA4VyjULFJF+ukS+bZGZzJIt57okIjnXFiAV9
      9YrAtzzIM6rg2BCNQKqVcijAqfERXj7Tz8h8le2hPHtbbfZ3+InrNaRZqJ8fJj0cKXEVFVfR
      cbUgrj+Mq4fxfCFcfxR10z0IXxgQy/1SsTyeFGiKRjrShl+7elNfKSWLxSrT2eKKG8CLtVq2
      UuJMYZqHN+9C2gLbcbEcF8fzIOwytDRP30iWViWKsFRUDR64q4ctXXGqtk3FtjAsi0BlBtXM
      UXMcao6N5dirPlsS1FArmu5HU3V0TUfT9JXPAK4ncTwHx3Xrr+XPtuOAdBGeA9JBeBc/19+F
      lAjpgXRBeuQFLCIwkFiiPgbzCcFHlo5jtW4m2/thfKoP5+wZ0s+/RCkRR3n72/B3daIKBVVR
      UMWyi0RFQVMUNEVFUxTaZn5M6dwTiHf/AboeXAlb/4UwKaF/uF7QdQ2padieS8moMDQ+w+kZ
      g4ypUPFACYWIRIKkE2FS8RDpRIh0Ikxna4REJHBNi2VSShYKBi/0z3B8cAbH8ziys5N7elN0
      hX14gQBDc0VOnp/l3Ng8mqJycHsbh3Z0sLk9zvhsnrOjWc6NzZMv19jSHmf/tjb2b0vTGgu9
      7gkSKSWm5VCzXTxP1meqlr/3pFyu1Ouei2cWS8xkS0wvlFgqVRFASyxIR0uEUEBvyA81IHlp
      fpwd/g6KlsloaYGezihHenqIyRAaCrqu0p4Mk4wGX3deXky/43nLL3fls+3WP0tYLkyXvtSV
      z8DK770oT176znIeLM/ieMvvknr+uNUCzsj3CJ/8FLnO+1Du+gWIb6qHeR7uyruH68l6ReXW
      /7+YZtH/NQ7URnlx7z+lJsWq33NjV4KlZD5X4ZmzkxwfnCERCfLgwU0c7G0jEvTflHWPimnz
      8lCGFwamySyW0RTBzk2tHNrRwb6taQK+K9uheJ5kYr7A2dF5+kaz5EpVFGWNfiWgKgquJ+sP
      Ela6oAKB36fi1zVUpd4yCFGfuVCWw4UQhIM6Xa1RutNRulIxWqJXVwFM5HP8w9lTbG9p5VjP
      ZrqisTfkKrt0bcwnH8MZ/g5q5yH0PY+itG4HLYDQA6AFEVqg/v+yqbmUEvvMF3CnXiLw7j9A
      qI1HvtwQBcjmKzxzZpIXB2eIh/w8eHATR3d3vWphuxlIKW9I4ZBS4rgeqqq8qvlDk+tDSo/a
      dx9DhFoQkTa84gw4JtI26++OCbYJXn2dxSvNgG2gJHvh4uyi5l9WFD+oN2AWyPMkf/udU/R2
      JTm2u4ug/9Y8lrPJ7YmUHrUnfw+R2IzvyC8tfysumfCpf7BPfBpv6QL+dz5WN+1YvhenVlcU
      xwLPunYFyC3MrbhGbO4Ia3IzkdLDeubPcOf6Ln6zvHYnV/5XO+7C9+Bv1deVXoVrUgApPcbG
      J5CepLd3W1MBmty2XJNtrQCMYg5PNAt9k9ub5qb4Jnc01z0t43ke3mVb+y6fbfE8b9Wq8KXh
      rxb2WuEXdfdKMzvXI3ut8DeC7Mvz7HpkX2+6bpbsVwu7bgW4KFhRFJASD3CtGpovgCJeiezS
      H1YslojHYwCrwhzbrhsoXVKeLw93HBvNF0BTlYaHaZlVpKqv7DG99F6kxDAq+AKhFa9jq8KX
      qdVq+P3+1eFSYtk2mqqCUOp2M5f+Js/DQ2I7LgG/b03ZtmWC6muI++JvqFkWgcvjXca1a1Qt
      SSQUaAi3bRtdXz3Tdnm4bVsEgyGEEKvzTEoqRoVgKLwyfXvpvZ7rUK1ZhEPBlTxuyDPPoeYK
      /Lq6vMZRf0nPxZH1OFRNQ1x2r+s49X0lmg9VWVt2tVolGAw2pktKFCSWZTc+K15fGVMfe+yx
      x7hOVjRRevQPDjI/m6FQMUm1JFcyBMAuzzM4MsHc9Awi1kbUr67S4qHBfqpmlWLZJB6LrJaN
      R9+ZU0xn5igbFunUatlmcZ5Tp8+RmV8klEgR9K2WPXZ+AEcLcuH8MJ0dHZfJhomxEUplg7HJ
      aTo72leFFxemGZnKUlqaxfPHCQe0VfeeH+xndGyCXLFER3tbg+zhc6cYGh4Bf5xENLhadnaa
      iZk5xsYnCMRaCflXyx4e6Ce7lGMpl6O9Ld0g+9SJl7AcFw+VYMC/OtwuceKlU2QX5qmpUZLL
      i2sXw88PDTA1M8vCYm7NdJ85fYpIJMjoRIZ0qmV1uGsyMDSKmc8wbwZIxYOrZA8P9GMYFaYy
      87S1pVcU4CJnT50gM79IsVgmnWq9LN1VnnnuJaZnpuno7EZTlcvKyQCFpUXGMvN0X/asPM9j
      YGCAuakpvGgbscDqcjA8NIBRrVIoVYnHouvsFUIIhGuzadsONnU3uldX9DCW7dC+eQsdscb1
      gUg4TKIlTU9X+xXEK2zespVNmxplq5of4Y9w6OBeooHGhi2dTjF+fhj0tU0CfLoPRVFIpxo3
      x4TjrQT9OqblEA017lZLp1ro7Okh4F97O2KqvZNwKIRPaxwnRVvSGOUSkUiEaLBRdmd7K7ml
      JVT/2ntnW1Ot6Lq29iYWPYLm09CEIJVsvD8eDaH5AsRia29UScZCnDx5hvbunsZA1U9A87DU
      KJvSjXsuOtrbcDzQdX1NL+PpdBvxaJjWtjWetR6gtyeNpwTwaY1FtHfrJjILeVoTyYYwIQRO
      JYch/HQnGvOzvb0Nx3FXWo71VQApEZpOKZ/Ddi4/YgMcI4c/lsZzalh2Y3jFtHBrZSZn1jqf
      zEPzBbFrVZw1ZNcqBRKpNubms2v638xmF/E8D9euNYQBLC4tMjExSbGQbwirlnLMZWYwajam
      3ejKZGkpx8T4GEbVWFP29PQ0puORW2j8XWa5QLVapVgqU642OqScnV8ARaFmlNaUXSwWmZyc
      YjYz0xhoV7BqFrbrsZivNATni2WMcolCsbCm7EKlSntXNwszE42BVons/AK2bTFfbMzT+ewC
      5YqB0nDUSp3FpSVsV5LLzq0hu8DkZIaO1ijji42yZ6em0UJh7FpjfkspMWuS9mSIqaXGe4tL
      S2QLZfJLWWC9FUAoBH06hWIBb425JS3SApUsxUptTbPVjlSSqdks7hoFHFRCQZ18oYi7hvBA
      rBWnOE/ZsNYcFLemUkRjUZKJxJpJT6VShMMBkq1tjbIjCVqSMcLRJNFAYy2eSqWIRqMk1qiR
      6uFpwkE/ralG2f5QlGQyQSQSI7ZG65JKpYjFXl12MOinNb1GTaoFSLcm0EMx2pONtXRddoRE
      Ym2nBIlYDMcyaWnrbAzUQ8SiIUxH0pFsbFVTqRaQHoHw2nuvY9EotmWSal9DthYmGg1hOoLO
      RKP1bGtbGl1INH9jvEIIItEgNVehPd6Yn63p+r26v+6JY519bEhMs0o03kKl1FirSMfGrFm0
      xkMUKo0O2E2ziisV9DVnVOv7DCKxBNVyY23oOham5ZCIBimZjacblMsVpNDwa2vPGFUqFQKh
      OJ7dWKvYNQOz5pCMBTFqjcpZLldA0fFdYSa4UikTjCRxao21sGOZVGs2LYkIFbMxTyrlCig+
      dGXt2epKpUw42oJdXaOFcG0qRpV0a4J8qbpmuhXNjybWrqWrpkkk1kKtskYL4ViYlksqESVX
      aqxpKxUDzRdAZW3nX2bNJBpvpVpubHFxa9Rsj3QyzGK5sVWslCsIVce/RvdISrBsj1QixNKa
      95YRqo5vuRysswIIItEYmvAoVRozXNF8JFvbqBUXMK3GQhoMR0gloszMzl9BdhxdlRTKjQVJ
      1XwkW1MYheya3atQJEJLPEJmLrtmyiORCEG/xlK+0WWh6gvQkkpRWspeYpe/WnYyFiYzv3BF
      2QGfSq7QWEgV3U9Layvl3AK1K8hOREPMZhevKNuvK+SL5cZAoRJrSYNZpGI2FoZwJEIsHGRu
      YW2P1ZFIFJ8mKJQa8xtFJd7ahqzmMNaSHa6ne25+kbVUNxKJoqtQKK/RbRQa8VQ7XmWR6hqV
      QjAcoS0ZYyrT2H0SAuKpdpzyAtXa2mUsnYwxvXzv+ppnCghFYiQTcRaWGjVbqDqJZJKIL0HZ
      a4zap6q0tncRWNO3jSAYjpBMxgksNMpWVJ1ksoVgKo6pNFbFuqqS6riSbND9Ido6kgQCjYVY
      VTUSLa20JaN4azRPuqbR1tl9Rdm+QJj25NqyNVUlnmilvSWBs4bHaE3Tae9KXVG2PxihI5kk
      sLCG8qk6sViMZCTFwhrlTNN0OrvSV5QdCEVIXlG2j3g8RjLcyoLZWI8qqk5HV4pgILDmIDgY
      jl5ZtuYjEY+RDCVZsBonS3yqQrLtys8ykYgTDyTIO2vcq6m0XFLG1mUluEmT25Vb089ekyY3
      iaYCNLmjaSpAkzuapgI0uaNpKkCTO5qmAjS5o7luBajV1ratuVl4nodtb+yx3hudBxsd/62Q
      hmuN/7oVwLI29kThW0EBNjoPNjr+WyEN1xp/swvU5I6mqQBN7miaCtDkjqapAE3uaJoK0OSO
      5qYpgJmb41T/MLU1thQClEolTMNY2UBnGGtvL7wSs7OzLKyY1noY5dKqPQlOrUa+VKJazDIy
      sdqO/OJ91fwcp/vPYzmvpHF1OjxKpTXs7q+BsZEhZubqNv6V4hLVNTba3AgmRs9zbmCIcsWg
      YhiX5NkrlEslHMtcc/vnerG4uMCV7JBnZ2fX3NZ6I7hp7ppd28KRMHWhn4WKR0y1qUkFRVGY
      nFuiPR4gFmtBqh5G1SUZC7N169arlm+aJpqmMdB3GkfV0W2LvK3gFGfxxVpQXZWO3i3Mzkyz
      VPVwyvMoisK5Cxl2b+sgM7/ItnQQx4PxC0Ms5QoEI3FiYYXcYhWFKrmqS0D3o7gV8McpLMxx
      /0MPX0NueAgtQFtEMDk5yWI+j2OOo+ku83mLd73tTdcg8+rQ/CHSAY+5+QWE8KiV8sxOj1Pz
      dGy7Rk97G5n5OdKJOKHOrQT0qz/Q4/Vg1SyG+05Q08OYhSo4edD8TGcW6N66k/b2tR0jrDc3
      TQH0UJSAahJLptHCHrpSr10CuoIvFCURUJFakGA4gErd29zrwa8JalKhe/M2wMO1PfR8Ab0l
      hOoPUcwVCAcCBHu20CXAVTRUx8TBTzSi4ykB9KAPv7ZIS7qTjs5uAFzXorU1QLmwQFxq4NTQ
      1DRoPlpjYVRFXGHb96uh4NdgrmBilIukWlOUimUSsRDhWOMupvVElQ6FGrhWlXR7OwYuSiBC
      Ob9ErLOdhYVFtmzZjGN7hK+0x3MdiETru81MqRDr2kRuYQbFHyQSSRBrab1h8V7OdW+IyeVy
      aNrG+f13XRfHcVbcXGwEhmEQCoXu2PhvhTRca/xXVXJts8JcrkJrxEfFVVEdY8U1uqZpRKPX
      f+r6teI4DpZlbXgB2Mg8uBXivxXScC3xX5UCzGYyzOYM7GS07s5O1ZBFg9DWLSs18Ebhui6e
      5214Gu7k+G+FNFxr/FelAK7r4tgWjm1iOgqKU8IXbUVRFFRVvSFdIMtxGRhf4K7trz0Ycl13
      Q7thNyoPbpf4b4U0XGv8V3XH1h272brjdcu+LrK5Cj/pm2LPltSaLgWbNFkPbtmFsOmFEpbj
      cubCWj6CmjRZH25ZBcgslhFC8PLw7Jp+Rps0WQ9uSQVwXY/5ZWeu1ZpN39ja3tyaNLlebkkF
      KBq1FT+ZQgiOD2Vw3Bu3LN/kzuWWVICpbHHl1BAAw7Q512wFmtwAbkkFuNj/v8jFVsD1mq1A
      k/XlllMAKSWzS43eiMtVi/7xtb0vN2lyrdxyClCtOeTKja7VhRAcH2y2Ak3Wl1UKsDA3i7XB
      g82ZxdIVjz0tGjUGJ9f2k9+kybWwSgGcap5Pf/qznB0c2aj0MLNYWjmy83KEELw0mMFb6/yl
      Jk2ugRVTiEpunpMDY+zY1svOndtWXVQt5ZheLJMIqhiOguIY+CIttLWufd7WtSKlJLP46juu
      CmWT4alFdm9OrWvcTe5MVhQglIjTmUqTK5sNB9hNTc/gKgEqqg/hWUjVj1kp4iVj62oF6Lge
      2XzlNWv4l4dn2d5VV76mNejGx38rpOG6rUGF8OMP2Ez2NZ67lGptZWp2iaBf1K1BzQK+yPpb
      g84XSrieRF3jBMlLsV1vVZxNa9CmNeg6WINKJD4i4UYhyXQHyXTH9aTvqpjOll6z8Ddpsp6s
      lLbshX7mDIWgX7vCwZY3nszS+nhcaNLkallRAC0YwTXyKDfIC8Br4Xoe87k1juNs0uQGstLf
      SXZuZh86nZ1rnNx9EygZFuWqhaY2u0BNbh6r1wHKi/zomZfYCGfjlxvANWlyM7hkDDDIkuEy
      MzPNRkxmXW4A16TJzWBFAaItceYWciQTMXw3ORF1A7jmALjJzWdlDBBIdPDgMR8j47PcbEMD
      03LIlUyUZheoyU1m1Rigb+AkP/rOUze9C/Ra5g9NmtwoVhRAShfPDXDk6L6b3gLMLJaatX+T
      DeGSFsDFMmtE0m3czJWAqzGAu9WQnoO0mmsWbwSUSz/GQxonTvXd1JVg15Nk86/vLICNRhZn
      8PKTG52MJuvAJcZwGoFEmrfcncR0XSLqK97Y3FqVvvNjtEYDl5hDt7Kpq+26E5DNV7Bd97ay
      AXKzQyjJzRudjCbrwCrLN+nk+cnxGX7uwIFVF42Nj5FbXCAY7EGVNsIXxDYreJ533Waww1OL
      COrn/V4tnidX4twIc2hn7hxqrAd5SRpuR1PgN1Iartsc2nNq+KIdxCOzDRdt37WX7s0m0jYx
      XHVlQ8z1mkNLKZmcL6G8ztpfUcSGmUNLq4JtZFFVBXU5ztvVFPh6qNo2AU1bWby8XfNg5Y7s
      yDnsxHbaU8k1TzwJBAIQCBAEYH38wJcMi4WCgXob2f94+Unwmq4ahxeyHOjo5Hafu1speW27
      DuHNnye1dedyIb/xnJ9Zet21/0bjLY6AuL3SvN5IKcmUChudjHXhkkGwIBgMk2pLIeGGa7aU
      krFMgdvJ/EdKiZcb3ehkbDh5s0rV3giTyfVnVVVWXJzks5/5ErWbELHluMwslm5CTOuIVUZW
      mi4aZ4qFN4zh4ioF8EfCCFfelH7d+GwB7yadBbteeLlxpGw65popFjc6CevGigKUs1OMTOR4
      9MM/c1NWgi9kclf0/3Or4i2OIO7w/n/VtsibjZ77bldWnmYpV0AJKDz7wx9j3eBIXc9jYu72
      qkXq/f+xjU7GhjNTLN72Mz+XsjII7ty1n85d+7GqVW70iVyzSxWqln1brf5iFvGMxTdM3/da
      yZSKb6g8WFUCszMTPP3jp5nP31jjtJGZpdur8MPy7M/tNWZZbxzPY758m01cvAarSuH4xAQV
      w2R46NwNi1BKyfjs7TeH7Db7/8yVS7fdxMVrsWrtuLuzg7wheeCee25YhIVKjcVi9bby/iCl
      h5cf3+hkbDhvpOnPi6xSAE+CT1ORl/1Iu2aQWSiSjgWouCqqY6BHkkQCr3/38Pnppduq8API
      ah5p5Bp8pt5JSCmZLd1eExdXw4oCLE2f57mT/ZRKBm+67CLbkdSqZWatKtJzEaqGLBqEtm55
      3VZ4o5nc67L8XIubbQ3qZYeRSOTFdEsP1/XuKGvQXLW++nuxapRC4DoO3nJlebvmwSuOsbp6
      uXt3lQuTCw0bYhZmJ6iYKhGfTdVRUJwSvujrd45rWg6zS5Xrtv+5kjWo9Bzss19G6307SiR9
      XXFcilUYR1FemRuTnnxd1qDS87CGhrEzGYTfj+L3IQJBlGAAEQigRCIokcg1tzA3wxJztlI/
      t+FiF0gIgappK2s5650Gy6kxON/P8MIgQS1Id2ITm5NbSQSTa15/3dagQijs2HuQHXsbL9q8
      fS/rsf1jNJNfBymvgpR42UFqs31om+9F2/4OhB64PpGei5e7tv6/tG3MvnOYp0/jVatr9p+l
      54HrgqqgxhOo8ThqMomSTKC1tKCEw/D/t3dmvXEkyQH+6uiqrr5PspuHjtHOaHeunTV2HwzY
      b37yj/SjX/xiAwYMA+uHNWAb9hrrGfEQ75tN9n1Vdd1VfqBEsqoozUjTpHZ2FYAAqrIjIyoq
      IzIyMyJSlhFk+UpBPpAP/lDbn2ejU7baGxz2965i0l7RPB2d8J+H/05WybNcWmGl+Iin1Wek
      pNSPovegAdyHF8MHEaIggH/y3/gX3yH/7G+QVn793js44WxAaI0RxB9+OhKYJtZ3L7A2Nwld
      F+GW5UzwKorwyvIH0ynBdIp7dnZF2/fhtrsoCCBJCLKM9pvfoH39VaK/metwPBzi+j6O72F5
      Ho7v4fo+iizzTXOZspZ5BwmA4ThMLOtevl0QBnT0NqfDY7Y7LzEcHVG4UvTb1ARBQBJkLM9k
      v7fLXncH13f4ovn1j6L/YArg+wEnnQdcRAkCeDbuy3/GP/0f5J//LVLlk3fuJhi8W/izvb2D
      8bvf3WLj/QeNIEkg3aF4vk9o3x2yOJjNWG9f3B1m4jj8294Oz6o1vlxskrqr7zugNZnftrXj
      ObTGZ1xOW1xOL+hM2wRhgPTKwIjvYqjeIFu31SKYTq9mTklGSMkIqRSCohDaDv4rQxPMjIdT
      gFZfx3H9By9/IggCodHF+f3fIZYeIT/9a8T6z3/wwAwGB+80iP3h4H1ZfRAQBIGDQZ/z8Yhv
      llZYLhS/9/3e1f35xxf/wMROGrswDJk5BpIoRdcSwnxjD6y1ddzj49dECcMQwvBqNhXFK8Py
      Ch5MAfZbgw9a+0cQJcLJOc63f4+YqSE9+SukpW/e6tqEgUcwOnlALh8ObN/nv06OaOTy/Gp5
      hZxydwik6/t0jXeLDDBcA9uz7myTpQdOm7ztft4x482Vm8HU5OwONycE9s+H8yT13iAIIqE5
      wN38J7y93yI//kukpV+BkktYudDoEdr6O/n/PyUQBYGOofOvO1ss5vIsFYqsFIoot3ZTLvUp
      YRj+yR2AvYa5KsDx5Yj/WD+bZ5f3BoIggDvD3f0t7va/gCAhpIuRf+Gs/2cT/tDWp1xOJ/zv
      2Qm1bI6lQoGVQomLP8HT39vwYW9W+yMAQRBAenWi7eiEjk44Ob/9gw/D2AeAK39cYGjOGJoz
      Xly0EAThJ5e38S7wZ68AH+HN8FOL2H0f+NN/w4/wEd4C764AYcje9iYn58kCWh/hI/zU4J0V
      ICREzRbBv+/EyY/wEe4f3lkBBEFA8G3SueJ98PMRPsKDwnssggVWHl+FFARBgOu6TKdXaXKa
      HPBsMfvqdyGvople/Tf8/r+vUw7f/jtNla9pvg6D9X2fMPDxyl9C6L9Cudm/Tuxl3+rvTb+L
      4LzOhBIECEMcL4X4iofZ7Ka8u5PL4z19ckdfN+g/lOZbcbJZ/Dvo4zg01TSvI2lCwu/9m1gp
      tB+CI4kC+nR6zc9tHlYzj7EV+3to/jA6b8NRg/T1OLhN36pVCcQ3yTMm6zD8cTlu0+mUfD5Z
      KzQMQ4IgQLrj9M33/Tufh6+Ore8Kl34Tjud5OI5DJpMM8Jonndc5DHfhvEkGb+rrbW3vg/Mm
      +vOm8zach5DB28bU+9Kf2y6QMR6wtrHJwdHVxRGCIFwT9m2dre092r2r0+DbDHU7F6xvbl3j
      vB5gnjVle2ePTn8UwRn0evTaLbb3j6IMhAGnh/usra0x1q0Enc7lGRtbuwk69mzC7s4u3eE0
      gdO+OGVzew+4GviiKELg0uv32Xm5SS9WPGA86LK+scHxaSvR12w6Ym9nh97YiLX5HO/vcnCS
      xOn3umxtbmJ7QaSt1+txfLDH+WUnQt+eTdnYWGd77/A6d/e6P89id3ePs8vunXQ2Nzbx/DiO
      yc7OHucxnPFwQL/XZnN7Dz+I2s+LsxPW176jd4c8e70O6+sbd/BmsLW9z0WndyfO2trGtSWX
      JAnCkF6vx8HuNpfdaOxVr33BxsZ6gme4GjuHu5uMTe+6bX4KoOt4gYAixw5NwpDxZIogSkhC
      VFgzfcLMMNAyMc0Ng2ucePiQELocHJ8TxCu0hQG6oVMoldFjqXvGdIIxUmM8UgAADQhJREFU
      M8lkslGcwGcyvQp1EGMVH4zphNnMSuIgMOi0mBgm8bnT0A1CQUYSYrwFPlPdQJCkRE2d8XiC
      7QZk0tG4dscyMAydVDo5s+mTIb3hiCA2+CzTwHYDsukUjhflYTyZ4IcCqhTlwDZ1DGOKouUS
      dEaTKQEiSgxHEgIOD0/w78js0/UpmUIFy4hGkFrGlJkxRc0UknTGUxBF4kPHfI2TTa43x4Mu
      w8k0IQPd0JEVjdCLRsuGno1uGEhyNI13bgdhhmlRKWTI5mPMCqAoKvXFApVCdDClMxlULcdS
      LZa9JQhXOAtFyjEcSVZYWmrSuozV6Ax8TDckJ4g0G9H+tEwGLZOnVo/daCOKqIpCfbFEMZ+J
      4Who2QK1ejKzTMsWyGgOg/GEevlm4MxMk0I2Q75UTdJRVbRChUI2Wns7k1YpVmvUa5XI85Sq
      oaY1Fss1VDlqp9JpjcVFjeFoyOrS4vVz27LI5fKomRzpVHTaV1WVak2lVo4OQCWdQVUzNKo1
      5NhAVxWFWr1GtRQ1UKIks9ho0u608YMQ6ZaVMk2LYqZAY2k52lcmi6pmaVTriZNlRVGp13NU
      isnxoahZmrV6IhxD0zKomRyj0YClxRt5W6aFli9QqS1Gfo+koGlp8sUmafVm2M9tBsjkiyzU
      a3CHZd47OCG0xmwfRO/VOj/YI5AU1tbWojiBz/7RKb45ZOfwPNKUkiUyhSKPVqMCRhBpNJuU
      S3lmZlT7Tw52CWWFF3E6vsv+cQtn2mH/tB1pOt7fBTnF2tp6FEeU0DSNcm2RajFqNfOlCvVa
      jdCPVU72bQ5OLjEHLQ5b/UjTzs4uiiywvrEVeT7unDM2ffa315k50fsIFDVNqVSmuVCLPtey
      LC7USUlCwjXZ2T1AxmFzez/yvN86xvBga3M9MWvs7h0ihTYvYzgpSULLF3i0uhoZ/AALjSa1
      ahnTiN771j45wAolNtbXErzt7h0i+jO2dqOVty8O93GFFC9erBFZqgqQ1jKUylUWYoajXK1T
      rVTxnGg0amANOWtPaB+9pD25+T5zUwDXmPDtxhaHR0fRBkFEU2Bn/4hqNfrBGktNdjZeoMSn
      RVEiqwhs7x3TaEStdufyAtt2abUuYnSgd3HGxvoGnX50+q3Xaxzv7SLIsZsPpBQZ2Wd995Tm
      Yoy3xgL72y9RszHefIfT8zbGqM/EiCrabDJk/eUWR8exEGpJRcHm4LRNNWaBF6olvvv2Oyr1
      RuR5oVpn2DrC8GS0mDU/OzvFdUza3WiEbWCbvHy5ye7eAa4fHcyFrMr29h6lSvQ9KwsNWgfb
      uIJKKjbTFHNpNl9uU28uRZ4P+x30mcVFq5VwA/u9HpvrL2i1ozN0daHO5fE+TiglZoBiXuP/
      vl2jubIaeb64vMTx7kskVSNSsD+Ek9NTXHNKdxB1d0fDPtvbWxyfRg2nmC7iz/qc900quRt3
      c24KsLi0xOrKKs3FmJsRBsxMB0mS6Heji7bW+QWZUpUUMYsZ+OiWz6PlBp1OVJD1hRrnZ2cU
      y7HkaFGm0WzwxZdfklGjnl2327+6zyweo+47mLZLs7FA6yI6A3Q6PZYfPcHUY+HdokIKh6kd
      UCpE3abm0jKrj56wWI+5QJ6FaTlIkki3H82L7g2n1BYbGKOobCaDHvlaE1VwMN3oDFDIqFx2
      R1Rj1q9YW2R5eYVPHi0hxFYbU8NCECXGgyidXvsSOZMnp4rYbmzdoJs8efyYXjt66l+u1em0
      zsgWiolYwWZjgc+++BWFbDS/oNfu4vnB1X3UMa3RZzbN5RXap0eR552LS5qPnuBaM+JV+TKq
      RGdoUKtGx8HS0hKPn35KrRJ1xQNzhO14yGJIZ3JjuOamAON+h5llc3gcvz5UpF6voSoqCwtR
      f7pWryMToKRjC01BpFou4oUClVL0RbrdIasrzeQMEAa0Oz1G/Q79UbR8X7VWI1/IUy7FlSZF
      IZfDcVwWatFBW65UCXyXSjU6yPBt5EwJyTe56EQtcL/bxjRn17tA1yAp1GtllHSWhWr0fSrl
      IoHnUihH6WdyRRQJMvkySswyW75IMZPi4iIqA3MyYDIzOT45ScwAtXoNLZ2iVo/6xsVylbQs
      IshqYgOjWqngeh7VmAwG3R4rqyu0Ly8T7sxlu8N01Kfbj8qmVK2RLxapFIuJjY1CPofrWNQW
      m1HeKhXwPcrl2DcAAlElkwq5uIgqZ7t9iTWbcn4RVXRRzVOvFFByZer5m4Xw3BSgtvyUZ4t5
      Pvv8l7GWEN0wKFZqGHrUNdENA1FWSCW2aUNM20EkxIrlvj5+9iklTeKLr7+JoggSX339S1Lp
      LF989iRKRzcIBBk1sUPlYzkOpVLp+kDlNVivksAtMzZryGmef/oJWrHO58+i65DlJz9joZjh
      y69jMgg8dMOkWq0wmUYv2J6ZJulMDj/ms7quTRCC61iJQfb8+XMkJc03X30ReZ6rNvniSYPl
      pz8nl47Ogoauky1Ucczoe5ozg0CQyKjy9TbodZtl3imDxUef0CxpPPvF16RiC+fPv/yaVCrF
      119+Hn1Pw8ALIJNOJdwmy7bJF6uYenR2vP4G8XLsgsDz589RtBxfff480vSzz35BKpXi138R
      /QahZzEzHRYqeYb6PawBut0uujHj4uI80ZbPF5AFn6kRfREtm6NWyif2swlDfM8jncljW9HF
      1HTUp9Ud0etEXRYCj25/wLDXoRebATK5HNVijot2/HYXkXyxjOjb6LPoR3YclzAAJa6doc/x
      0SGT8SixBuh2u5gzg/NWbAYQJAqlCoJrYMQW6LlcjkxaoT+MGgfPdfE8n1xWw4m5QBfnJ+j6
      9PqM5DVMRgPG+ozL1nliMOdyedSUyGgSVUBVy1CvlOh2OglF8z2flJrFd6PfzdJHHLW6DHvt
      RLngbrfLdNRP7M+nM1nqlSKtyyROLpcnJcFEj35r13HxPR8lHUvXDEPOTo7Qp5PEbN/tdrFn
      OifnMQ9BTFGsLeBOe5jOjQLMbRs08BwOe0MqxdiiURDI5AqUiwV6sY+sSCLVxaWrGygjOBIL
      jSUU0cePXdlnWRYIEq4dzzkNGXYvkdNZLMvm9k2WKVmi1riDjiiSy19ttfYmUeEXikVSmRyn
      J7EMtzDAtGw0Rca0HYq5mz4926Q3NijmYy6dKJEvFCnnNXp6NIgwpWjUFssJ3rRMjuXVEoPL
      M1KxUpKWaSErKqZpAjduXei7HJ13KBYK+GGIfGsdoGZyNMpl0r1epC9ZkijVGxRy2cQ2aHWh
      gaZI9P3oN7BtGz8UCVzryprfQpuMBiCnccwZcOO6KJJIud4kq2mJsxAtm6dcLtOL8VbI58ku
      FDg72CcOlmmiaNrVeOBmzFmzKbodkJOi60pBUiiXSuTTJcbezSJ4bqEQl60z3EBkebl5rxlE
      rmNjWjbdXp9nnzy9CYVQU2zt7tNceUQx9251b94JwgBd1wlcm4krsrJYvZbB+ekxyGmWGgv3
      mkY4M3Q8P2A0nvBodeWa/qh3SX/q8PjRyr3WX/VdB8O06Pf7rD56jCyJ1zzsbm9SbaxSKc7n
      Kt07IQwxDB0/CBhPDFZXlq7pHx/soebLNOIbEW+AuUnJtF2Wm3XOW/ebJzAd9DC9EM+P3dUb
      BqjZAoGtMzHu8wqfkE63D4T4sYWm4wUsVovJQ7o5Q7d71X+8FqbjuDQai7QvLxLuzDzBnA6Z
      Wu5VAGKsTVY05NBlOLnfOya6nQ6E4PtRGQSCRDmr0O7+sPI0c1OAvJbi93/4jvE9X6Dm+T6m
      PsGLDT5ECWfaZ2f/KOFnzxXCANu2GI4nKEr0WF1LSfzhxTqTe66i7Dk24/EIIVYWUEurvFx/
      QXdwvxcQen6ANdOxHS8x2weezdb2DnrMn583OI7FeDxClKPrA0kIWdvcSmxqvAnmtgZQ1TSl
      So1C5n6v2MtkM4x6E9R4HRtBRFXTfLKwhB/e403ugkRKEglDAVWJDkA1rVKtLSbOIeYNipLC
      9wPUWInDlKKSK5apFHNXFRXvqZqLlsngDnVSipI4B1BVlUdPPyW854SplJwiCAO02AI5raos
      NFbu2Fm8G+Z3Euw4pBX5jnOA+UKn3UWWRSaJq3pCPD/ENsb0h/d4jY9vMzUsJIHEXrfrOKRk
      IXkOMGcYT6aEiExG0bAK33NJKamrk+L4DDlH6Hc6SLJ8tbUZ221yHRfPMROymTdMdZ0AmWE/
      uoPouC4ifuIc4E0wt0Vw4Nq4Qgrfse6MzZ8XeLaJL6mMBz0WFhYi+QCmaaKlVWaWQ0b7cVWh
      3wwhs5mJGHrYYYpiTruWgWtbCLKKY5v3KoPZbIaakhhOTWqV0jX90HexfQEhcJGVdCJOZ14Q
      eDZ2IKGPB1SrdURRuObBNE00TWM2m92jDK6+gSLBxPSplPLvTf/eEmIeCt6WEPNQ8KFl8KHp
      /zHw8L70P5ZF+Qh/1vCjFeBN6WYPBbczzz4U/LnT/2Pg4X3p/z8xqmGpWY38MQAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='78' name='PerCap#' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='PerCap1' width='192'>
      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
      P6eyz87uHk6tRK76ur38/i6ZdJpaQ5607aapN17nz+azO6R309hu09aol3j86BHpvSy21/yF
      qOQypPdy2JXi0b0A5PZS7O5kaPjBMVuSnZ0M7jHb/l6Snd09XNm01SsF/vCHL8nsZ/Fk8+HM
      ZXbI5ArUygUa3rHXZrZI7WTxlT5hS+5kkcdt6U22U1lU0LRVSzk+/+JLsrl91EGfnkkm2SuW
      KRfzBMHr12Z319lM7p84mim7u85WslmI99C2t7vGVjJ3ZCvls/z+88fs518X7N1OJrEdl73d
      5LHqE5rnT19Qqb9+6NABz56+oFI7aXv+bPWEbWd7g6err9jfP+nDaXikU1vHXqt4/nyNSrX8
      2hZInr84a3vxYp1ypXRkS26u8fzlOvvZHOgOUalUtF8r6Ed/fK4d1z+yK8/R26n0iWul5+jt
      ncxJm2ufsSnp61KpqDOpTZ2vurpSqWinvK+/evJCNzx5dJ3fqOvk7t6J1/qNuk7tZk/YvEZd
      p9InbUr6ulQs6tT2hq7Ynq5UKrpa2NNPnr3Urq+OrnOdqt7J7J94rWu3tu3u5U6+N9/TpWJR
      b22sa8eVulKp6OJ+Wj9bXdO+fO2jUa/odDZ/4rVOvXzWVjtrk56ri8WiXltb175UulKp6Gw6
      pVdfrWupgqPr7GpJZ/YLJ15rV0t6L1c8YatXi2dsvufqYrGgV1+taa2b3/nGy+c6eeozzWUz
      ulKzW9icU7b0GZtj13ShUNAbm9va931dr9f12ouneufUZ7q/l9bVeuOUbbelrWaftNn1po/N
      rW39/wF4pA453XGcVgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='PerCap2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29d3hc13Wv/Z4yc6bPADPoAMEOVrGKVLV6l2xJliW3OLacxEkcp9i5N+VL
      8iU3cZybuCSxk7g7duIix5JlW9WqVqPETooUG1hA9DK9n7bvHwNCogCSgAgSAHHe5xkM5swp
      e2b27+y9115rbUkIIXBwmKXIU10AB4epxBGAw6zGEcCFjBAcPnyYY8eOTXVJpi3qVBfA4Rwi
      SRjpfjp0L1tfeprW1jns7syxqN7PivVXUh3yTXUJpxxHABc4ixa0Yqc01MIQulBorK2mqibq
      VP5hpMmyAgkhkCRpMk7l4HDemLQxgG3bk3UqB4fzhjMIdpjVOAJwmNU4AnCY1TgCcJjVOAJw
      mNU4AnCY1TgCcJjVOAJwmHacTw/9CblC9HV3kMgZBDWJoikjmQW0YIw5TXXnqnwOswzLtvnH
      H77Cp++9BM117j11JnQFt1sjEe/D19yARzXBEwGrjG3b2LZ9XpXrcGGSK+rsOtTHgY4hls2N
      nfPrTUgALpeLpuZmgh6JouUBPYcnFEOWZYQQKIpyrsrpMEvIFvPURHxsPdjLRQvrz/n1JiSA
      YCRKMPLWLbWTWxqHWU9vPMcVF81hz9FBLMtGUc7tMNUZBDtMK3rjOVrrItRXBzjenz7n13ME
      4DCt6I1naYgG2LCkkc37u0+5n2Xb/HLL4bMedzoCcJhWpHIlIkEvy+bV8MaxoVNW8N2H+/ne
      k7sols2zup4jAIdpg20L8iWDoNeN3+Mm6HPTl8iN2k8IwWOvtjOvPkIiWzyrazoCcJg2FMoG
      HreKLFciC9e1NbLtQO+o/Q50xgn7Nda1NdI1mDmrazoCcJg2pHMlwn5t5PXqhXXsbO87qRsk
      hOCRVw5y+2WLaakN0TngCMDhAqE3kaMhGhh5HQl4kKiMC05wvD+NAFrrwjTGQvQMZc/qmo4A
      HKYNvfEcDdHgyGtJkli1qJ6d7X1A5e7/i1cOcseli5Ekiaqgh2S2eFaWIEcADtOG3niW+re0
      AADrF1fGAUIIBpJ5UrkSi+dEAfC4VSQJSrr1jq/pCMBh2pDMFqkOek/aVlvtJ1vUKZQMHt10
      iFsvWYT8lvQ7Yb+HdL709lONG0cADtMCWwhyRYOgz33SdlmSWNZaw8t7OunoT7Nqwcmex801
      obOyBDkCcJgWFMsGmktBkUdXyQ1LG/nOYzu54eL5o3yDWmpDdJ2FJcgRgMO0IJMvE3qLCfSt
      tNSGuWH9fDYubRr1XtNZtgBOblCHaUFvPEdDdWDM91RF5v7b1oz5XnXQS2LYEvROUnM6LYDD
      tKAyBxA8845vw6upWJZAN9+ZJWhCAhC2jWGY2JaFaVmYpoFtO1FgDmdP3xgm0PEgSRIhv0Ym
      X57QcZZlc7w/PbEuUMfRdgZSRaIhjZIpIVll3P4IC+a2AOc3mNnhwiKerphA30kdaowF6R7K
      EguPL+X70d4UX//FNhqigYkJQJYkEDYobjTJQnL7kajEAjvZoR3OxIHOOG0t0VHbhRBkC2UC
      XvUd1aPmWJDjfSlWzqs54757jgzwwHNv8If3bKQm4puYABoam3AHi0R8bsq2AmYRtz/sxAQ7
      nJFi2eSffrSJz/7GtTTGTu7rF0oGbpeK2+V6R+eeUxdm77HB09Y/IQSvvtHFk5sP8ycfvJxw
      wANMcAzg8vior4ni8QcJB32Eq6J43Y4hyeHM9MazqIrMy3uOj3ovWygT8rvHOGp8RMM+htKF
      U3afhBA8tfUIL+zq4H9/4M3KD44VyOE8cbAzzt1XLmH34QGst3Vz+hI56k9hAh0Pfo8L3bAw
      rdHdJyEED76wj4Odcf7o3kvxeU5uZRwBOJwXDnXFWbmgjqZYkMPdyZPe643nqH8HJtATSJJE
      wOcmW9BHvdc1mOFAxxC/c+d63OroLpIjAIdzjmXbDKQK1FUFeNeqVl7c3XHS+73x7CknwcZL
      QzRIb3x0bMATr7Xz7ivaxnSxAEcADueBTL6M3+PCpcosaq7mWF+asvFmMPtQujhuE+apaKkZ
      HR2WzpfoGsyyrPXU1iFHAA7nnMM9SeY3VgHgUhWWzImx58gA8KYJNOgb2w9ovLTUjvYJem77
      Ma5a3Xra5FqOABzOOQePn2z/v/KiOby4u2INKukmqirjUs+uKsYiPgZThZHXumGx5UAPly1v
      Oe1xjgAczilCCI71p5hb/2ZOzeaaEOl8mWyhTLagE/S+cxPoCYI+jULZGLEEbdnfzUXza/Fo
      pzfTOwJwOKfohkVJN09ydZZliXWLG9iyv4f+ZI66sxwAQ8VLwe9xkSvq2ELwzLajXL9+/pmP
      O+srOzichr5kjvqqwChX5UtXNLNpb9dwIPzZCwCgrjpAfyLHoc440bCP6uCZB9aOABzOKQeP
      x0eC2N9KddCLqsjsau97R27QY9FSE6JzMMPjr7Vz88aFjCc8wBGAwznlYFeCRc2jBSBJEpet
      aGbL/p6zNoGeoKU2xPYDveRLBvMaImc+AEcADucQ2xb0J3I0nqKLs3ZxA/XVgZOywZ0NtVV+
      th3s5Yb180/KHHE6HAE4nDOyhTIeTcU1hgsCgN/j5u9+89pTvj9RQn6Na9bMZc2i8a8sI4lJ
      imKxLMtxh3Y4iR2H+th/fIgPXLdiqotySpwWwOGccbBzaMwAmOnEhJz5k4N99CfzNNZGKFkK
      kpFHC0YJ+T1nPthhViGE4GhvihsvXjDVRTktExJAVayObLGTRCqLsE0kxU2u1EfAO8dZJtXh
      JAzTJlfUCXpdmObZreJyLpmQAIxSBrcvQjHVQ9FUwEziCTrLpDqMpi+Zoa7Kj6pO74jBia0T
      7A1T7wVioXNUHIfpiBCCsm6RzBXpGszS1hIl6HOfNhHVwc44i1vO/ULXZ8v0lqfDlCGE4Omt
      R9hzdIBEtoSqSEQCXqqDHh5/9RCqKrN6YT3r2xqJhX0jyxqd4GBnnJs2TO/+PzgCcDgFli14
      dscx/uh9l1AdqrgtnEAIQTJbYmd7H999YifpfBm3S6EiAQkkSGaKfOzW1VNV/HHjCMBhTMqG
      id/jorbKP+o9SZKoDnm5du08rl07D8O0sGxBxQZSMYQosozbNf3HhI4AHMakP5Efs/KPhUtV
      eGcZfaYeZyLMYUx641kaJ8lLczrjCMBhTHqGsqMyuF2IOAJwGJO+RP6sklXNFBwBOIxCCMFQ
      ujBpfvrTGUcADqOwbIEtxIyw4pwtjgAcRlEsG7Mm6bEjAIdR9CVy72i1lpmIIwCHUfQMzQ4T
      KDgCcBiD2WICBUcADmPQn8xTN85Z4JmOIwCHkxBCEM8Uic4CEyg4AnB4G6ZlI8FJ3p8XMhOy
      dWWTg/SnywTdNgVTQTbyaKEY9TXV56p8DueZfMnA752prm0TZ0IC6OsfwBAuSooXxdaRtAB6
      MYdtR5yY4AuEroE0dVX+aR3HO5lMSAC1NTV0DaRQJYuypEIpgydY48QEX0D0J/M014SnfSzv
      ZDGhTxmO1hKO1p6rsjhMA3riOdYtbpjqYpw3ZsdIx2HcDCRz4w6EuRBwBOAwwolY3+qgd6qL
      ct5wBOAwgmnZyLI0KsPDhYwjAIcRMvkyobNcrXGm4QjAYYSe+OzxATqBIwCHEXqGcrPGC/QE
      jgAcRuiNZydtwbqZgiMAhxH6k+PPBXShMKYABnq6GEplz3dZHKYQ2xZkCmUigdm11sOYAjDL
      OZ57+in2HDh8vsvjMEWYlo0qS6fN+HwhMkoAuWQ/e9s7qampZ/HiM6+07XBhkMwWqZpFE2An
      GCUAfyRMbdWwe/MsuxvMZnpmSSrEtzNKAJLkQZKyHHjjCPZUlMhhSugZys26OQAYQwBC2JR1
      mapowEkdPYuYjSZQGEMAfQd2Y4XqiQY86FNRIofzjhCC7qHsrDOBwhgCCNTUI7IJvOEqpwWY
      BZR0k288sp2mWJCA1z3VxTnvjKrjwWg9zbkSdU0toxY9iA/0kswbBNxQNGUkM48WrKGh1okJ
      non0xLN87WfbuHrNXK5e3TrrTKAwhgAso0w+NcAPXtrOhz5090kiME0DvayjqxqKMJC0IEbJ
      iQmeiby2r5vHXzvMx25ZRWtdGMuyprpIU8IoAfQd3ENOjlBblcCAkwSgaR5AxyXZlCQXlLJ4
      Qs46wdOZQsmgL5EjUyiTzpXI5Msc7U2BBH/24Svwe2Zft+etSOJtt21h6Wzbug1XIMqq5YvH
      fSLLshwBTEO+/vNtlA2T2io/kYCHkF+jOuhlUXN0VgW+nIpRLYCkuJk3t5kDRwYwx9rBYcYg
      hOBYf4q/vf8alFmS6GqijPmtdPV2sW/H68yOzDAXLoWSgcelOpX/NIwxEVZm3+vt1DbXO77S
      M5xdh/u5aGHdVBdjWjNGHRcsXLiQYDh0/kvjMKns6xhkWWvNVBdjWjOmL1Aw6ME0TZwh0sxF
      CMHR3hTzGiJTXZRpzZi9HAHY5RwdXf3nuTgOk0VZt1BkCZfqWOZOx5gCKJdSHDk6RHOz03+c
      qbR3J1jY5MzQn4lRVk6jkKGqcSlzW4s4946Zy77jgyxpjU11MaY9o1qAVF8nvYkMLpfLiQeY
      oQghONgZZ3GLI4AzMaoFiM1bht51HF/LJcyuHGEXDrYQ5Io6Yb/zC56JMaxAEoPdx3h9zwGM
      qSiRw1nTPZSlKeaYscfDmIPgcDSMMAWOb+fMZH/HkNP/HydjhkQODQ7S1d3rzATPQISA/ceH
      WDLHEcB4GFXHe/fvJmkI2lascqxAMxIxqxa6PltGCSBU10DYG8LIDznOcDOQ9HCKc3kWRne9
      E0ZZgQLVdWzccKoJMEGxWEKRwBAyklVG1fy4XU5bMV04cHyINqf7M24m5O5fzKbYub+Dumo/
      hiWQECguD/NaWxBCYNvOzMFUs69jiPVtDc5vMU4mNM4dGBzCKOYwbYEQIIa/5NkYTD1dOey4
      QEyICbUArfMX0TRnHtgWppDANlFcHiSpklRVlh270VSiGxYC8GizZ6X3s2XCEY+VBZTV4QNn
      d0D1dONIT5L5jVVTXYwZhXPLvoDYf3yIpc4E2LgRtukI4EJBCEF7d4JFzdGpLsqMQWScyd4L
      inimSDQ0+3L8v1OsoQOOAC4UCiUDn+ZyLHITwO5/wxHAhcKR3iTzG53434lgx9sdAVwoHO5O
      sqDRsf+PF2GbCL3gCOBCQAjB4Z4kC5ocE+h4EZlepECtI4ALhaF0gVjYN9XFmBEIIThwbA9y
      TZsjAADDsjBnsO9MsWzidavOAHicmLbNwwMlzPo1jgAANncdZ0dP11QX4x1TGQA73Z/xUjIN
      8rjp1eqc5M8A/bks7hmc2r0yAHYEMF5KpklAT9CeSDotAMBQPs9QPj/VxXjHHO5JsMDxAB03
      BV1nvi3ozqQcAZxY2qlsmdgzdImnwVSBmogzAB4vOV0n0JtHsYUjgLyh49fceFSVkjnzEsEU
      ywYeZwA8IfJ6GS2RZE4g6IwBUsUiEY8Xw7LIlMr4XDPLxdvJAD1xcuWKAJqDoYkJIJscoj9d
      JBpwU7QUJCOPFoxSHZ65K4wP5HPU+AMYlsVgPkd9cGZlU2jvTjgzwBMkm0nTqpjUycrEBKBp
      GulUL245jLBMJNWNnooTCfpm7DKpA7ksi6IxdMuiN5vBNGfWghLt3QnWL67HNJ0cHuMlm8sR
      qgkh0umJCSCXzyMBtlmmZClIxeSMXyY1WSxSEwhhWBZ7B/qHI95mDoOpAg2xkDMGGCfCtikO
      9uFrbIVcbmICqK6pp7qm/lyV7bwjhKBg6PhcLmxVJVsuIYSYMZWpVDbRnJQ0E8JKpTCNAlpt
      M1Y6M7utQGXLQpFkVFnGrSjYghnlEnG0L8m8hqoZI9jpgNnXj9A0tKpq7MwsF0C2XCKoaSNZ
      LXxuFwVDn+pijRtnBnjiFHp7cPm8qNUxrNkugKF8npjfP/I65vMzVJg5M8KVGWBHABMh39eP
      x+1CDgSx8/nZLYDBYRPoCWr8AQZzuSks0cToT+Spq565JuipIN/fh9cfQvb5EIWiI4BRApgh
      PkEl3cTtUpylbCeAMAxyqRR+rw/J48Eul2a3ALLlMkHNM/I67PGSKhWnsETj51hfirn1EWcA
      PAGsRIKCAn5VQZJlJEWZvQKwbBvDtvC8xe7vd7spGsaMcIo73J1wBsATxOjppRSJEPCFAZBU
      1+QLwIq3U97yrck+7aST13V8LvdJd1BZktBUZUY4xe0+MsCyeTNr1nqqMTo70WNVBNyV3KmS
      pk2+AOSqedgDb2B2bpnsU08qyVKRiHd0Eqmwx0u6VJqCEo0f3bDIFXSqg04SrIlgdHVRjlXj
      l0Hf/QByKDj5ApBkBe3qP0Pf9BVEMTnZp580BvM5av2jLSg1fj+D+ellCTJ6e7FSqZHXe48N
      sHxejdP/nyBWKk0pGELrfpXyS/+MrJ2jeADZH8O94bcoPf8PCDE9Z1YHcydbgE5QsQRNHwFY
      2Szxr36NoS/9C3pnJwBb9/ewvq1xiks2s7BLJZDAMjIo+3+Oa/ldUOg4d4NgpfUy5EA9xp6f
      nqtLnBWJYoFq7+goqqjPT3yaTIYJ2ybxzW8Red/7iP7u75D8zn9S3LnLyQH0DrCG4ijRKK0D
      r+JfcjPqwusR2YPnTgCSJOG+9HcwDz6BFT98ri7zjhhxgnOPXkgiqHnIlsvTwrU7+8ijuOfN
      Q1u+DLWulprPfJr0U09zQ7nbWQRvghjdXaixIEtLh3GteC9K7RJk+RwHxUuqB+2aP6P8/OcQ
      5vQZWJZNE1WWUaTRH981vMqNYVsnbRdCoHd2YnR1nRdxlN7YR/lQO6E7bh/p68t+P5s33Ewk
      nyL1399HWNYZzuJwAqOzCyn9Gu3VFyO5fUguH66Weed+HkCumodryW2Uf/VP02Y8kCmXCWme
      MQeRkiThc7kp6BVTqDAMClu2MvT5L5B56KekH/opg5/7v2Sf/CVWMllZmXqSsVIp0g/8mOrf
      +DjS22Isth0ZZMkf/jaSppF7+plJv/aFitl7jGLpAMdrN1IySnz9la8gtaw79zHBkiShLnsP
      duo4+uZvom34TZji5nuokDvJCe6tCMuiXkC8/RDykWMUd+5CW7aUqo9+FCVWWXzCzuUobttO
      4pvfAkUhfOeduOfPO+X1hBDknnqa8r59yIEgcjCAHAigBALIkTBKVRVKKIQcCAKCxDe+SeSD
      H0AJh046T7ZQRpEkfB433HUn/X/7d/ivvgpZ0ybtu7kQEUIgGzswVr8btzfE9q7NvHrsZW6/
      +ONIYgLteSYxSEdfkmjAReFETHAoRnN9DZZlnTYiTNgm5af/BqVpbWUEPkUIIdi0/w3CxRLz
      TBuzrw+jr69iZjRMhG2TVRXKXi9zN1yMd926U1YwIQRmTw+Jb/8n4bveg2fFijH3yTz8M6xk
      itCd78bO57FzOexsDjuXw0qnsRJJrEwGO59DlHX8l11K4OabRrVQL+7uIJEp8Z4r2gDIPfsc
      dj5P6I7bJ/+Lehu2sEkVk8TzQ+T1HCWjSNEojjzLsowiqSiygiorqIqbqC9K1B8j4q3C7w68
      c7OtaSGOdyG1toAy8U6Lneqh8PP/Rf8Vn+GQ7mZ3909ZWrcctyRNMCbY6yUcMrGEiVsykXxh
      bL2IbdvjiglW3/Wn6E/+KbanGqX18gl/kBGEVel6yBNswIQg/f0foO3fR3TBQoyGeuT6evyr
      V6NURcDlQlJVytkMe3u6aWtbig3Yw/G2L3YcoTkUYV7Vm0HoUl0dVZ/6JKmvfg0jm8V78cUn
      XS/zkwfBNAl9+IMgy8ih0Gn7ncI0kVQVa4z+/ZZ93bzv6mUj8b+eyy9j6LN/j/fqq5DGmNQ7
      GxKFONs6N9OZ7iBZSGDYBiFPmKgvRsAdwOPy4lE9VHtjSD4Jl+LCsq3KQ1gYls7R+GG2dW4m
      WUxQNIqosoqmagS1ECEtTNgTIeKtIhaoodoXJagF4e3ufeks9lPPM/TMkwSvuBLv++6GMYwX
      AFgW+rGOSmv8FrHp276N7d9IVjcZyicIakEuab2C/9r6rYkJIBmPUyrZhP0uSpIHjBxasGb8
      McGqinLT31F85NOo/ihK/eg75pmwCwlKT/0lkqcKzw3/B2mcS7MKIUj/5EEUn4/d99zFslVr
      8boqX6Qwy2CbSO6KY1y1309GL43EBwsheObwITpSCfKGwaKa2pNPHokQ+4PfJ/7VryEVS/iv
      uRqEIPX9HyBrGuH77h13OTlFTLJl2QymCjTXht+8k6oqwRtvoPDU04TvPvtWtWyW2dW9nZeP
      /grbttnQeim3Nd9J1BfFrWrIYxgNxott2xi2gW6WyZTSpEop0sUUQ4VB9g3uJVmIk9fzuGQV
      vxYg4A7ilVxEDvSycGsPR+5Zh7H5RZZ84QDPXxZhiDymPZwIQAiCnXHedVAiaedZ1rqO6K9/
      FCUYwDzyPOVtL+Na98cU9BI7uzfxGxvfSyxQg27pExNAfXMrZxsRLHnCeG76LKXH/wTPDX+D
      XDV33Mda8XbKz34W98bfxjq+CeP1H+Ne9f4zHieEIPfEk9i5HKFf+zDmji0nOcHpW76JeeRX
      KC0bcS2/E3/1fIqGiW3bSJLEM4cPUTQNPrBqLT/ctX3MuGHZ6yX2yd8l8a1vY2UyWPE4SnWU
      0HvuGH/lPw0Hu+Isao6Ouq7v0ksZ+Nu/I3DjDSiBdxYboFs6D+16gEODB1jRsIoPrf8YNf7a
      SZ1plmUZTdYqLYAnRBMtlVa8rFe6NYqCDRi2Ti6TIL9pE8Won0JPO9xyDa4FEaqXrSLYXea6
      h39B+L578V+0CmtwiMz//ARZbSTyx+9la+4Ajz33MLd88UuEblyN6Pk5xO7C1dxCLn2EkMfL
      opo2JEmirXbp5A+Ch/I59vb3ccXc+Sin+OHlYD3adX9J6Zd/hXb1n6LULTv9SYXAPPYS+rbv
      4Ln+r5GrWlEaV1N89NMotctQGi467eGFl16mfOQI0U/8FhnTPMkJTlg6Vvd2fPd8C6tvD/rm
      ryPKWVyBqynqq9jU1UnJNLlt8VJkWUZComSaI63HW5Hcbqp/4+Ok/uXfcLncBG5cj1Qsgc97
      1gP/rft7Wbdk9OyvpCgEb7mF7COPEXn/veM72YmKl0qTjffzteP/w5pEgHui16ImfbC/D3xp
      8GhgWlAqv/nQ9TctX2L4j2VBJATRKqiugnAQTnw/QoBlg2FUrpnJQjwJyTSUy5X3XSqYNrIQ
      aJKEZltEL7qU7P43MJuWEbnpbhac+P5awFqwhOTXvkHq2RcQuk747rtwL16MJElsiEXZNP8l
      squWoD3zBaTWX8cYGkJtqCc78AZXzr8CRa70VFY1rZ18AVT7fMiyxPd2bOE9S1dS7Rs7Z6US
      XYjnln+g9Mu/wL3+46hzxx4TCGFj7Pg+Vs8OvLd/CclzwpVVw3PtX1B64s/x3P5FZO/YM6PF
      HTsovPYa0U/9HpKqksxmTpoBtrq3I9cuQ9KCqK2Xosy5BJEfJLJnOw899yMiDUu5bdXGkea/
      IRiiN5thfvUYy5H2DSLt3EPk+hsgVo0UT0D7sUrF8XigoRaaGiDgm7Ag9nUMct91y8d8z3vx
      erJPPonV0YlimFAoQaEIxSLoJsM1daTCCstC0jT61SJfG/gFd112PyvqViIxLIx8sXJ8qQSq
      iqgKY+WylIf6KB44gBqLodbUoNTEUGNRlHAEybKREsnK501nwbYqn1EIkOWKINyuijhqo9C2
      ADQNZOnN/So/OADlw4cpbt9BzR/9waiWSKmpIfrHn0Z/9gXctoSUzEN3H9TFkF0u7ltyG4mH
      fxffR75GaetR7GQ7+LwcLeW5tmnlyHnmVM2dmBXodLzVCiSEoCeT5pEDb7ChuZXVDY2nbE5F
      KU3xyb/AtfA6XMvec1LFEGaZ8q/+Edx+tMs+haSMvuuaHa9g7HkIzy3/gPS2QXFp/wEyDz1E
      7A9+H9nvRwC/PLSf+kCQVQ1NABR/+Ze413wIpWbJScdu6+6kd6ibqw9+Hc+6j6DMuwpJktg3
      0E9vNsO1CxZVymhbUCgi7dhb+fHWrgT/2yq4bVcqVE8/dPdWKlldDbQ0QlXkjJaNgWSe7z6x
      kz9+/2Wjv0fbhs4eis88R6m3h6p77qm0OD4veD2ViidJI2NLK5tj8J8+T9rOkzXyBH0RqoO1
      yOEQnmXLsPw+StkshUyGcjpFtKRjdfeghMNoS5fgXrAAYehYg4OYg0OYgwOYx55HkiWUaA1q
      tAYlWoMSjIDbg6RqoLpAcVV+n5GH8uZrSQFJrjzLMqJUJv4fX8W7bi3CMCrXiidQY1HU2lrU
      +nrUhnqUSBUYBqKnF/vQUexkClETQFKe43kpSNW6u7h00TVgmhxMtvPtra/y1zd8+KTWe9IF
      YOcGsAf2ocy9At0WPHFwP7plcvuS5WN2GwCEWaL07GeRw824N/wmkiRjF+KUfvlXqAuuxbXi
      7lMLSAj0zd9AklXcF98/sr3cfpjUD39E7FOfRIlUcmceGBxga3cn779oDYosV8T32P/Ce+d/
      IMnKqPNWTpSl9NxnkcMtuDd+gqxh8bN9e/jwmvWI3CClx/8cBvtR227DdeWvIbnPkKVZCDBN
      6BuErp7K3RIJPG4Ihyp3yGAA4fOStiWO9qV4dvsx1iyq59q18948vliC493Q0Q0NtYjF8xn8
      53+h+nd/G7V67FSJwrYZ+ud/5Y0lAV6y2rm/+iZcrx8kf+AAoqEBb3U14ugx9I4O3K2teNev
      Q29uoqOQJRSL0Tx3AT6/H9u2SSXixLuPENj7LYLV9ZihVrAMsA2EZVDMJNGLOeobGsA2waps
      xzYRlgl6ifLhduxcBkkSIImKSKWKR7ESjYFtI7lcSD4/kqoiTAtraAgrmUbYEgiZytyqAqoH
      SfOiuDKo0cso7TPoNIeIRRrx+EPsU4boCNbxvtvuRaurQ1IUrFRq8gUgyjn0Ld/E6tuNa8U9
      qIuuZ99QgheOHeb6hW0sjMZO8eOY6Jv+HTvbi2vF3eivfAX3pZ/kkDaHI4kEl1aILmsAABhG
      SURBVMxpJeo71eSVQenx/40UqEPSQiAksk8/i/+yy3G1XY7SvI54ociDe3fx4YvWVMYAioKx
      92GEnse95kOn/WzCttC3/xfGod241n2CHx87wvvaarGf/Qe0ufchb7gO48AjmO3PoLRswLXy
      HuRA7WnP+ebJK33kcq7A8UNdHNp7jIN9GYY0H36/xjyjwGLVZGVrDBdU7viqUumfN9TBvBZQ
      FJAkSq/vobBlC9X3fwyAfC7LwT27sSwLWZLw73ydY+l2EoU+LrXnEliyDG3NajwLF6IOp4cR
      to05MEBx8xYKW7YSvus9aKtXkxgcoOvYUSyrMlcSEElih79P+IpPoC64btQNyrZtjh7YR7FY
      YMnK1aguV2UsF4+Tf/ElSrt34164EN+ll6AEgxW3DtuudM/cLtSa2HB3SFSeR/63QdgISwdT
      B0uv/G/pCFNHcnmQY21IXb1s2/YYe6pL3N52B7/42d/TUFzAetOF2T8AbhdyvnTuukCilMLY
      /WOsjk2oS2+jWLuOxzuOEwmEuXbRMtwuNyfaZWEYWMkkZjyOtf+/MfY/haj9ALa7hr2HDiJL
      kHa7aW5qZm5zC65QaGQ2Vfb5kH0+JNnEHjqE3nGU7BOPE7rtFkQpj0jtA2OQV30rWdBwGZ5H
      nwIhCL/vvdj7v4zn+v+fTFnGsiyqYhWT7onPYCUSlPftp7RnD2b/AGqsGntgK0ahj0CdST69
      krQJmsePx+1FVRVEYheucDfeq38T95r3jZpEs4VNV+o4u7t3s3l/B2ahBrscoSt5nEhY4voa
      N2t8KWLVYVxuN6AgCRmlcRVSbMGbFqUxWkRRyjL4pa8Q+shH6EwnyaZTLFy6nEAohJVKc+Cb
      /8Lj3mPc77mS6vs/NsrN4u3YhQLxr30Dz9IlBG66EQC9XEbqeA7z9Z/gue4vT2vFE0Iw0NVJ
      347tzFXc6G/sA0nCf+XleFavnvQZbCudpvDaZlzNzbhampG9Xr78q88j9Q2y1NVAZ3ApH/NW
      IzQ3wqtRCvgmXwBls8RAtp9aNYL1xgEKm15Atveh+nKYg/2YbgVFmCiKUglJ83iw8wWsbA5J
      kZHDNWR3BBBunV0LV3Dljbeh4cJMJrDiCbqPd3A8PoQsK0T8fppcblzlMqJUxspkEMUirpYW
      ZL8PyeXCTCbJZgfxSAfx+xNoq29HmXMJ6Yd+huRKEN94B7ppoZg2DMapc3lgMI6VTCN7/WjL
      luO5aBWuxiZQFMovfpFDB7fzSt3l9Lt7WV63kqZgI/HMIJ3HD5JNDuJRBTekduLvmkd2/kqO
      tIUxo2EGc4PsPtpFX6+PGtcSLl+2mLUL6/Bkj9O561fkj25lTbCX/FADGT1NVaCaoDeIpApU
      bxJcCpaxEFtqQvJ4sfN5RKmIrAzh8nUhcofR88sZKtYQuOtOGha1oQQrptHBL36Jb9ce5va9
      Kkv//G9HuoVQqajl5z+Hne4CSUKSXaC4QXGBkCls3oZn+UrU+kbsbB9Gdx/+93wOJVo3thBt
      m8Irmyhu346VSqM21NPnUohetIpoUxOiXMbOFyqz4iceudzwcx4sk8gHP4BaO75W1OwfIPvE
      E2QPHcJe0ka+pxtlKI7P5SbpNnlZ7WDxRXdwwFvFJb7K92HbNh6vd/IFMHhwN6//698zL+NG
      1k3UhgZc9XVYpSKSJZD9PsoHD7J3fiv1S5fSdOgwqCqBa96FZ/lybN0ic/AQT23fwsUvv4oW
      ULCLeZSqyo8ueTxImoaeTpPu76cQCeNvaSHa1ER+23Z8H/sosQULUIcn5148cojUI49yRUMz
      5kAvomcT2APgltFiUYRhYuezeFddhORSwLYw9RLZdBLLMpCwMewyBZHFtg12yRr7qy6mxj2X
      m5QsWtsdZNNpDEOnKhqjpr4RfzBI34GteF79v3iW/B6ZTTvY37WHbrsateiiJehmXrUPBRth
      Wrga6nE110Lnt/G994tYoUa2dr7GC4efo8oX5frFN9EqVZN/5mHMNx5CCZYgtAZJNiH3Bu6V
      VzNUnkP6WDvNHKN4rAGjqwt3ayuS34/Z3082n6QQ89OoRvFf/S4kRUHYotKlEmXE4W9gBe7E
      Siaw0gmwDCQZ5KAPNRpBUmWKO7cTuvMu9B4do7MLu1BACYdxzWlBcrlHLDhmbx+FLVvQFi6s
      CMIwsE0D4XajyxLZUglTVfBGowTrG5D9PmxNw9Y0hOamPDiE8sunUW+6gVxNFNMwMU0TWZYr
      D0VGlmS0VApt+y70VJLCyhUwfx7eQACv34/PF8Dn9SJlsxR37SL51OP0r17H2vfegzQ8FpUk
      6RwMgktl9MPt2NkcZqJy17YSCfJDfaRKSaqDtbgMgXH8OCXgheuvYqHXT1v7ESTTxJZlHm2q
      Y+NlV7CsoRFJNjF2/gCrazOuVe9HXXQ9kqwibBv9yFEyv/gFRk8P7osu4uiCeRyMD5Eq5FFj
      UWzLQkFivaKCz1vpp5oWwYCP2Bv/RviefwNUsr98iuKOncheD+5Fi9CWLOZV4ygvHHkBw9YJ
      Fi3qdY2mmvk0z1uL1xvlZ8ePcc/cedg7v4dPNQledGelmyK/OXsc3/0E3qOPkrjkb3jgp6/y
      yevbUP1+ZF9FyMgyGAZ2Lou+6bNY1iIILcPOZLCyWaxMmq7eQ9i6jq7CsTle1t/268yvn491
      4HHQQiR9bXR2dhOOVDFn3lysRz+Fuv6viX/l31Ab6kGW2d27kyO3ruLObYLgzTdjZdJgV8yT
      kixjx19HsrpQl3wIpSqCHAxWukeKMtLlEkJQ3Lad7OOPU33//aiNDWBZWKk0RlcnwjQBidwz
      z6KEQ/guuQSlKoJSHUX2aCPnEkJgWRb5bJZsOkk+m0WSJVTVhaKqqKoL1aXiNi2MHz+I3dJE
      5I7bUVxuhLCxLZvS/v1kHn0MbzhM6NZbcc1traQ5OY1p+fCWh+ndNcii7l4CN9yAb+OGyuc/
      F2OAsbCFzb7e13l094M0eGq4ufFqwq4AZijEpuQQRwYGuG5RG3uHBrDtPAuqvfRmuunNdJMp
      pbHycfSeHdjhuRTkIB405gbm0uxrJhgv4nltK95iCaupAf/ixXiXLEE0NuLVNNxvcy8wu7dh
      HnoKz9V/OrJN2DZ2Lse+TY9z6JXHWZWLIMsKmuxGKZaRImHkhjokTUNSVX4a8HCjpBK0TCge
      h8IbyGoG17zVqAuvR2laA7KL9LP/yks7D7F46d3UixLW0BBmPI6eyWCWy6h+Py5jE+Wm+aRK
      89HdbixNA78fJRhEDQaQXW5sFQ7FD7E/+QZ5d4nFDUtp0Rtpjc1jzvyFaB5PpZL+7JN4b/4H
      4l//HsHbb+VA314ej7/CJxruxFUy8F9xxajfpvzKV1Ca16POueS0v7EQArO7m+R3v4d340YC
      115zkkDyzz5H+dChihv3JKSZF6ZJ+sGfYsXjVH30I5Tb28k+/iRqdRXBW29FbWwY92z19k0P
      UGrcwMZoDdlHH6O0Z2/FwnS+BDCyn22xq2c7T7zxi5EZOYGgUDSQrbm4LIsq+zhVLYswEiVq
      fXXMb23D5wvg9fpwSzbmngfpP/AYByWZI5FW4sJFbUFloR6gKhAjUtdCuLaZYKwRXyCCrFTs
      yxV7uETp6f+Da8m7UarbKjOUukE2l+DBnqdIHzvEff7LqIs0VSau5jQhJAmh69jFIkLXwTR5
      KRUnopss9fqxUknM7h6Mvl6sgU6sXDeSy4dkS/xYXsxNi3YTNhqQlt5Efz6H6fdRP38hdS1z
      EEeewurcjPvavxqZEKrMV4nK3dK2sC0b27KwbQvbtjEtg55SL4/se5jFtUu4Y/lduNXKgLL8
      2tdRapeQo472b3yZF29s5qPrPo7+hf8g9pk/QnnbCjhCCIoP/w7e2z6P5B6fK4XQddI/fRij
      p5fqj34EJRIh/9LLFHfuJPrbnxjpYkwGQgiKmzeT/slDeFauIHjLzSix2ITdNF54/j8Jt93I
      qobGyndrWee3BRi1v21hWAYyILV3cOy1vXx3wEbXvCwo59gYkWieX0v0so1Ivrd7OgqEWcbq
      2IS5/TGkXDO9TTr9rStIC5tkMUmmmCJbSFHQC0i6jlIy8FgyYcmHZujYsootBLaw0YVJb1hw
      ++p7WdO4FtnlrsxQnoaOZILX+3u5fcnJs7PCtnlw13b6sxl85Qy9nXk+GXgae+AAfaENVPtk
      QqFAxZxnG5iHn0WpWzE84LTBKIGsDE8QDRvGASQZSQsgeauQvNVI3ioINfJi4ggvDe7n7lUf
      YGXjasyubezf8g0e9FZx314/rbfdg9lxHGGZhG69ddTnEHqe4iN/hO/ur4/7t4PhgfP+/aQf
      +DFaWxtGby/R3/sksvscrLF2osIqyjv2T3r8iX9n8cX3suBtZvhJF0CxkCeTSlHX2HTGY0Qq
      Q3nTNh7aP8Q2C25f14BXNpAjTew6nuXogU5WqCY3X9RM9ZJ5UF9TuZNDZcDV0Q37DyHWt2F0
      PofZ8RIIUFs2oMy9HDm6EJCwSmmMoYPku7eROPI89vxrcC+6HkVSkKXKgCoWqEVTx2+WK5km
      39+5lfvXbTzpRzk0NMjO3m4ub1zAVx/fzKUXN3I8lSCsJ5gvZWgOBoh6NGRhgW2iNK5F8seG
      Z0KHH5UP+KavjajYv4WeQxSTlUchgZ3uxE4cJZ06zoPlDKL5YgqWzof79xD9wA9REhniX/0a
      2Da1/9+fj3lnNjs3Yx1/Fe3y3x/3Z38rdj5P7vlfEbjuWmSP58wHTAFC2Pzk5//Cldd+nPrg
      yUFGk+4L5NY8xAf6yCQTLFi6fMSujmVBJgfpDCTTmINx9h0b4AcphUs2tvGZ+VX4AwECwSCK
      qnLxRQLj5tVs2d/NPz+7mz9zK3h37Kl0Sxa0QmcvDMbh2iuQ3C72pa/HXHoNa1t9mJ2bMXZ8
      HzvZURGMqiFHFxKuXUb1Lf+IFG4eNfM7UTyqOsoxTjdNnjl8iHtXrObL/7OFj964lvmNVdhC
      MJTPcSQR55VMmng6j6aoNIXC1JUUqigR9ngJaOpIsLtl2+QMnUy5xNBwmhaXoqBIIVRvBMW/
      ALVuI4oso0hwr21xuG8X4QOPEPJGcdsW1NSgLVqE1rb4lN0Sq2sLSvP6d/w9yH4/odtGtyzT
      inKOAgr+MVqnye8CCYHIF+jetQtPSSfm8lScqyQQwQBxvciu7gE2pVx4ojE+eusaYuFTuw8I
      IXj59U52tPfxyXevRe7ph8MdEPBX/G4UmUNdCb77xE7cqsItGxdy8dImTjh9gQ2ya1JcezP5
      MkPpAvJw9+jlriMsrI7hQ6MvnqNDj7OvPY5SVLl+3XxuWD9/zOvaQlAyDLozaQbyOZLFAplS
      iZxeWZxDkgABfs1NSPMQcGtoqopl21jCxrJtzOFHZZsY+b+c7mFJ+4/obryKoarlgECWZbyq
      i7DHS1DTCGoaYY+XkKbhefIz+G/7PJI2s1bHnAh2upvvvPgoH7rpY3jediOY/JjgTBZpxx6a
      wyHKMQ+7uo+x4JJ1aAE/r259nUd29lNVU8/73r2UxS2j/dvfjiRJXL6yhSO9SR7bcoTbL11c
      cSKrvElvPMt3HtvBp++7FK+m8oUHNiHLEuvaGpGUyfl49rAIH3nlIPMaIyN3ad2l81R3O/P9
      NUhuge22+Iv3Xk3A40ZVTm2WkyUJn9vNolgNi2Jv5vcUQowk5pWHV62ZKMJYQr7937koWMR9
      8SUj5ywaBulSkUy5TFYvcSg+SC6fYlU6yTO7XkeRJDwuF1UeH1VeL1VeHxGPl6BHw/+2HKoz
      DVFMYrn8qGO450+oBcilE/QnC0hGloIpI5lFPMEYC+Y2n3IQXMjneO3VrTxzMEc4UsXdVy1j
      fsPE03obpsU//egV3n15GyvmVWYI07kS//jDV/itO9bSWl+Z2cwVdb7wwCbefXkbaxad/YJ+
      vfEs//n4Luqr/dx77XL8njeb0UypxM/27eGDq9by3e2buX3JcmoDU38nNTteQd/07/je/9+n
      369rC9axl3Fd/gfYwqZomCSLBVLFIslS5TlTLlM0dCRJwiUrhDSNoMdDSKs8gpqG363hd7lw
      ncUg9VyiH/kV3zme4beuun1U+SZ0iwyEI2TyZXS8+GUTyVeFsM3TxgTLqpvnjtl84OYNtLVU
      vBTHinc9ExLwiTvW8vkHNvGH792A3+vmS/+zifuuWUZTLPBmnKxL5g/v2cAXf/wqCJuV88fp
      lDaMadmYlk1JN3l2+1H2HB3i125cObIa+1vX4/WpKgVd58Wjh2mNVFPt8U6P9XqbNiDElykf
      fQWlZcMpdzOOb0ZpXIs9/Ht4FQVvIEjjGCKudLMssrpOTi+TLZcZyGc5nBgip+sUdB3DsgCB
      BIQ0D3ctW3nKoKjzSTGfwq0Fx6x3ExJAJhknmyvQUF+FbqkjK8WfKiZYCMGPn9/HJctbWD5v
      YhVxLKJhlY/dsoav/nw7Po+L69YtYOWCulGqDgdUPnPfZXz+gVc40JmgMRakNuInGvZSFfSi
      GxYd/SkOdydp704wlC6MxGOoioSqKKiKzKqFdfzVR69CPY2/ftTvZ89AH5/YcBnqNFon2WrZ
      gPmrz+H+8P8gqaOtM0II9P49uNZ9ZFyTViqg4cKvjW3pOXHzs4VAIHjh6BFeH+xnfVPLWX2O
      yUAv5/F66sdcA3pCAghV1RCqemtO+tAp9wXYc3SQroEM77924sHvp2JRczVXr5lLoWRwxcqW
      Uza5Ib/Gn37wCvZ1DDGQyrN5XzdDmQKJTBGXqtBaH2ZhYzX3XbucmogfZXhgO9EmfH1TC6os
      45pGlR9AaVqP2f4s+uZvoF32qdE7mCWwjUkb/J743pTh50vnzOV7O7awqr7xnHw3Qgis7m0o
      0QWVOZHTUCxl8VSPbWg5Z4mxMvkyP3hqN3/yoStGrCaTgSRJXLV67rj29XlcrGtrOGnbiTvV
      ZPVV51aNHXwy1SiNq5FCjVj9b1B64fMoscXINW3IkTlILi/WwBsotWeIxT4LvC4Xy2rr2N7T
      xcaW1kk/v9n+NMbrP6lMGAoLdc6lKPOuRK6aN+q3zZeKY5pA4RwJwBaCbz6ynXuvXU4kML0m
      R6bjIO2c4A6AZeC9/YtY8cPYySMYr/8EO3W8EjxSTCCH56C//hPkqrnI4WYkf81Zz4+8lQ3N
      rfzn9s2saWzCPUkWOaiYNY1dP8R7x7+C2w/lDGbHJvQt30KkO5Gr56M0X4zSuAYp2ECuVCTg
      HnuS85wI4JltR6kOeVm98OytMA7vDEmSkGuXYKc6UJvXQfM6YLgFFBbFhz+Ja82HEbl+rI5X
      MNJdiEIcECApFZeLQB2yNwKeCJI3jOQJI2mhyrMnhKSePtuFpqqsqGtga3cnl805derIiSAs
      ndJzn0W78o+RtGHfJU8YV9vNqItvAtvETh7F6tpK+cUvIfIDZPUwsfPVAvQlcrywq4O//Mi7
      Zs/ddpqiNK3H7NqG0rBqZJskSZWYXNtEnbPxpP3FsMsFtlVxt8gPVJ5LaUS2D3vgAKKcRpQy
      iFK6Mo6Q5Dd9lmQVyeWpxOe6fEihBlb7G/ivQYm10TCar+os60Ql/ludewVy7dJR70qSBIoL
      JbYYJbYYseoDICyMfbvPXwsQ9mt85t5Lcbum16BwNqI2raG49yHg/pO22wP7Tl2BJKWSsSFY
      B8G605xdDIfpVmJ0QVQC3o0ymKWK31K2DyndxUqXyitPfplLrKPDvk7DYtGCSN4IcqQVuXo+
      clUrUrDhlN0w8/hr2MljeDb+9riEVPk8KnnU8zcG8GouvNrkucM6nAWeCOg5hG2elDLG7NqK
      2nzxaQ4cD9LwjV8Bhius4kZyvcXaEqukjrnYsvjOtiYuW7MebdhdBmEiyjlEIY6dOo7Vvwdj
      /yOIbB9IEnLN0opTY+MaJE8IuxBHf/WreG7/4oTHKQWjsiLoWJzz9OgOU4ckScixNoo//wMk
      t3/E29Tq2437vtPPEk8mbkVhbWMzr3Ud56p5C4e3qpX5CX8MpaZtZF8hBFg69sA+zM7N6Lt/
      BKaBMApoV/whsm/iVjfTsnGdYi5nyuIBHM4PwtQR5fSISzXCBllFDtQwKhPzOcSwLP5rx1bM
      4ZV3JN5M1iVLEqosDz+Uyuo9I69lFEtHzg/gis5/c9tbnhXpLf/LEop0YruEIsv8ZM8uPr7+
      krP3BTodjgAczoQ4Ee0GJ7nN2MPerJWHNeLZ+laP15Fn8RYv2BPbR7aJkzxmLVF5HfZ4uWHh
      4jHHDU4XyOG8IUnSm23OWyqjAlM2kz71nkoODlOIIwCHWY0jAIdZzVkIQNDVcYTBRGbySuPg
      cJ75fyFrWBKiZQWKAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='64' name='Sheet 19' width='64'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFZklEQVR4nO3a3WtbdRzH8U8emjRp0qbturXV1vnMRAqjUJ1W6WRobyZ0IHgj/gPbjeBf
      4c3wZnMXMhV1OGHg5oYXRR1DvakymXQbY7SptZusbdKnpD2niRfT0TLB1s1F/bxfVyeH8Dvf
      QN6cnHMSqVarVQGmorUeAKglAoA1AoC1dQEMnzyuw+8c1vGTw1JpVucv5Te94OgP3+jQ0WN3
      bUDgnxRf++L8xava/8abiqmqc6c/1MdfXdbQ0JB2PtSiz84Ma+eze/T4toQuTxY0/vM1tbdk
      1NfXp+9HRrSzt1cRSUEso+jKXI0+DrA5684A+/a+pENvH9Qnp4bV39+vpwYGtae/V8dPnNKr
      r72ub784qeLslD49fVYvDDyvicsXNLNU1o8XLiry+xo9PT23toF/uzUBhFqJZLX/wAHdmLgi
      RaNanJ9XpVKR/rhTWq2qKqnvmeeUqY9rcHC3jh58S4/0DtRiduCORdduXs+P6t2j7+vFvfuk
      pm5tTxV1buQnvbJvr4598J52Db6sXHOHHutukyQ1bHlQ0WSDdj15380lSrM6cuSIJOmjE2fu
      9WcBNi1yJw/Cvvvyc5VSXdr9dM/dnAm4Z+4oAOC/jucAsEYAsEYAsBb/67fg/6RUKqlUKtV6
      jNukUqmazMUZANYIANYIwNhkfkw3Zop3edVAS0uByuXy315hI3NNjF/VxOS1dftKC0WNjeUV
      VtbuXVV5vqil4M/X4RrAWCKZUBAUNTUVaL4wrWpYVqwxp+vXZ9TRklZH18P6JX9FkVhCy8uh
      UqmYVqt1WpieVF1Th5ozSVWCZRXmF5XONClYKiiWiGolzCqXCVSYC1VXCbUSlboefULZDX7b
      NjJXEARKxJd17uuzau3oVEtzi7S6oge2dyt/ZVQz5agy8VXVN9ZrZXpRYa5DC5MXtXX7DnW1
      t946FgEYq1QqiiczKhULamxMa/TSlHZ03q+6aJ3aWnNKJePKZrJSrE6xRKi2lpwkaS4ZUTRe
      r7mFJXW2b1XzlpvrTYwX1LatW/PFBWUam7QaTivd0KZ0JqnN/ENyI3O1d3Ypna5XJagolW1W
      W2tOq0FJ42N5pbLN2paJaaHwq7LZVsXSrZorL6uhs1sNqcS6Y/Ek2Ax3gdbjGgDWCADWCADW
      CADWCADWCADWCADWCADWCADWCADW+CuEmSAIFIZhrce4TTwer8lcBABr/ASCNQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKAtd8A16dKZcHaSSgAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sugar year' width='192'>
      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
      yK/xa+wS/n83dWC57GOvjQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sugar1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sugar2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAbeklEQVR4nO2d2XMb2XXGv26AJAgQAHdRokaesTwz8VL2OHal4jhVqaSSqvwz+XfylGcn
      D3lIxdkqVVk8mZlYE3sWayEpcQUJgNh73+89eaCoEUWQQoO9oIn7e5JAoM/F8nXfe87X90hE
      RBAIphQ57QEIBGkSqQB0XY/ycCKuiAvOOQzDiO344gogmGqEAASZgTjHzrPH6A4uX4mYZ8P1
      +dnziGPv+RZU04WiKODMg2E6AADLsi68Lh//sAWCaCAiGKaBvHqKwHGhdOtw8iWQ0cHdu3fh
      ywU82XqBv/zTP4Kmmyg7NixdwUJpBvXDI9g+w/LGGnjzBD7l4Fq6EIAgO0iShLt370Gem0Xr
      uIZSdQmBpmN1sQpNN4C5HNZWFsHJg0wERbewUZ7H1vYeqtU13CnOQAmCV8fb2HwHUpRpUF3X
      US6XozqciCvignMOy7KwsLAQy/FTXQO4rvvq35wH8H0WyXEH3RYOjxuhX+c4Dhhj8F87S4SF
      +R68gF14b2/iuS44CI3jI1iuP3asUSAe4Kh2DMe5ejxx0O+c4qTZxrCzq+84CPMJO4aK+mnn
      +icRodU4hmEPf5+u44C/8RhnXrpToF63A9vUUaouo9s5QZ6qWN5chGX5ePf+3fGP2+shX1yE
      oigA89FTNMzmc5DyszB1FUsra1AVFUuLZVgeB7NVFCprCCwNK6uraHfbsFyGhYUSZshHkJuF
      qyqorm9ibblybWxHV2Hm5hGoHaiGjWK5DK3TRmXjPgJTQ2WxgtphAz/40ftotAfwHRe6PIOK
      FCDwOKyZWZQlhkKpDNP28d679yGN/UkA9eMaVu7cx9H+DubKK5jN+dAGBpbXNzBQFHzn4beR
      k28SYTi9Xg+GB8xwBzw3C8NyUSlI8GwTii7j3Y8+xKjXknqjjur6Ozg+3EVudh6lUhntTh8r
      i/PQbRfNkwZ+/NOfot48xbuFErYO9rG0vAQv4MjJHLZuQpJnkC8VMMM8cJJxOtDww+/eTzsL
      xDFfXoTVa8HhMnzXQ7NZw+NnO5EcvXawi9rxCeZKizA0BUq/A9200Dzaw+Pt5zg82MPT7ReY
      K5ZBgYO5PPB8dxeBR1hZLEG3PSiKAkXpoVhZhu/Yb405MzeL+sEuXM9DdWUFuqpjoVKFYyr4
      3eMnqDe7kGQJkGdRKeVh+xw58rGz8wwD3UOOOfj668fo9ft4sbsPdsMJ6tzsDGq1Y5Qqy5jN
      AZ5noLK0jm6jht99+TWsIJqr7jA8z4PHZZCj4bdfP0Gv3YIsA27IC2y1WkWn3YKiaNBMBy+2
      t4AccLS7g1qjh/LCPCRJRnWhiOODPVi+h+OTJgCCpfbw+OljdBUbrudB6bagWAFm8zJAfMrW
      AMyH7jCUS4Vk40bMNMWNew0Q6RQoCIJUqoVv5nbfhq5HM+8OGzcqpikuEcFxHMRlWYtUAPl8
      PpUzEwAR95bG5ZxDluXbmQUSCNIm1BXAUPs4Pu1jbbkEwwFk8rG5sYR6x8GDzbW4xigQxEY4
      AegaLN2AVpxDngjmoIUXjo/czAw452CMIbhBDn1cRNzbG5eIYo0bSgC5/AzmZnIAD2D5wNq9
      B+j1VZTnFyDLMnK5HPL55EsLIu7tjcs5jzVuqKOubWxibWPzwmOra3ciHZBAkCRiESyYajIr
      AMcLELA33R0CQTgyK4B6R4vdSCa4/WRWAF7AkZczO3zBhJDZX5DrJ58GFNw+MisAO6ylUCAY
      QnYF4AkBCG5OqDqANujitKNgbW0JmumhujCPaqUEVXexWI3HrHQVnpgCCSIglAAqS6tQdQut
      ZgNL6/dx+GIbq3fuQPVkVMrFREvlluO/jCdNlTVg2uJOlBWCBzYoN4fV5WUc1I5xb2MdjbaK
      tZXlxK0Qrs9exZsma8C0xZ0oK4Scn8eDzXkAwOpLS8TmO9EP6m0QEdyIbqAXTDeZXARzIvgx
      3ssqmB4yKQDGCZ64AggiIJsCYBy+8AEJIiCTAvADHttN0oLpIpMCcEQRTBARmRSA5fqQpOh3
      MxNMH5kUgO0GkIUABBGQSQEIJ6ggKkJ7gZ7vHmF1fRmOBwSuife/dQd7bRffe3g/rjFeQjhB
      BVERSgDlxRWsrVuQZQnFOULAGJ4e9rBULia6LYrleK95RIQX6DbHnSgvEDEXSyvrCOwBdBdY
      u/ceCqaB4nwpUS9QwAiSJAkv0BTEnTAvUAGVBQALd7H88rFy5fr98uNA3AsgiIpMLoIdcTO8
      ICIyJwAigiuMcIKIyJwAzpygwgckiIbMCUA4QQVRkj0BMA6fCQEIoiFzAjhzgqY9CsFtIXMC
      EE5QQZSEqgN4to79eg+r5RmYvgyJJ98hxnKEE1QQHaEEcHJSB5gMRfcgzxThKsl3iDEdFxII
      RBBWiCmIO1FWiNXVFRyfnKJYXoZh2FhPoUOMzwiyLINzElaIKYg7UVaIytIavr90caqTdIcY
      4QQVRIlYBAummswJQBTBBFGSOQEIJ6ggSrInAOEEFURIpgRARPCEE1QQIZkSgHCCCqImUwIQ
      TlBB1GRLAMIJKoiYUIWwTqOGrsVRgAPNBRy1jw/ffwd7bQ8/+f7DuMb4CuEEFURNKAFYlgWz
      q8BfuYPyPGF5fhnPjxWsL1cT8QKZtgsiAudceIGmJO5EeYEefPshpLk21pfL0D2gUpzD0rqP
      fD6fiBfI8TlysgxZloQXaEriTpQXSJJn8OCds9ZIhdLZY3Nzc5EP6iocL4BwQguiJFOLYNcP
      xL0AgkjJlAAsUQUWREymBOB6IgUqiJZsCUAUwQQRkykBOJ6YAgmiJVMCEHeDCaImMwIQTlBB
      HISqA6itBuq6i/IMgefmoSu9xDrECCeoIA7CNcjI58GtPvhSBaZpophPrkOMH3A4ng/Oz8xA
      wgoxHXEnygqRz+WQnytgfiYHVihgbWk9sQ4xPgvAGCGXO5u1CSvEdMSdKCvEwuIKfm9xBQCw
      /vKxpDrE+AGDMIIKoiYzi2BxM7wgDjIjAMvxRHNsQeRkRgDCCSqIgwwJgAknqCByMiMAW9gg
      BDGQGQEIJ6ggDrIjAOEEFcRAqDqArfZx2FGxVi3AcACZkusQI5yggjgIJQDdMECMwXACyEQw
      B8l1iDEdH5x/4wVKywpB/T1IlftAfm6qLAlpxZ0oK0SxVALva0AhB8sH1hLqEENECBiHLH8z
      Y0vLCuErR8gtPYAkLBiJMHFWiB+8tEKck0SHmElygnL1OO0hCCIkE4tgxgmun74VgpgPMlpp
      D0MQIdkQACMEE3AFIKsP8u20hyGIkEwIwJsQJyhXaoCUiY9MMCKZ+DYnpSsMV08ACDvGbSIT
      AhjoNnJy+j88Uk/SHoIgYoYK4LS2j18/egTNcpMez1AUw03dCEe+BbL7qY5BED1DBRCwAHPF
      Kgadych4aGb6QiSjA2KTMRUTRMclARiDJn7z5VMcvNjDxrcepDGmSwwMJ+0hiAXwLeXSN1pa
      XMWH792H7TiXMi88cPDfH3+G/edbODpp4tFnn0HpHOO3T/diGyDjHKbtxXb8UeHqSerTMEH0
      XKoES9IMdE9Dv9m59OSToxoIAaSZAtrtNu5txN8hxvUZDNu7dDdYsl4gAlNOQJwDkgzGGCAF
      U+XJSStu4l4gS+1C0wkPv/sQuTf+9uDhB1jffIDANVEsL2KxXIy9Q8zA9EAAcvLFi1WSXiBy
      VASeDkmWQZCQy+WEFyghEvcCFaur2Fxfxt7hKRiAmTf+XigUgEIBCy//H3eHmL6WfgqUaw0Q
      cUjSm6cEQdYZKqsPf/AR3n3fRSHp0QxBNZzU595cOYYkT+eP3/Z9FPL51L+DuBia1nj06X/j
      b/76b2AlPZohqJOQAtXqaQ8hNeqaMhE2lLgYegW4f+8utB9I4bzSMaGknAIlHoDrp6mOIU1u
      +47cQ68AzdM2VleXU3e9cE4wUk6Bkq2APDPVMaSJ6aefgo6ToQIozBfg+elXPX3GUhcAV44x
      zTty2RPwO4iToQJwnT4+/a/PkfZbNx0fjKc7AyX1GNIUV4CtW34FGL4GeO8j/NVP/gzJtcAe
      TntgppoCJSLw/n5q8dOGcQ5nAu7Ei5OhAnDVNv5n+xB/8qc/u1AH4IGDjz/7At+6twzNBRy1
      jw/ffwd7bQ8/+f7DyAenpJ0C9S1we5D6WigtbN8H3eoc0BUCqJ92oDZb+NWvZ/Dnf/jTV4+f
      WyFcmkV5Hliej9cKoej2ha1QXicJKwQ7+QLEGeh1CUyRFUJ3bODl58wTjPs6qWyL8qOPfoR8
      pYnvfufdC4+fWyHAPOgeUCnOxWqF0CzvwlYorxOnFYKYD3/rl+CNLyG/UQCbJiuExzlk+ez9
      ypI0HVYIAGjU99FvOpj9/R9e+luhUABQQKF09v+4rBBppUC50Yb/9d+BzO5UL36B278ABq4Q
      QGmhCifQLvmAksRnDIbjJ9oUgzW+gr/1S4AHU536PMe+5Qtg4Io06MzMPMhWkWYN1rC8Vx0h
      k4C1t+A9/vuzH78AwHRcAS4JIPBd9Hp9VO7cTdUM10/4RnjWejq1hrercIK0K0Hxc1kAro2j
      w1189cXjVAthSaZAiQfgvfjuassqljeFV4DCwiK+/cGHuLucTPvTq0jSBUr6KcjVE4uXBTjn
      8NjtNsIBQ2+Kb6Pd0fCd7/9eqm5QxUhOAKy9JaY/b2AHATjd7iIYcNXGWJIEEFKrAXIi6Ant
      SURE4N0XicTKEpY/HW1pL53kF5bW8cc/Xx/2XBhqH/uHDVQWi5By89CVHt7/1h3stV187+H9
      yAYVBPzljfAJfAGuBq6f3to7nsbltrtAzwk1yymVigiYj5ych26aKOYZnh72sFQuRmqF0C0X
      AePXZoGiskLw1jaIOIhGFMCUWCF0xwERvbIiZMkKwcznyJU+GOm54VokaTqKxQXMzORQKBSw
      trSOgmmgOF+K1AqhmDpyOfnaS3BUVgivv3vJ7nAd02KF8DiDLMuQpGxZIXigI3CPkK9+b6Tn
      h3o3leU1VJYvNsMrV6LPFqmGk8j8kwIPfHAYe5wsktUiWGDshNrBbyLNLkndB8zVmmh4cQVZ
      vA+AiMDM3VCvmUgBJFUD4O1tkf68gixeAYiZYG4j1GsmTgBElMi27EQcvBfubDEtcCK4KSzu
      b0pgbIfevGziBBAwnogNmqweuNmNPU4WcQI/c0WwcaY/wAQKwPaCRFqi8vbO1Pv9r8LyslcE
      G2f6A0ygALqqlciHz7o7wvN/BVksggXGzlh7t06cAPqaDTlmGzT5luj3dQ1ZWwATEZg1np0l
      VB3AtXQ0ezo2lhegu4QZmVCtlKDqLharC28/wAj09fhToHxQA/FATIGuwA6CTFlDiJlgTmOs
      K0AoAUgAeq02/MBFjghar43VO3egejIq5WIkpfKuYl65E8Tr3MQKwQZHIDrLBIUmJSuE88UX
      KPzwh0A+H3tcw3FefQckSRNvhQi0LRBJr75PifORxxlKAI7jgPkOAr8A2wfWNtbRaKtYW1mO
      xAoRMA7dvnoniNe5iRWC682RYgwjDSsEMQZ/dxelH/84kbjnNggAE2+FICL4zt6F71OW5ZHH
      GdoK8Qc/u2iF2HwnzBGux/EC2G6AfC6+qQlxBm5ka7dn7/AIZCVXsbYytAi+yfQHmLBFcBIZ
      IHJUkGvEGiNq3K1niWWsOBGcDAmAmeNlf86ZKAH01PgzQFzN1m7PTFXh18Pnt8fFDQJQhopg
      gXVwo9dPlAD6evyXeVJPMpX9cbe2E41n+V5mThBEHNy7WTV/Yn4JRISeFr8AuJbM2dR5+gzG
      xx+DG+NPt4gxuM+fJ5qStH1/IjYDPh4cvfU5xCxQcLPp7MQIgHOCFrMLlJgPMtqxxgAAblmw
      Hj2Ct72DwS/+FubH/wNuhO8y4x8dgVvJdmqbhCLYYf8Av9r7j7c+jzsNQLpZVmpiBOD4ASw3
      3sUX2QOQH/8Pynr0CHi5kJQAuNvbGPziFzA/+QQUYqsR59kWpDHTteNi+36qRbCO0cZ/PP+3
      kZ7LvPaNxzoxAuiqduwZIK7UgJh7/fqtFrwXu5fm0RIA58lTeAejLdqYpsFvJN+dMs0UqO5q
      +NetX4KPWKDk7s2v5hMjgJ5qJZABOon17Eacw/r0syv/LskynN89HinL4m5tpbIvTVopUC9w
      8S/P/hFuMJoVJooFMBCyEGZqfTx7to/ycgnzxUWc1g4i6xATewaIKPZ+v+7z5wg6nWtFFrTb
      CE5bmLm7ceVz0lj8npPGGoATx79t/zM0Rw3xIgcU6JDkm60BQr2aSMKDh98GdzSctNu4txFd
      h5hRPUDfjCWkFyhwwYwuECLGUK7wApHnwfz1o1dbiVyH9dWXKK39xZV/93Z3wQzzwjRKks/j
      xtcRBwBs38Prw0/CC/TFyf+hqV48OXFOCF7WJIbFZdYJCBJoyPcZmxcI4FAHA6ytLeHBfBWL
      5WIkHWIY59BtP5Q/J6wXiJunkLh34zPGVV4g89HngOuO9B7Y8Qkk00SuWr08TtuG+/nnkHNv
      rFWk+D1ITuCDIF2YisbtBSIi7PdfXPrcZFlCPp+/0gvEg+6V29nE5gVaqK7gg+rKhcei6BDj
      egym48fqATrr9xvPApipKtynT0NNWZwnT1D6+c8vPW5+8im4nU5zQMtLfv7fs7pQbAW5kJsT
      cC+adPZELIK7mhV78THOBTDXtFDpTQBwd56DuxfrHt7+Prz9/dTSkHaQfBHseXsr9I8/qgUw
      MCEC6Kk2cjHmu4kosQrwqJDvX7A5cMeB+cmnqf34iQgvup3EY+6NszEx98D9EAvma5gIAcSe
      AfJtwO7HGyMkkiTBffr01ZXD+uQTcDu9TbqetJromkaiAmxqdVhjFCaZ2wy1+9t1pNkC4BX9
      mD1A3DgFcTZxm2AxXYd3eHgmhr30pj5NTcVO5+ZV1bA87+xAHuOHzN1WZIbG1AXAOI99JzhS
      jifuxw+cpTbt3/wG5Ca0FfwQTM/D5ye1xONz4jgYc2My7kU3VUtdAJ7PYNhevBmgmAtgN4Gr
      WmqxGef439oBgpvWRsagNjiEx7zQVwAiAnejE0Dqa4CeZseaASLi4FozvgAZ5qtmHUoK6w4C
      YXfM6Q/IAw+U8K9Th/eAC22FqNV7WF1dgOkAMvnY3FhCvePgweba2w8whK5qxZoBgmeCHCVT
      N8EkQVNTcdDvpTL1YpzhoD/enVzcbY0X9LgB5B8ApfkLD4cSQHGhivlZFYYTIEcEc9DCC8dH
      bmZmbCtEWAvEOaNaIUhtgjjDqA1g3soQKwRj/MwCEeNUImorRENTR7JtxGGF2O3ugPPr6yZX
      WSECu3FhC5RhDLNCyJwD+0fg3/3OhcdDCaBVr8EOAhTzgOUDa/ceoNdXUZ5fGNsKoZij2Qfe
      ZFQrROBpkOV8ZLf5DbNCUO6sk0qs3v2IrRCK44z0uUdthSAiHPT33hr7KitE4PdGeO0QK4Qs
      AwMVsmkD1fKrh0O9m4133sObHsbVtTthDnEBzglqzO1QyVEzc49rUjDOoTjp1Bw85qGmHI01
      /yeim2WAJAk4OAY++qZ9UqoTY9cPYDgx22+d9LIsk4ri2Kltf/5V/TeQxjVcUADu37CgqRtA
      d/Dqv6kK4LRvjv9hjIjoAH+ZnmUl7vkhIvxq7z/xdf3LsRfekRjgJAk4PMa55zvVOsCLk378
      O0E7Y6TMbjl9y0w0++MFHv5955/RUOs3isvd0xttgvUK2wFaHWBjPT0BBIzj4HTw9ifeAOJM
      NMEbQt9ObqcJ3dHwL1v/CNVWbiw65kbU0UeSgKM6sLaangBOOhpcj8V7BWAukMAuEFnCDQJY
      XjLWi57ZxT89/Qd4zI0mHo8wYeL5QK2e3hrgeRLTH98B8ew1e4uTvhV+f6Jx+br+xcg3uSeO
      JAEnzXQEwBjHQTP+ubmY/1+ml9D0h4ijNjic7EYbkhTypngWQDVs5MhD3/BQXZgfq0PMcUeD
      6wXxXwFsJZpF0y2ib1mJ/CgbWgMuc8fz+yRIuBZJrgtd12FpPSyu38fhi+2xOsTs1LoACJyP
      n4sexQrBrMFZvjvKnHfGrRB9K+TuG2NaIfY6LwDCyJtcvckwKwQnPtLYr7RCDHltKAGwwMPx
      8RHeffAAtdox7o3RIYYxjqOWNnaHlnNGsUKQp4Mitidk2Qqhuw58zkN99uNaIY6Vwxt9x8Os
      EIEkj/R9XmmFGPLaUJ9iqbKEP/rZzwAA9zY3AYTvEHPS0eAkMP0BkLlGGHGTVAGsZ3ahu3ro
      m93TIPEJWhLZn3PEIvgiSRXA9nu7Ez/3PyfRUSaV/QFeFsE8UQN4naQKYIf99O5vDkuiAjif
      /iQC80QR7DUY51Cd+HPyuqujZ0ZUsU2ARAWQ6PQncEA8O83e4kaxk3GAHmRo+gMkKADGk5v+
      AADC7DQ8BfRsM5EFcJamP0CCAqi11OSmPzjrBhN3M4wskUQBzA0cNCdsB763kYgAiAiP9zuJ
      TX8AgBwtU2eiuOkn0GvsoLcX+/0dUZOIAEzHx1Er2ZQkiSnQK5zAT6TxxWH/IHMnnVCFMNtQ
      UTvtYxYuNBdw1P5IHWKeHCS/7Z64E+wbegmc/RkPcKLUYo8TNaEEML9QRblownWB8jxhef7t
      HWI4EZ4etMfa+uQ63uYFYtYgHm9OBr1A263TkbZAGcaoXqDD/j4CHkQ2BZpIL5CpDWAYBjY2
      NuAyoFKce2uHmIOmAtMJbuz9eZPrvEBEHEFgx+LNyZoXqKGpGDj22J//qF6glnkKWZIju9JP
      rBfog8rShceu6xBDRHh80E508QtAFMFewonwpNVMZPrZ0pOJEzWxLoJNx8fRaQp+HN8FsfQ7
      nqfN0aAPLYHqL+MMXSPZ5hpREasA0lj8AgC5IgPEOMez9mkin3/bOAWl0dQ4AmITAOeEZ0fp
      eEJEEQzY7XVgJ9T0uqk1Mpf/Pyc2AdTaKgwrnWnItBfBvCDAdoIdX1p6MleaOIhFAGeV3xQW
      v+fxp/w+gO1OG37IrpU3oaWfJhYramIRgO0FOEhj8fuSab4TzPI97PY6iZ2RVVuBk+HNx2IR
      gOOeFYfSYpqvAL9rNhLd+LapNTJlf36TsXaG67bqMH0ZEr95h5ioIeIgN7nNnyaJtqHjRL35
      FoRhyGr+/5yxBGAaJli+CFcZ3iGGMXa2l3uM1oArrRDMA/fMoWXvSJhQKwQnwm/rx2NbHq7i
      bVaIptaI5XueSCvEOaVSCW3VxvoVHWJyuRwkSYrc/vA6V1khKLAgcQ+SHM+2p5NqhdjutGB6
      XuSf+XVWCI95UOxBLLs/TKQV4pzVjU2svmwVc5MOMXFAroaM1mTGxvI8bLVbiU9FTjM+/wcm
      oE1q1JA1GKr028xXzTpYCr1+T/Xst5+9db8UcrWpaol6qmtoaGoqC9GWlt0C2Dm37pcyTSlQ
      xjm+bJyk47ciQtvIbgHsnP8H6SZbqmspskYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sugar3' width='192'>
      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
      zf8DCMz/J0GGZigAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Worldwide' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='obe map' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='pop' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='pop map' width='192'>
      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
    </thumbnail>
    <thumbnail height='92' name='pop#' width='192'>
      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
      BhWHhssAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='pop1' width='192'>
      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
      LTpdLAsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='62' name='sug#' width='192'>
      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
      hRGN/wdx3ITXK+R9fgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
